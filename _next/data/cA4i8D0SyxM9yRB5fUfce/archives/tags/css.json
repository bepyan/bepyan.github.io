{"pageProps":{"tag":"css","posts":[],"snippets":[{"title":"(Next.js) document fonts","description":"","icon":"","image":"","tags":["Next.js","css","tailwindcss"],"draft":false,"date":"2022-12-19","content":"\n적절한 폰트를 찾는다.\n**https://fonts.google.com/**\n\n<br />\n\n```tsx:_document.tsx\n<Head>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossOrigin=\"anonymous\" />\n  <link\n      href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800;900&display=swap\"\n      rel=\"stylesheet\"\n  />\n</Head>\n```\n\n```css:globals.css\n@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800;900&display=swap');\n\n* {\n  font-family: 'Inter', sans-serif;\n}\n```\n\n---\n\n`tailwindcss`\n\n```js:tailwind.config.js\nconst { fontFamily } = require('tailwindcss/defaultTheme');\n\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  //...\n  theme: {\n    extend: {\n      fontFamily: {\n        sans: ['inter', ...fontFamily.sans],\n      },\n      //...\n    }\n};\n```\n\n```tsx:_app.tsx\n<div className=\"font-sans\">\n  <Component {...pageProps} />\n</div>\n```\n","slug":"/snippets/next.js/document-fonts","readingMinutes":1,"wordCount":74,"snippetSlug":"next.js"},{"title":"(CSS) input focus시 border 제거","description":"","icon":"","image":"","tags":["css"],"draft":false,"date":"2022-12-17","content":"\n`input`이 포커스 될 시 스타일은 [`outline`](https://developer.mozilla.org/ko/docs/Web/CSS/outline) 속성이 활용된다.\n\n```css\ninput:focus {\n  outline: none;\n}\n```\n\n<br />\n\n`tailwind`\n\n```html\n<input className=\"focus:outline-none\" />\n```\n","slug":"/snippets/css/input-focus","readingMinutes":1,"wordCount":25,"snippetSlug":"css"},{"title":"(CSS) scroll bar 제거","description":"","icon":"","image":"","tags":["css"],"draft":false,"date":"2022-12-17","content":"\n스크롤은 동작하지만 스크롤바를 숨기고 싶을 때가 있다.\n\n```css\nbody {\n  -ms-overflow-style: none; /* IE and Edge */\n  scrollbar-width: none; /* Firefox */\n}\nbody::-webkit-scrollbar {\n  display: none; /* Chrome, Safari, Opera*/\n}\n```\n\n특정 엘리먼트의 스크롤바를 숨기고 싶다면 `body` 대신 클래스명을 입력하면 된다.\n\n```css\n.no-scrollbar {\n  -ms-overflow-style: none; /* IE and Edge */\n  scrollbar-width: none; /* Firefox */\n}\n.no-scrollbar::-webkit-scrollbar {\n  display: none; /* Chrome, Safari, Opera*/\n}\n```\n","slug":"/snippets/css/remove-scrollbar","readingMinutes":1,"wordCount":71,"snippetSlug":"css"},{"title":"(React) scroll progress bar","description":"","icon":"","image":"","tags":["Next.js","React","css"],"draft":false,"date":"2022-12-17","content":"\n`Next.js` 기준으로 [**Styled JSX**](https://github.com/vercel/styled-jsx)를 활용하여 구현했다.\n\n```tsx\nimport { useEffect, useState } from 'react';\n\nexport default function ReadingProgressBar() {\n  const [width, setWidth] = useState(0);\n\n  const scrollHeight = () => {\n    const element = document.documentElement;\n    const ScrollTop = element.scrollTop || document.body.scrollTop;\n    const ScrollHeight = element.scrollHeight || document.body.scrollHeight;\n    const percent = (ScrollTop / (ScrollHeight - element.clientHeight)) * 100;\n\n    setWidth(percent);\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', scrollHeight);\n    return () => window.removeEventListener('scroll', scrollHeight);\n  }, []);\n\n  return (\n    <div className=\"progressBar\" style={{ width: `${width}%` }}>\n      <style jsx>{`\n        .progressBar {\n          position: fixed;\n          z-index: 50;\n          top: 0px;\n          left: 0px;\n          height: 6px;\n          border-radius: 0px 2px 0px 0px;\n          background: linear-gradient(90deg, #ffdd00, #fbb034);\n        }\n      `}</style>\n    </div>\n  );\n}\n```\n\n---\n\n**참고 자료**\n\n- https://blog.logrocket.com/creating-reading-progress-bar-react/\n","slug":"/snippets/react/reading-progress-bar","readingMinutes":1,"wordCount":114,"snippetSlug":"react"},{"title":"(CSS) font-face 적용","description":"","icon":"","image":"","tags":["css"],"draft":false,"date":"2022-12-06","content":"\nstitches에서 font-face를 적용하려하는데 계속 실패를했다...\n\n[시키는 대로](https://stitches.dev/docs/styling#font-face-rules) 했는데 말이다 🥲\n\nwebpack 관련 문제일까... 결국 css파일로 문제를 해결했다!\n\n[webpack](https://webpack.js.org/guides/asset-management/)에서 말하는 폰트를 가져오는 법\n\n```jsx\nmodule: {\n  rules: [\n    {\n      test: /\\.css$/i,\n      use: ['style-loader', 'css-loader'],\n    },\n\t\t{\n      test: /\\.(woff|woff2|eot|ttf|otf)$/i,\n      type: 'asset/resource',\n    },\n  ],\n},\n```\n\ncss\n\n```jsx\n@font-face {\n  font-family: 'Noto Sans KR';\n  src: local('Noto Sans KR'), url('../assets/fonts/NotoSansKR-Regular.otf');\n}\n```\n\n`local`\n\n로컬 컴퓨터에서 해당 폰트가 있으면 그것을 사용\n\n`url`\n\n링크할 url 경로\n\n**폰트의 weight을 적용시키는 법**\n\n---\n\n```css\n@font-face {\n  font-family: 'Noto Sans KR';\n  src: local('Noto Sans KR'), url('../assets/fonts/NotoSansKR-Regular.otf');\n  font-weight: 400;\n}\n\n@font-face {\n  font-family: 'Noto Sans KR';\n  src: url('../assets/fonts/NotoSansKR-Medium.otf');\n  font-weight: 500;\n}\n\n@font-face {\n  font-family: 'Noto Sans KR';\n  src: url('../assets/fonts/NotoSansKR-Bold.otf');\n  font-weight: 700;\n}\n```\n\n글씨 폰트를 하나의 font-family에 묶을 수 있다.\n\n---\n\n**참고 자료**\n\n- https://developer.mozilla.org/ko/docs/Web/CSS/@font-face\n","slug":"/snippets/css/font-face","readingMinutes":1,"wordCount":127,"snippetSlug":"css"},{"title":"(CSS) svg 넣기","description":"","icon":"","image":"","tags":["css"],"draft":false,"date":"2022-11-25","content":"\n기본적으로 `content` 속성에 url로 svg 이미지를 넣을 수 있다.\n\nhttps://stackoverflow.com/questions/19255296/is-there-a-way-to-use-svg-as-content-in-a-pseudo-element-before-or-after\n\n```tsx\n#test::before {\n  content: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='100' cy='50' r='40' stroke='black' stroke-width='2' fill='red'/%3E%3Cpolyline points='20,20 40,25 60,40 80,120 120,140 200,180' style='fill:none;stroke:black;stroke-width:3'/%3E%3C/svg%3E \");\n  width: 200px;\n  height: 200px;\n}\n```\n\n기존 svg를 url형태로 파싱을 해야하는데 아래 사이트에서 도움을 받을 수 있다.\n\nhttps://yoksel.github.io/url-encoder/\n\n하지만 만약 색상을 동적으로 변경을 해야한다면?\n\n`mask-image`을 활용한다.\n\nhttps://codepen.io/noahblon/post/coloring-svgs-in-css-background-images\n\n```tsx\n.icon {\n    background-color: red;\n    -webkit-mask-image: url(icon.svg);\n    mask-image: url(icon.svg);\n}\n```\n\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/mask-image#browser_compatibility\n\n브라우저 호환성이 조..금 빡세다.\n\n위치를 조정하고 싶다면?\n\n`mask-position` 을 활용하자.\n\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Backgrounds_and_Borders/Resizing_background_images\n\n```tsx\n.prose .anchor:after {\n  content: ' ';\n  mask-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='none' aria-hidden='true'%3E%3Cpath d='M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10' stroke='currentColor' strokeWidth='1.5' strokeLinecap='round' /%3E%3C/svg%3E\");\n  mask-repeat: no-repeat;\n  mask-position: center;\n\n  @apply h-4 w-4 bg-gray-700 dark:bg-gray-300;\n}\n```\n","slug":"/snippets/css/insert-svg","readingMinutes":1,"wordCount":116,"snippetSlug":"css"}]},"__N_SSG":true}