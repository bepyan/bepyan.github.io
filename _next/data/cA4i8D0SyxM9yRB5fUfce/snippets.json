{"pageProps":{"snippetList":[{"key":"javascript","postList":[{"title":"(JS) FormData로 submit 다루기","description":"form event를 쉽게 다룰 수 있습니다.","icon":"","image":"","tags":["javascript"],"draft":false,"date":"2022-12-06","content":"\n기본적인 활용법\n\n```js\nconst submitHandle = (e) => {\n  e.preventDefault();\n  const formData = new FormData(e.target);\n  const formDataObj = Object.fromEntries(myFormData.entries());\n\n  console.log(formDataObj);\n};\n```\n\n`checkbox` 같이 여러 값이 있는 경우가 있습니다.\n그럴 경우 [`FormData.getAll()`](https://developer.mozilla.org/en-US/docs/Web/API/FormData/getAll)를 활용하여 값을 덮어씌워줘야 합니다.\n\n```js\nconst submitHandle = (e) => {\n  e.preventDefault();\n  const formData = new FormData(e.target);\n  const formDataObj = Object.fromEntries(myFormData.entries());\n  formDataObj.checkboxList = formData.getAll('checkboxList');\n\n  console.log(formDataObj);\n};\n```\n\n---\n\n폐기된 함수들...\n\n```js\nconst submitHandle = (e) => {\n  e.preventDefault();\n  const formData = new FormData(e.target);\n  const formDataObj = Array.from(formData.keys()).reduce((ac, key) => {\n    const dataList = formData.getAll(key);\n    ac[key] = dataList.length > 1 ? dataList : dataList[0];\n    return { ...ac };\n  }, {});\n\n  console.log(formDataObj);\n};\n```\n","slug":"/snippets/javascript/form-data","readingMinutes":1,"wordCount":106,"snippetSlug":"javascript"},{"title":"(JS) console.log 추가 기능","description":"","icon":"","image":"","tags":["javascript"],"draft":false,"date":"2022-09-23","content":"\n### CSS style\n\n```jsx\nconsole.log('%cfatfish', 'color: red;');\n```\n\n```jsx\nconst getLogStyle = (code) => {\n  const style = 'padding: 4px 8px;';\n\n  if (code >= 200 && code < 300) {\n    return `${style} background: #C2E0C6; color: #000000;`;\n  }\n\n  if (code >= 400 && code < 600) {\n    return `${style} background: #FEF0F0; color: #FF0000;`;\n  }\n\n  return `${style} background: #FEF2C0; color: #000000;`;\n};\n\nconsole.log(`%c${message}`, getLogStyle(code));\n```\n\n### `console.time() & console.timeEnd()`\n\n```jsx\nlet count = 0;\n\nconsole.time();\nfor (let i = 0; i < 1000000000; i++) {\n  count++;\n}\nconsole.timeEnd();\n```\n\n### `console.table()`\n\narray 로그를 찍어 볼 때 유용한 것 같다!\n\n### `groupCollapsed`\n\n```jsx\nconsole.groupCollapsed(`%c${groupTitle}`, getLogStyle(data.code));\nconsole.log('>>> response', response);\nparams && console.log('>>> params', params);\n\nif (data.code !== 200) {\n  console.log('>>> data', data);\n} else {\n  console.log('>>> data', data.data);\n}\n\nconsole.groupEnd();\n```\n","slug":"/snippets/javascript/console","readingMinutes":1,"wordCount":129,"snippetSlug":"javascript"},{"title":"(JS) 클립보드 복사하기","description":"","icon":"","image":"","tags":["javascript","clipboard"],"draft":false,"date":"2022-09-19","content":"\n```tsx\nexport const copyClipboard = async (url = window.document.location.href) => {\n  try {\n    await navigator.clipboard.writeText(url);\n    alert('링크가 복사되었습니다.');\n  } catch (e) {\n    console.error(e);\n    alert('클립보드 복사에 실패했습니다.');\n  }\n};\n```\n\nhttps://web.dev/i18n/ko/async-clipboard/\n\n---\n\n레거시 방법\n\n```tsx\nexport const copyURL = () => {\n  let currentUrl = window.document.location.href;\n  let t = document.createElement(\"textarea\");\n  document.body.appendChild(t);\n  t.value = currentUrl;\n  t.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(t);\n\n  alert(\"링크가 복사되었습니다.\");\n};\n```\n\nhttps://sezzled.tistory.com/138","slug":"/snippets/javascript/clipboard","readingMinutes":1,"wordCount":61,"snippetSlug":"javascript"},{"title":"(JS) .txt File 만들기","description":"","icon":"","image":"","tags":["javascript"],"draft":false,"date":"2022-09-03","content":"\nblob을 활용\n\n```tsx\nconst blob = new Blob([JSON.stringify(data)], { type: 'text/plain' });\nconst textFile = window.URL.createObjectURL(blob);\n\nwindow.open(textFile, '_blank');\n```\n\nFile\n\n```tsx\nconst fileName = `${moment(new Date()).format('YYYY-MM-DD HH:mm:ss')}.txt`;\nconst file = new File([JSON.stringify(data)], fileName, {\n  type: 'text/plain;charset=UTF-8',\n});\n```\n\n하지만 한글이 깨지는 문제가 있다.\n\nhttps://www.thecodehubs.com/generate-text-file-using-plain-javascript/\n\n","slug":"/snippets/javascript/txt-file","readingMinutes":1,"wordCount":46,"snippetSlug":"javascript"},{"title":"(JS) regex로 버전 추출하기","description":"","icon":"","image":"","tags":["javascript","regex"],"draft":false,"date":"2022-06-30","content":"\n```jsx\nconst REGEX = /\\d+(\\.\\d+)+/gi;\nconsole.log(''.match(REGEX));\n```\n\nhttps://stackoverflow.com/questions/8955657/regex-pattern-to-extract-version-number-from-string)\n\n네이버 userAgent에서 네이버 버전 추출하기\n\n```jsx\nconst NAVER_USERAGENT_REGEX = /\\d+(\\.\\d+)+/gi;\nconst agent =\n  'Mozilla/5.0 (iPhone; CPU iPhone OS 15_5 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.5 Mobile/15E148 Safari/605.1 NAVER(inapp; search; 1010; 11.12.7; 12MINI)';\nconst version = agent.match(NAVER_USERAGENT_REGEX);\n\nconsole.log(version);\n```\n\n정규식 문법\n[https://heropy.blog/2018/10/28/regexp/](https://heropy.blog/2018/10/28/regexp/)\n\n`^naver` 문자열이 naver로 시작해야 한다.\n\n`$naver` 문자열이 naver로 끝나야 한다.\n\n`\\d{5}` 숫자 5개가 있어야 한다. ⇒ `\\d\\d\\d\\d\\d`\n\n`\\d{3,5}` 숫자가 3~5개 있어야 한다.\n\n`\\d+` 1개 이상이 있어야 한다. ⇒ `\\d{1,}`\n\n`\\d*` 0개 이상 있어야 한다. ⇒ `\\d{0, }`\n\n`\\d?` 0, 1개 있어야 한다. ⇒ `\\d{0,1}`\n\n`\\d$` 줄 끝에서 일치 한다.\n\n`.` 임의의 한 문자와 일치\n\n`[ab]` a 혹은 b와 일치여부 ⇒ `a | b`\n\n테스트 공간\n[https://regexr.com/](https://regexr.com/)\n\n**`match()`**\n메서드는 문자열이 정규식과 매치되는 부분을 검색합니다.\n","slug":"/snippets/javascript/version-regex","readingMinutes":2,"wordCount":127,"snippetSlug":"javascript"}]},{"key":"css","postList":[{"title":"(CSS) input focus시 border 제거","description":"","icon":"","image":"","tags":["css"],"draft":false,"date":"2022-12-17","content":"\n`input`이 포커스 될 시 스타일은 [`outline`](https://developer.mozilla.org/ko/docs/Web/CSS/outline) 속성이 활용된다.\n\n```css\ninput:focus {\n  outline: none;\n}\n```\n\n<br />\n\n`tailwind`\n\n```html\n<input className=\"focus:outline-none\" />\n```\n","slug":"/snippets/css/input-focus","readingMinutes":1,"wordCount":25,"snippetSlug":"css"},{"title":"(CSS) scroll bar 제거","description":"","icon":"","image":"","tags":["css"],"draft":false,"date":"2022-12-17","content":"\n스크롤은 동작하지만 스크롤바를 숨기고 싶을 때가 있다.\n\n```css\nbody {\n  -ms-overflow-style: none; /* IE and Edge */\n  scrollbar-width: none; /* Firefox */\n}\nbody::-webkit-scrollbar {\n  display: none; /* Chrome, Safari, Opera*/\n}\n```\n\n특정 엘리먼트의 스크롤바를 숨기고 싶다면 `body` 대신 클래스명을 입력하면 된다.\n\n```css\n.no-scrollbar {\n  -ms-overflow-style: none; /* IE and Edge */\n  scrollbar-width: none; /* Firefox */\n}\n.no-scrollbar::-webkit-scrollbar {\n  display: none; /* Chrome, Safari, Opera*/\n}\n```\n","slug":"/snippets/css/remove-scrollbar","readingMinutes":1,"wordCount":71,"snippetSlug":"css"},{"title":"(CSS) font-face 적용","description":"","icon":"","image":"","tags":["css"],"draft":false,"date":"2022-12-06","content":"\nstitches에서 font-face를 적용하려하는데 계속 실패를했다...\n\n[시키는 대로](https://stitches.dev/docs/styling#font-face-rules) 했는데 말이다 🥲\n\nwebpack 관련 문제일까... 결국 css파일로 문제를 해결했다!\n\n[webpack](https://webpack.js.org/guides/asset-management/)에서 말하는 폰트를 가져오는 법\n\n```jsx\nmodule: {\n  rules: [\n    {\n      test: /\\.css$/i,\n      use: ['style-loader', 'css-loader'],\n    },\n\t\t{\n      test: /\\.(woff|woff2|eot|ttf|otf)$/i,\n      type: 'asset/resource',\n    },\n  ],\n},\n```\n\ncss\n\n```jsx\n@font-face {\n  font-family: 'Noto Sans KR';\n  src: local('Noto Sans KR'), url('../assets/fonts/NotoSansKR-Regular.otf');\n}\n```\n\n`local`\n\n로컬 컴퓨터에서 해당 폰트가 있으면 그것을 사용\n\n`url`\n\n링크할 url 경로\n\n**폰트의 weight을 적용시키는 법**\n\n---\n\n```css\n@font-face {\n  font-family: 'Noto Sans KR';\n  src: local('Noto Sans KR'), url('../assets/fonts/NotoSansKR-Regular.otf');\n  font-weight: 400;\n}\n\n@font-face {\n  font-family: 'Noto Sans KR';\n  src: url('../assets/fonts/NotoSansKR-Medium.otf');\n  font-weight: 500;\n}\n\n@font-face {\n  font-family: 'Noto Sans KR';\n  src: url('../assets/fonts/NotoSansKR-Bold.otf');\n  font-weight: 700;\n}\n```\n\n글씨 폰트를 하나의 font-family에 묶을 수 있다.\n\n---\n\n**참고 자료**\n\n- https://developer.mozilla.org/ko/docs/Web/CSS/@font-face\n","slug":"/snippets/css/font-face","readingMinutes":1,"wordCount":127,"snippetSlug":"css"},{"title":"(CSS) svg 넣기","description":"","icon":"","image":"","tags":["css"],"draft":false,"date":"2022-11-25","content":"\n기본적으로 `content` 속성에 url로 svg 이미지를 넣을 수 있다.\n\nhttps://stackoverflow.com/questions/19255296/is-there-a-way-to-use-svg-as-content-in-a-pseudo-element-before-or-after\n\n```tsx\n#test::before {\n  content: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='100' cy='50' r='40' stroke='black' stroke-width='2' fill='red'/%3E%3Cpolyline points='20,20 40,25 60,40 80,120 120,140 200,180' style='fill:none;stroke:black;stroke-width:3'/%3E%3C/svg%3E \");\n  width: 200px;\n  height: 200px;\n}\n```\n\n기존 svg를 url형태로 파싱을 해야하는데 아래 사이트에서 도움을 받을 수 있다.\n\nhttps://yoksel.github.io/url-encoder/\n\n하지만 만약 색상을 동적으로 변경을 해야한다면?\n\n`mask-image`을 활용한다.\n\nhttps://codepen.io/noahblon/post/coloring-svgs-in-css-background-images\n\n```tsx\n.icon {\n    background-color: red;\n    -webkit-mask-image: url(icon.svg);\n    mask-image: url(icon.svg);\n}\n```\n\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/mask-image#browser_compatibility\n\n브라우저 호환성이 조..금 빡세다.\n\n위치를 조정하고 싶다면?\n\n`mask-position` 을 활용하자.\n\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Backgrounds_and_Borders/Resizing_background_images\n\n```tsx\n.prose .anchor:after {\n  content: ' ';\n  mask-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='none' aria-hidden='true'%3E%3Cpath d='M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10' stroke='currentColor' strokeWidth='1.5' strokeLinecap='round' /%3E%3C/svg%3E\");\n  mask-repeat: no-repeat;\n  mask-position: center;\n\n  @apply h-4 w-4 bg-gray-700 dark:bg-gray-300;\n}\n```\n","slug":"/snippets/css/insert-svg","readingMinutes":1,"wordCount":116,"snippetSlug":"css"}]},{"key":"next.js","postList":[{"title":"(Next.js) document fonts","description":"","icon":"","image":"","tags":["Next.js","css","tailwindcss"],"draft":false,"date":"2022-12-19","content":"\n적절한 폰트를 찾는다.\n**https://fonts.google.com/**\n\n<br />\n\n```tsx:_document.tsx\n<Head>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossOrigin=\"anonymous\" />\n  <link\n      href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800;900&display=swap\"\n      rel=\"stylesheet\"\n  />\n</Head>\n```\n\n```css:globals.css\n@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800;900&display=swap');\n\n* {\n  font-family: 'Inter', sans-serif;\n}\n```\n\n---\n\n`tailwindcss`\n\n```js:tailwind.config.js\nconst { fontFamily } = require('tailwindcss/defaultTheme');\n\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  //...\n  theme: {\n    extend: {\n      fontFamily: {\n        sans: ['inter', ...fontFamily.sans],\n      },\n      //...\n    }\n};\n```\n\n```tsx:_app.tsx\n<div className=\"font-sans\">\n  <Component {...pageProps} />\n</div>\n```\n","slug":"/snippets/next.js/document-fonts","readingMinutes":1,"wordCount":74,"snippetSlug":"next.js"},{"title":"(Next.js) nprogress","description":"","icon":"","image":"","tags":["Next.js"],"draft":false,"date":"2022-12-06","content":"\n✨[**nprogress**](https://github.com/rstacruz/nprogress)를 활용하여 route가 변경될시 로딩 UI를 표시할 수 있습니다.\n\n```bash\nyarn add nprogress\nyarn add -D @types/nprogress\n```\n\n<br />\n\n```tsx:_app.tsx\nuseEffect(() => {\n  const handleStart = (url: string) => {\n    NProgress.start();\n  };\n\n  const handleStop = () => {\n    NProgress.done();\n  };\n\n  router.events.on('routeChangeStart', handleStart);\n  router.events.on('routeChangeComplete', handleStop);\n  router.events.on('routeChangeError', handleStop);\n\n  return () => {\n    router.events.off('routeChangeStart', handleStart);\n    router.events.off('routeChangeComplete', handleStop);\n    router.events.off('routeChangeError', handleStop);\n  };\n}, [router]);\n```\n\n- Next13 기준으로 동작한 코드입니다.\n- https://nextjs.org/docs/api-reference/next/router#routerevents\n  <br />\n\n```tsx:_document.tsx\n<Head>\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/nprogress/0.2.0/nprogress.min.css\"\n    />\n</Head>\n```\n\n<br />\n\n```css:global.css\n/* nprogress */\n:root {\n  --nprogress-color: rgb(168 85 247);\n}\n\n#nprogress .bar {\n  background: var(--nprogress-color) !important;\n  padding: 0 10px !important;\n  height: 3px !important;\n}\n\n#nprogress .spinner .spinner-icon {\n  border-top-color: var(--nprogress-color) !important;\n  border-left-color: var(--nprogress-color) !important;\n}\n```\n\n---\n\n레거시 코드 참고\n\n- https://dev.to/debosthefirst/how-to-show-a-loading-bar-when-changing-routes-in-nextjs-304e\n","slug":"/snippets/next.js/nprogress","readingMinutes":1,"wordCount":125,"snippetSlug":"next.js"}]},{"key":"react","postList":[{"title":"(React) scroll progress bar","description":"","icon":"","image":"","tags":["Next.js","React","css"],"draft":false,"date":"2022-12-17","content":"\n`Next.js` 기준으로 [**Styled JSX**](https://github.com/vercel/styled-jsx)를 활용하여 구현했다.\n\n```tsx\nimport { useEffect, useState } from 'react';\n\nexport default function ReadingProgressBar() {\n  const [width, setWidth] = useState(0);\n\n  const scrollHeight = () => {\n    const element = document.documentElement;\n    const ScrollTop = element.scrollTop || document.body.scrollTop;\n    const ScrollHeight = element.scrollHeight || document.body.scrollHeight;\n    const percent = (ScrollTop / (ScrollHeight - element.clientHeight)) * 100;\n\n    setWidth(percent);\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', scrollHeight);\n    return () => window.removeEventListener('scroll', scrollHeight);\n  }, []);\n\n  return (\n    <div className=\"progressBar\" style={{ width: `${width}%` }}>\n      <style jsx>{`\n        .progressBar {\n          position: fixed;\n          z-index: 50;\n          top: 0px;\n          left: 0px;\n          height: 6px;\n          border-radius: 0px 2px 0px 0px;\n          background: linear-gradient(90deg, #ffdd00, #fbb034);\n        }\n      `}</style>\n    </div>\n  );\n}\n```\n\n---\n\n**참고 자료**\n\n- https://blog.logrocket.com/creating-reading-progress-bar-react/\n","slug":"/snippets/react/reading-progress-bar","readingMinutes":1,"wordCount":114,"snippetSlug":"react"},{"title":"(React) Lodash Debounce","description":"","icon":"","image":"","tags":["React","javascript","typescript","debounce"],"draft":false,"date":"2022-12-13","content":"\n`javascript`\n\n```shell\nyarn add lodash.debounce\n```\n\n```jsx\nconst App = () => {\n  const [searchValue, setSearchValue] = useState('');\n\n  const searchHandler = useCallback(\n    sdebounce((e) => {\n      setSearchValue(e.target.value);\n    }, 300),\n    [],\n  );\n\n  return (\n    <div>\n      <div>{searchValue}</div>\n      <input type=\"text\" onChange={searchHandler} />\n    </div>\n  );\n};\n```\n\n---\n\n`typescript`\n\n```shell\nyarn add -D @types/lodash.debounce\n```\n\n```ts:useSearch.ts\nimport debounce from 'lodash.debounce';\nimport React, { useCallback, useState } from 'react';\n\nexport default function useSearch(callback?: (value: string) => void, wait = 300) {\n  const [searchValue, setSearchValue] = useState('');\n\n  const searchHandler = useCallback(\n    debounce((e: React.ChangeEvent<HTMLInputElement>) => {\n      const value = e.target.value;\n      callback?.(value);\n      setSearchValue(value);\n    }, wait),\n    [],\n  );\n\n  return { searchValue, searchHandler };\n}\n```\n","slug":"/snippets/react/lodash-debounce","readingMinutes":1,"wordCount":107,"snippetSlug":"react"}]}]},"__N_SSG":true}