{"pageProps":{"post":{"title":"Drag Carousel 뽀개기","description":"라이브러리 없이 React에서 터치로 캐러셀을 만들어 보자!!!","icon":"","image":"","tags":["Next.js","React","DOM"],"draft":false,"date":"2022-10-08","content":"\n## TL;DR\n\n> 캐러셀을 **일정 거리이상** drag시키면 화면을 넘긴다.\n\n---\n\n## 기본 원리 — Carousel 동작\n\n여러 방식으로 Carousel를 구현할 수 있지만 아래와 같은 형태로 간편하게 마크업을 짜자.\ncss는 편의상 [**tailwindcss**](https://tailwindcss.com/)를 같이 사용했다.\n\n```tsx\nconst imageList = [...];\n\nconst SLIDER_WIDTH = 400;\nconst SLIDER_HEIGHT = 400;\n\nexport default function CarouselExample() {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [transX, setTransX] = useState(0);\n\n  return (\n    <>\n      {/* Viewer */}\n      <div\n        className=\"overflow-hidden\"\n        style={{\n          width: SLIDER_WIDTH,\n          height: SLIDER_HEIGHT,\n        }}\n      >\n        {/* Slider */}\n        <div\n          className=\"flex\"\n          style={{\n            transform: `translateX(${-currentIndex * SLIDER_WIDTH + transX}px)`,\n          }}\n        >\n          {/* Slide */}\n          {imageList.map((url, i) => (\n            <div key={i} className=\"flex-shrink-0\">\n              <img src={url} alt=\"img\" width={SLIDER_WIDTH} draggable={false} />\n            </div>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n}\n```\n\n마크업을 그림으로 정리하자면 아래와 같다\n\n![](https://velog.velcdn.com/images/bepyan/post/9c60a2a9-a65b-444b-bd66-0504dcf3fc14/image.png)\n\n`Viewer`는 **액자**와 같은 역할을 수행하고\n실질적으로 `Slider`가 좌우로 `transform`하여 캐러셀 움직임을 구현한다.\n\n따라서 사전에 `Slide`의 크기를 알고 있어야 한다.\n동적으로 크기를 맞출려면 `ref`로 `element.getBoundingClientRect`을 호출하면 된다.\n\n---\n\n## 기본 응용 — Carousel Drag\n\n캐러셀을 **일정 거리이상 drag**하면 화면을 넘긴다.\n~~참 쉽죠잉?~~\n\n![](https://velog.velcdn.com/images/bepyan/post/d73cc634-2819-4264-ae72-704a0252f24d/image.gif)\n\n1. [이전 글](https://velog.io/@bepyan/Drag-Touch-뽀개기#심화-응용--최종-코드)을 참고하여 드래그 이벤트를 등록한다.\n2. drag된 거리에 만큼 `transX`를 이동시킨다.\n   한번의 drag로 한 슬라이드 이상으로 이동할 수 없도록 하자.\n3. 손을 땠을 때 일정 거리이상 움직이면 `currentIndex`를 변경해준다.\n4. drag된 `transX`를 초기화 해준다.\n\n```tsx\nconst inrange = (v: number, min: number, max: number) => {\n  if (v < min) return min;\n  if (v > max) return max;\n  return v;\n};\n```\n\n```jsx\n<div\n  className=\"flex\"\n  style={{\n    transform: `translateX(${-currentIndex * SLIDER_WIDTH + transX}px)`,\n    // 🏄🏻‍♂️  drag를 초기화할 때 부드럽게 이동시켜 주자. 꼼수입니다...\n    transition: `transform ${transX ? 0 : 300}ms ease-in-out 0s`,\n  }}\n  // 1️⃣\n  {...registDragEvent({\n    onDragChange: (deltaX) => {\n      // 2️⃣\n      setTransX(inrange(deltaX, -SLIDER_WIDTH, SLIDER_WIDTH));\n    },\n    onDragEnd: (deltaX) => {\n      const maxIndex = imageList.length - 1;\n\n      // 3️⃣\n      if (deltaX < -100) setCurrentIndex(inrange(currentIndex + 1, 0, maxIndex));\n      if (deltaX > 100) setCurrentIndex(inrange(currentIndex - 1, 0, maxIndex));\n\n      // 4️⃣\n      setTransX(0);\n    },\n  })}\n>\n  //...\n</div>\n```\n\n---\n\n## 심화 응용 — Infinite Carousel\n\n단골로 사용되는 기능 중에 하나이다.\n무한으로 돌아가는 트릭은 생각보다 간단하다.\n\n> 첫 슬라이드 좌측으로 이동시 마지막 슬라이드로,\n> 마지막 슬라이드 우측으로 이동시 첫 슬라이드로 이동하면 캐러셀이 무한으로 돌아갈 것이다.\n\n자, 구현 해보자!\n\n기존 `[0, 1, 2, 3]` 번 슬라이드를 `[3, 0, 1, 2, 3, 0]`로 만든다.\n그리고 `index`를 `1`부터 시작하는 것을 잊지 말자.\n\n```tsx\nconst slideList = [imageList.at(-1), ...imageList, imageList.at(0)];\nconst [currentIndex, setCurrentIndex] = useState(1);\n```\n\n<br />\n\n자연스럽게 **무한루프** 되기 위해선 `currentIndex`가 아래와 같이 동작해야 한다.\n\n```\n1 → 0  (에니메니션 없이) → 4\n```\n\n`dragEnd`시 `currentIndex`를 변동하게 될 것이다.\n[**onTransitionEnd**](https://developer.mozilla.org/en-US/docs/Web/API/Element/transitionend_event)을 활용하여 `transition`이 종료될시 `animate`를 끄고 `currentIndex`를 변동해준다.\n\n```tsx\nconst [animate, setAnimate] = useState(false);\n\n<div\n  style={{\n    transform: `translateX(${-currentIndex * SLIDER_WIDTH + transX}px)`,\n    transition: `transform ${animate ? 300 : 0}ms ease-in-out 0s`,\n  }}\n  {...({\n  \tonDragEnd: (deltaX) => {\n      //...\n\n      setAnimate(true);\n      setTransX(0);\n    }\n  })}\n  onTransitionEnd={() => {\n\tsetAnimate(false);\n\n    if (currentIndex === 0) {\n      setCurrentIndex(slideList.length - 2);\n    } else if (currentIndex === slideList.length - 1) {\n      setCurrentIndex(1);\n    }\n  }}\n>\n  {...}\n</div>\n```\n\n![](https://velog.velcdn.com/images/bepyan/post/7c638d6a-838a-4f70-9c1d-4517e9e0770b/image.gif)\n\n---\n\n## 최종 코드\n\n```tsx\nconst imageList = [\n  'https://blog.kakaocdn.net/dn/dpxiAT/btqUBv6Fvpn/E8xUMncq7AVuDeOim0LrMk/img.jpg',\n  'https://blog.kakaocdn.net/dn/BGT7X/btqUzvTqi5h/flp39GdJH0GU6mo7cTbbhk/img.jpg',\n  'https://blog.kakaocdn.net/dn/bWnmfv/btqUBwqZvwA/3CiXGt3SR0TXoOveRJxV91/img.jpg',\n  'https://blog.kakaocdn.net/dn/XsLCO/btqUL8PQLwp/NZWCU2jAYKkKSXwcohBKTK/img.jpg',\n  'https://blog.kakaocdn.net/dn/bG3iVL/btqUvCZPaRL/ofIjkNWJP1mj2bOG9fie51/img.jpg',\n];\n\nconst SLIDER_WIDTH = 400;\nconst SLIDER_HEIGHT = 400;\n\nexport default function CarouselInfiniteExample() {\n  const slideList = [imageList.at(-1), ...imageList, imageList.at(0)];\n\n  const [currentIndex, setCurrentIndex] = useState(1);\n  const [transX, setTransX] = useState(0);\n  const [animate, setAnimate] = useState(false);\n\n  return (\n    <>\n      <div\n        className=\"overflow-hidden\"\n        style={{\n          width: SLIDER_WIDTH,\n          height: SLIDER_HEIGHT,\n        }}\n      >\n        <div\n          className=\"flex\"\n          style={{\n            transform: `translateX(${-currentIndex * SLIDER_WIDTH + transX}px)`,\n            transition: `transform ${animate ? 300 : 0}ms ease-in-out 0s`,\n          }}\n          {...registDragEvent({\n            onDragChange: (deltaX) => {\n              setTransX(inrange(deltaX, -SLIDER_WIDTH + 10, SLIDER_WIDTH - 10));\n            },\n            onDragEnd: (deltaX) => {\n              const maxIndex = slideList.length - 1;\n\n              if (deltaX < -100) setCurrentIndex(inrange(currentIndex + 1, 0, maxIndex));\n              if (deltaX > 100) setCurrentIndex(inrange(currentIndex - 1, 0, maxIndex));\n\n              setAnimate(true);\n              setTransX(0);\n            },\n          })}\n          onTransitionEnd={() => {\n            setAnimate(false);\n\n            if (currentIndex === 0) {\n              setCurrentIndex(slideList.length - 2);\n            } else if (currentIndex === slideList.length - 1) {\n              setCurrentIndex(1);\n            }\n          }}\n        >\n          {slideList.map((url, i) => (\n            <div key={i} className=\"flex-shrink-0\">\n              <img src={url} alt=\"img\" width={SLIDER_WIDTH} draggable={false} />\n            </div>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n}\n```\n\n---\n\n실제 동작은 아래 링크에서 볼 수 있습니다.\nhttps://dnd-playground.vercel.app/carousel\n\nstyle 정보, 전체 코드는 아래 깃허브에서 살펴보면 됩니다.\nhttps://github.com/bepyan/dnd-playground/\n","slug":"/blog/dnd-master/4-drag-carousel","readingMinutes":6,"wordCount":667,"serizeSlug":"dnd-master"},"postFooterProps":{"prevPost":{"title":"Drag Resize 뽀개기","description":"라이브러리 없이 React에서 element 크기를 drag해서 조정하자!!!","icon":"","image":"","tags":["Next.js","React","DOM"],"draft":false,"date":"2022-10-03","content":"\n[이전 포스트](./2-drag-touch-event)에서 연구한 drag 이벤트를 활용하여 Resize 기능을 구현해보자. \n\n## TL;DR\n\n> [**getBoundingClientRect**](https://developer.mozilla.org/ko/docs/Web/API/Element/getBoundingClientRect)를 활용하여 엘리먼트의 크기 정보를 얻는다.\n> Drag 거리에 맞춰 엘리먼트 크기를 조정해준다.\n\n---\n\n## 복습 — Drag 이벤트 등록\n\nDOM 이벤트를 활용하여 마우스의 움직임을 추적한다.\n\n1. 클릭시(`onMouseDown`) `document`에 `mousemove` `mouseup` 이벤트를 등록한다.\n2. element의 클릭 이벤트가 부모로 전파되지 않길 원할 경우 `stopPropagation`을 호출한다.\n3. 클릭된 상태에서 마우스를 움직일시 `mousemove`에 등록 된 함수가 계속 호출된다.\n4. 클릭(`mousedown`) 이벤트 발생시의 마우스 위치를 기준으로,\n   이동(`mousemove`) 이벤트에서 상대적으로 이동한 거리(**deltaX**, **deltaY**)를 계산하고\n   콜벡으로 받은 `onDragChange`에게 전달해준다.\n5. `mouseup` 이벤트에서 `mousemove` 이벤트를 제거한다.\n\n```tsx\nexport default function registMouseDownDrag(\n  onDragChange: (deltaX: number, deltaY: number) => void,\n  stopPropagation?: boolean,\n) {\n  return {\n    onMouseDown: (clickEvent: React.MouseEvent<Element, MouseEvent>) => {\n      // 2️⃣\n      if (stopPropagation) clickEvent.stopPropagation();\n\n      // 3️⃣\n      const mouseMoveHandler = (moveEvent: MouseEvent) => {\n        // 4️⃣\n        const deltaX = moveEvent.screenX - clickEvent.screenX;\n        const deltaY = moveEvent.screenY - clickEvent.screenY;\n        onDragChange(deltaX, deltaY);\n      };\n\n      // 5️⃣\n      const mouseUpHandler = () => {\n        document.removeEventListener('mousemove', mouseMoveHandler);\n      };\n\n      // 1️⃣\n      document.addEventListener('mousemove', mouseMoveHandler);\n      document.addEventListener('mouseup', mouseUpHandler, { once: true });\n    },\n  };\n}\n```\n\n---\n\n## 기본 응용 — Drag로 Resize하기\n\n마우스의 움직임 바탕으로 element의 size를 조정해보자.\n\n1. element의 `config`(위치, 크기) 상태를 정의한다.\n2. element의 `config`을 초기화 한다.\n   덤으로 boundary를 기준으로 중앙정렬을 해주자.\n3. element의 우하단에 resize를 동작시키는 영역을 정의한다. ([tailwind](https://tailwindcss.com/)를 사용했다.)\n4. config 상태를 변경하여 element의 크기를 변화시킨다.\n\n```tsx\n// 1️⃣\nconst [{ x, y, w, h }, setConfig] = useState({\n  x: 0,\n  y: 0,\n  w: 0,\n  h: 0,\n});\n\nconst boundaryRef = useRef<HTMLDivElement>(null);\n// 2️⃣\nuseEffect(() => {\n  const boundary = boundaryRef.current?.getBoundingClientRect();\n\n  if (boundary) {\n    const DEFAULT_W = 240;\n    const DEFAULT_H = 120;\n    setConfig({\n      x: Math.floor(boundary.width / 2 - DEFAULT_W / 2),\n      y: Math.floor(boundary.height / 2 - DEFAULT_H / 2),\n      w: DEFAULT_W,\n      h: DEFAULT_H,\n    });\n  }\n}, []);\n\nreturn (\n  <Boundary ref={boundaryRef}>\n    <div style={{ width: w, height: h, left: x, top: y }} className=\"relative\">\n      <Box />\n      <div\n        // 3️⃣\n        className=\"absolute -bottom-0.5 left-3 right-3 h-2 cursor-s-resize\"\n        {...registMouseDownDrag((deltaX, deltaY) => {\n          // 4️⃣\n          setConfig({\n            x,\n            y,\n            w: w + deltaX,\n            h: h + deltaY,\n          });\n        })}\n      />\n    </div>\n  </Boundary>\n);\n```\n\n![](https://velog.velcdn.com/images/bepyan/post/7e2b0964-cffa-4800-b2b5-7ccdb3b60b4d/image.gif)\n\n---\n\n## 추가 응용 — Boundary 적용\n\nelement가 **움직일 수 있는 범위**를 계산해보자.\n![](https://velog.velcdn.com/images/bepyan/post/8c05b6c0-75e7-419d-9b68-ddc84cf4ff7f/image.png)\n\n좌측 끝 = `BOUNDARY_MARGIN`\n우측 끝 = `boundary.width` - `w` - `BOUNDARY_MARGIN`\n\n<br />\n\n자, 이제 element가 **확장할 수 있는 범위**를 계산해보자.\n![](https://velog.velcdn.com/images/bepyan/post/089b4342-25bf-4e4f-926b-441a987bbfa9/image.png)\n\n최소 width = `MIN_W`\n최대 width = `boundary.width` - `x` - `BOUNDARY_MARGIN`\n\n<br />\n\n그림을 그려보니 생각보다 간단하지 않는가?!\n이제 아래 주요 로직을 따라 코드를 작성해보도록 하자.\n\n1. position drag 이벤트를 등록해준다.\n2. `resize`의 클릭 이벤트가 부모로 전파되지 않도록 `stopPropagation` 해준다.\n3. `resize`되는 범위를 잘 설정해준다.\n\n```tsx\nconst inrange = (v: number, min: number, max: number) => {\n  if (v < min) return min;\n  if (v > max) return max;\n  return v;\n};\n\nconst BOUNDARY_MARGIN = 12;\nconst MIN_W = 80;\nconst MIN_H = 80;\n```\n\n```tsx\n<Boundary ref={boundaryRef}>\n  <div\n    style={{ width: w, height: h, left: x, top: y }}\n    className=\"relative\"\n    // 1️⃣\n    {...registMouseDownDrag((deltaX, deltaY) => {\n      if (!boundaryRef.current) return;\n\n      const boundary = boundaryRef.current.getBoundingClientRect();\n      setConfig({\n        x: inrange(x + deltaX, BOUNDARY_MARGIN, boundary.width - w - BOUNDARY_MARGIN),\n        y: inrange(y + deltaY, BOUNDARY_MARGIN, boundary.height - h - BOUNDARY_MARGIN),\n        w,\n        h,\n      });\n    }\n  >\n    <Box />\n    <div\n      className=\"absolute -bottom-0.5 left-3 right-3 h-2 cursor-s-resize\"\n\t  style={{ backgroundColor: '#12121250' }}\n      {...registMouseDownDrag((deltaX, deltaY) => {\n        if (!boundaryRef.current) return;\n\n        // 3️⃣\n        const boundary = boundaryRef.current.getBoundingClientRect();\n        setConfig({\n          x,\n          y,\n          w: inrange(w + deltaX, MIN_W, boundary.width - x - BOUNDARY_MARGIN),\n          h: inrange(h + deltaY, MIN_H, boundary.height - y - BOUNDARY_MARGIN),\n        });\n      // 2️⃣\n      }, true)}\n      />\n  </div>\n</Boundary>\n```\n\n![](https://velog.velcdn.com/images/bepyan/post/6c7c265f-5902-4602-8716-f4608794d847/image.gif)\n\n오호, 이 정도면 좀 쓸만할 것 같다 💪🏾\n\n---\n\n## 심화 응용 — 여러 방향의 Resize\n\n우리가 많이 접한 편집툴은 좌상단, 우상단, 좌하단, 우하단 4가지 방향으로 Resize할 수 있다.\n다른 방향으로 진행하기 위해서 무엇을 고려해야하는지 살펴보자.\n\n**좌상단**인 경우, 우하단 동작 방식과 좀 다르다.\n`x`가 줄어드는 만큼 `w`가 증가해야지 위치가 고정된 상태에서 element 크기가 달라진다.\n그렇다면 이들의 범위를 계산해보도록 하자.\n\n![](https://velog.velcdn.com/images/bepyan/post/5420046d-0f19-4920-a573-21ddf35edf6b/image.png)\n\n`maxX` = `x` + `w` - `MIN_W`\n`maxWidth` = `x` + `w` - `BOUNDARY_MARGIN`\n\n<br />\n\n이를 코드에 적용하면 아래와 같다.\n여기서 `deltaX`가 줄어 들 때 `width`가 증가한다는 점을 놓치지 말자.\n`width = w - deltaX`\n\n```tsx\n{/* 좌상단 */}\n<div\n  className=\"absolute -top-1 -left-1 h-4 w-4 cursor-nw-resize\"\n  style={{ '#12121250' }}\n  {...registMouseDownDrag((deltaX, deltaY) => {\n    setConfig({\n      x: inrange(x + deltaX, BOUNDARY_MARGIN, x + w - MIN_W),\n      y: inrange(y + deltaY, BOUNDARY_MARGIN, y + h - MIN_H),\n      w: inrange(w - deltaX, MIN_W, x + w - BOUNDARY_MARGIN),\n      h: inrange(h - deltaY, MIN_H, y + h - BOUNDARY_MARGIN),\n    });\n  }, true)}\n/>\n```\n\n다른 방향에서의 원리도 이와 비슷하다.\n적절히 응용해보도록 하자.\n\n```tsx\n{\n  /* 우상단 */\n}\n<div\n  className=\"absolute -top-1 -right-1 h-4 w-4 cursor-ne-resize\"\n  style={{ backgroundColor: '#12121250' }}\n  {...registMouseDownDrag((deltaX, deltaY) => {\n    if (!boundaryRef.current) return;\n\n    const boundary = boundaryRef.current.getBoundingClientRect();\n\n    setConfig({\n      x,\n      y: inrange(y + deltaY, BOUNDARY_MARGIN, y + h - MIN_H),\n      w: inrange(w + deltaX, MIN_W, boundary.width - x - BOUNDARY_MARGIN),\n      h: inrange(h - deltaY, MIN_H, y + h - BOUNDARY_MARGIN),\n    });\n  }, true)}\n/>;\n\n{\n  /* 좌하단 */\n}\n<div\n  className=\"absolute -bottom-1 -left-1 h-4 w-4 cursor-ne-resize\"\n  style={{ backgroundColor: '#12121250' }}\n  {...registMouseDownDrag((deltaX, deltaY) => {\n    if (!boundaryRef.current) return;\n\n    const boundary = boundaryRef.current.getBoundingClientRect();\n\n    setConfig({\n      x: inrange(x + deltaX, BOUNDARY_MARGIN, x + w - MIN_W),\n      y,\n      w: inrange(w - deltaX, MIN_W, x + w - BOUNDARY_MARGIN),\n      h: inrange(h + deltaY, MIN_H, boundary.height - y - BOUNDARY_MARGIN),\n    });\n  }, true)}\n/>;\n```\n\n![](https://velog.velcdn.com/images/bepyan/post/85f36f99-622d-432a-85ff-7c0443d80dfa/image.gif)\n\n상하좌우 방향은 그저 하드코딩을 이어가면 된다.\n그럼 다음 기능 개발로 넘어가보자 🏄🏻‍♂️\n\n---\n\n실제 동작은 아래 링크에서 볼 수 있습니다.\nhttps://dnd-playground.vercel.app/resize\n\nstyle 정보, 전체 코드는 아래 깃허브에서 살펴보면 됩니다.\nhttps://github.com/bepyan/dnd-playground/blob/main/src/components/DragSizeExample.tsx\n","slug":"/blog/dnd-master/3-drag-resize","readingMinutes":8,"wordCount":904,"serizeSlug":"dnd-master"},"nextPost":{"title":"DND 이벤트 뽀개기","description":"라이브러리 없이 React에서 Drag and Drop 이벤트를 구현해보자!!!","icon":"","image":"","tags":["Next.js","React","DOM"],"draft":false,"date":"2022-10-10","content":"\n드디어, 대망의 DND 이벤트를 구현해보도록 하자!\n\n칸반보드, 목차 편집 기능이 실용적이지만\n재미삼아서 먼저 퍼즐 맞추기 게임 느낌의 이벤트를 먼저 만들어 보자.\nhttps://www.happyclicks.net/drag-drop-games/games_numbers.php\n\n~~어쩌다보니 글이 좀 깁니다...~~\n\n## TL;DR\n\n> [**cloneNode**](https://developer.mozilla.org/ko/docs/Web/API/Node/cloneNode)를 통해 타겟을 복사하여 drag시킨다.\n> [**document.elementFromPoint(x, y)**](https://developer.mozilla.org/en-US/docs/Web/API/Document/elementFromPoint)을 활용하여 특정 영역의 element 정보를 얻는다.\n> 획득한 element의 정보 바탕으로 `onDrop` 이벤트를 구현한다.\n\n---\n\n## EVENT — 이벤트 등록\n\nDOM API를 직접적으로 다뤄야하다 보니\n이를 별도의 스크립트에서 vanilla로 코드를 작성하는 것이 편할 것 같다.\n\n먼저,\nNextJS에서는 CSR에서 스크립트가 실행되도록 훅을 만들어 준다.\n\n`DNDMatchExample.tsx`\n\n```tsx\nconst [ready, setReady] = useState(false);\n\nuseEffect(() => {\n  if(!ready) {\n    setReady(true);\n    return;\n  }\n\n  // 이벤트를 등록한다.\n  const cleanup = registDND(...);\n\n  // 이벤트를 해제해준다.\n  return () => cleanup();\n}, [ready]);\n\nif (!ready) return <></>;\n```\n\n<br />\n\n스크립트는 `DNDMatchExample.drag.ts` 파일로 작성했다.\n모바일에서도 동작이 가능하도록 설정했다.\n관련 로직은 [**이전 포스트**](https://velog.io/@bepyan/Drag-Touch-뽀개기)를 참고하면 될 것 같다.\n\n```tsx\nexport const registDND = (...) => {\n\n  // 모바일 기기에서의 Touch 이벤트\n  const isTouchScreen =\n    typeof window !== 'undefined' &&\n    window.matchMedia('(hover: none) and (pointer: coarse)').matches;\n\n  const startEventName = isTouchScreen ? 'touchstart' : 'mousedown';\n  const moveEventName = isTouchScreen ? 'touchmove' : 'mousemove';\n  const endEventName = isTouchScreen ? 'touchend' : 'mouseup';\n\n  // 마우스 움직임 변화를 측정하는 유틸\n  const getDelta = (startEvent: MouseEvent | TouchEvent, moveEvent: MouseEvent | TouchEvent) => {\n    if (isTouchScreen) {\n      const se = startEvent as TouchEvent;\n      const me = moveEvent as TouchEvent;\n\n      return {\n        deltaX: me.touches[0].pageX - se.touches[0].pageX,\n        deltaY: me.touches[0].pageY - se.touches[0].pageY,\n      };\n    }\n\n    const se = startEvent as MouseEvent;\n    const me = moveEvent as MouseEvent;\n\n    return {\n      deltaX: me.pageX - se.pageX,\n      deltaY: me.pageY - se.pageY,\n    };\n  };\n\n  // DND 등록 이벤트\n  const startHandler = (startEvent: MouseEvent | TouchEvent) => {\n    const item = startEvent.target as HTMLElement;\n\n    // Drag 대상이 아니면 이벤트를 종료해준다.\n    if (!item.classList.contains('dnd-drag-item')) {\n      return;\n    }\n\n    // Drag 시작 이벤트 관련 동작\n    // {...}\n\n    // Drag 움직임 이벤트 관련 동작\n    const moveHandler = (moveEvent: MouseEvent | TouchEvent) => {\n      // {...}\n    };\n\n    // Drag 종료(Drop) 이벤트 관련 동작\n    const endHandler = () => {\n      // {...}\n\n      document.removeEventListener(moveEventName, moveHandler);\n    };\n\n    document.addEventListener(moveEventName, moveHandler);\n    document.addEventListener(endEventName, endHandler, { once: true });\n  }\n\n\n  // document에 DND 이벤트를 등록해준다.\n  document.addEventListener(startEventName, startHandler);\n  return () => document.removeEventListener(startEventName, startHandler);\n};\n```\n\njsx에서처럼 이벤트를 등록할 수 없기에\n이전과는 다르게 [이벤트 위임](https://ko.javascript.info/event-delegation)를 활용하여 document에 등록해줬다.\n\n이제 로직을 하나 하나 구현을 해보자.\n\n---\n\n## DRAG — Ghost 만들기\n\n> 핵심은 기존 엘리먼트을 그대로 두고 `clone`한 `ghost`를 움직이게 한다.\n\n```tsx\nconst startHandler = (startEvent: MouseEvent | TouchEvent) => {\n  const item = clickEvent.currentTarget as HTMLElement;\n  if (\n    !item.classList.contains('dnd-drag-item') ||\n    item.classList.contains('ghost') ||\n    item.classList.contains('placeholder')\n  ) {\n    return;\n  }\n\n  const itemRect = item.getBoundingClientRect();\n\n  // --- Ghost 만들기\n  const ghostItem = item.cloneNode(true) as HTMLElement;\n  ghostItem.classList.add('ghost');\n  ghostItem.style.position = 'fixed';\n  ghostItem.style.top = `${itemRect.top}px`;\n  ghostItem.style.left = `${itemRect.left}px`;\n  ghostItem.style.pointerEvents = 'none';\n  ghostItem.style.textShadow = '0 30px 60px rgba(0, 0, 0, .3)';\n  ghostItem.style.transform = 'scale(1.05)';\n  ghostItem.style.transition = 'transform 200ms ease';\n\n  item.style.opacity = '0.5';\n  item.style.cursor = 'grabbing';\n\n  document.body.style.cursor = 'grabbing';\n  document.body.appendChild(ghostItem);\n  // --- Ghost 만들기 END\n\n\n  const mouseMoveHandler = (moveEvent: MouseEvent) => {\n    // --- Ghost Drag\n    const deltaX = moveEvent.pageX - clickEvent.pageX;\n    const deltaY = moveEvent.pageY - clickEvent.pageY;\n\n    ghostItem.style.top = `${itemRect.top + deltaY}px`;\n    ghostItem.style.left = `${itemRect.left + deltaX}px`;\n    // --- Ghost Drag END\n  };\n\n\n  const mouseUpHandler = (moveEvent: MouseEvent) => {\n    // --- Ghost 제자리 복귀\n    ghostItem.style.transition = 'all 200ms ease';\n    ghostItem.style.left = `${itemRect.left}px`;\n    ghostItem.style.top = `${itemRect.top}px`;\n    ghostItem.style.transform = 'none';\n\n    ghostItem.addEventListener(\n      'transitionend',\n      () => {\n        item.removeAttribute('style');\n        document.body.removeAttribute('style');\n        ghostItem.remove();\n      },\n      { once: true },\n    );\n    // --- Ghost 제자리 복귀 END\n\n    // ...\n  };\n}}\n```\n\n#### 체크 포인트\n\n- `ghost`가 마우스(포인터) 이벤트에 관여되지 않도록 [pointer-event](https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events) `none`으로 설정해줬다.\n- 기존 엘리먼트에는 `placeholder` 클래스를 둬서 드레그되고 있음을 인지시킨다.\n- 별도의 css 없이 스타일을 모두 인라인으로 작성했다.\n\n![](https://velog.velcdn.com/images/bepyan/post/19de45cf-494e-4592-9575-c3cafd96604a/image.gif)\n\n---\n\n## DROP — 영역 확인\n\n> 핵심은 `docuemnt.elementFromPoint`을 활용해서 특정 위치에 어떤 엘리먼트가 있는지 확인 한다.\n> ghost가 항상 잡히기에 `pointer-event: none;`으로 설정하여 회피해준다.\n\n[**elementFromPoint**](https://developer.mozilla.org/en-US/docs/Web/API/Document/elementFromPoint) - returns the topmost Element at the specified coordinates (relative to the viewport).\n\n```tsx\n//...\nconst dropAreaList = document.querySelectorAll<HTMLElement>('.dnd-drop-area');\n//...\n\nconst moveHandler = (moveEvent: MouseEvent | TouchEvent) => {\n  // ...\n\n  //--- Drop 영역 확인\n  const ghostItemRect = ghostItem.getBoundingClientRect();\n  const ghostCenterX = ghostItemRect.left + ghostItemRect.width / 2;\n  const ghostCenterY = ghostItemRect.top + ghostItemRect.height / 2;\n\n  const dropItem = document\n    .elementFromPoint(ghostCenterX, ghostCenterY)\n    ?.closest<HTMLElement>('.dnd-drop-area');\n\n  dropAreaList.forEach((area) => {\n    area.classList.remove('active');\n    area.removeAttribute('style');\n  });\n\n  if (dropItem) {\n    dropItem.classList.add('active');\n    dropItem.style.filter = 'drop-shadow(16px 16px 16px gray)';\n  }\n  //--- Drop 영역 확인 END\n};\n```\n\n#### 체크 포인트\n\n- 커서의 위치가 아닌, **ghost의 중심 좌표**를 기준으로 `drop` 영역 위인지 여부를 파악했다.\n- drop 영역 위일 경우 `active` 클래스명을 추가했다. 이를 아래 onDrop 이벤트에서 활용한다.\n\n![](https://velog.velcdn.com/images/bepyan/post/ec48197a-2774-4b84-9473-1537853c3246/image.gif)\n\n---\n\n## DROP — onDrop\n\n> `active` 영역이 있을 경우 `onDrop` 로직을 수행한다.\n\n```tsx\nexport const registDND = (\n  onDrop: (props: { source: string; destination: string; isCorrect: boolean }) => void,\n) => {\n  //...\n\n  const endHandler = () => {\n    const dropItem = document.querySelector<HTMLElement>('.dnd-drop-area.active');\n    const isCorrect = item.innerText === dropItem?.innerText;\n\n    if (isCorrect) {\n      // 해당 영역으로 이동\n      const dropItemRect = dropItem.getBoundingClientRect();\n      ghostItem.style.left = `${dropItemRect.left}px`;\n      ghostItem.style.top = `${dropItemRect.top}px`;\n    } else {\n      // 제자리 복귀\n      ghostItem.style.left = `${itemRect.left}px`;\n      ghostItem.style.top = `${itemRect.top}px`;\n    }\n\n    ghostItem.style.transition = 'all 200ms ease';\n    ghostItem.style.transform = 'none';\n    ghostItem.addEventListener(\n      'transitionend',\n      () => {\n        item.classList.remove('placeholder');\n        item.removeAttribute('style');\n        document.body.removeAttribute('style');\n\n        if (dropItem) {\n          // 영역 스타일 초기화\n          dropItem.classList.remove('active');\n          dropItem.removeAttribute('style');\n\n          //\n          if (isCorrect) {\n            item.classList.add('opacity-50');\n            dropItem.classList.remove('text-white');\n            dropItem.classList.add('text-stone-700');\n          }\n        }\n\n        ghostItem.remove();\n\n        // onDrop 콜벡을 수행\n        onDrop({\n          source: item.innerText,\n          destination: dropItem?.innerText ?? '',\n          isCorrect,\n        });\n      },\n      { once: true },\n    );\n\n    document.removeEventListener(moveEventName, moveHandler);\n  };\n\n  //...\n};\n```\n\n콜벡에서 위치가 맞는 겨우 상태를 수정해준다.\n\n```tsx\nuseEffect(() => {\n  if (!ready) {\n    setReady(true);\n    return;\n  }\n\n  const cleanup = registDND(({ destination, isCorrect }) => {\n    if (isCorrect) {\n      setCorrectWords((list) => [...list, destination]);\n    }\n  });\n  return () => cleanup();\n}, [ready]);\n```\n\n#### 체크 포인트\n\n- 맞는 경우 DOM style을 수정하고 나서 react state를 변경해야 한다.\n  아니면 상태 변경 전에 화면이 깜빡 거린다.\n\n![](https://velog.velcdn.com/images/bepyan/post/5026ce1b-c9de-4a42-a862-69178a845a96/image.gif)\n\n이렇게 DND 기능 구현이 완료 👏🏻\n게임 컨셉의 DND이기 때문에 추가적인 에니메이션을 구현해보자.\n\n---\n\n## (번외) 틀린경우 — shake\n\n알맞지 않은 알파벳으로 이동할 경우 해당 알파벳이 흔들리도록 하자.\n![](https://velog.velcdn.com/images/bepyan/post/51711783-ca6a-48cb-932e-7875b185a1a8/image.gif)\n\n먼저 `global.css`에서 관련 에니메이션 css를 작성한다.\n`50%` 지점에서 가장 크게 흔들리는 것이 포인트이다.\n\n```css\n@keyframes shake {\n  10%,\n  90% {\n    transform: translate3d(-1px, 0, 0);\n  }\n\n  20%,\n  80% {\n    transform: translate3d(2px, 0, 0);\n  }\n\n  30%,\n  50%,\n  70% {\n    transform: translate3d(-4px, 0, 0);\n  }\n\n  40%,\n  60% {\n    transform: translate3d(4px, 0, 0);\n  }\n}\n\n.shake {\n  animation: shake 0.82s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;\n}\n```\n\n엘리먼트에 `shake` 클래스를 추가하면 에니메이션이 실행되고,\n`animationend`에서 다시 `shake` 클래스를 제거해준다.\n\n```tsx\nghostItem.addEventListener(\n  'transitionend',\n  () => {\n    //...\n\n    if (dropItem) {\n      //...\n\n      if (!isCorrect) {\n        // 틀린 경우 shake\n        item.classList.add('shake');\n        item.addEventListener(\n          'animationend',\n          () => {\n            item.classList.remove('shake');\n          },\n          { once: true },\n        );\n      } else {\n        item.classList.add('opacity-50');\n        dropItem.classList.remove('text-white');\n        dropItem.classList.add('text-stone-700');\n      }\n    }\n\n    //...\n  },\n  { once: true },\n);\n```\n\n---\n\n## (번외) 게임 클리어 — Confettiful\n\n게임 클리어할 경우 격하게 축하해주고 싶다.\n![](https://velog.velcdn.com/images/bepyan/post/d4c98124-7a66-4fbb-9cab-7da9859fa99b/image.gif)\n\n아래에서 관련 로직을 참고했다.\nhttps://codepen.io/l2zeo/pen/ZEBLepW\n\n너무 레거시한 코드 구현방식이여서 NextJS, Typescript에 맞게 리팩토링했다.\n~~생각보다 코드는 간단하다.~~\n\n`Confettiful.ts`\n\n```ts\nconst confettiFrequency = 40;\nconst confettiColors = ['#B1B2FF', '#AAC4FF', '#2D87B0', '#D2DAFF', '#EEF1FF'];\nconst confettiAnimations = ['slow', 'medium', 'fast'];\n\nconst getRandomListItem = (list: any[]) => list[Math.floor(Math.random() * list.length)];\n\nconst Confettiful = function () {\n  const el = document.createElement('div');\n  el.style.position = 'fixed';\n  el.style.pointerEvents = 'none';\n  el.style.width = '100%';\n  el.style.height = '100%';\n\n  const containerEl = document.createElement('div');\n  containerEl.style.position = 'absolute';\n  containerEl.style.overflow = 'hidden';\n  containerEl.style.top = '0';\n  containerEl.style.right = '0';\n  containerEl.style.bottom = '0';\n  containerEl.style.left = '0';\n  el.appendChild(containerEl);\n\n  const confettiInterval = setInterval(() => {\n    const confettiEl = document.createElement('div');\n    confettiEl.style.position = 'absolute';\n    confettiEl.style.zIndex = '1';\n    confettiEl.style.top = '-10px';\n    confettiEl.style.borderRadius = '0%';\n\n    const confettiSize = Math.floor(Math.random() * 3) + 7 + 'px';\n    const confettiLeft = Math.floor(Math.random() * el.offsetWidth) + 'px';\n    const confettiBackground = getRandomListItem(confettiColors);\n    const confettiAnimation = getRandomListItem(confettiAnimations);\n\n    confettiEl.classList.add('confetti', `confetti--animation-${confettiAnimation}`);\n    confettiEl.style.left = confettiLeft;\n    confettiEl.style.width = confettiSize;\n    confettiEl.style.height = confettiSize;\n    confettiEl.style.backgroundColor = confettiBackground;\n\n    setTimeout(function () {\n      confettiEl.parentNode?.removeChild(confettiEl);\n    }, 3000);\n\n    containerEl.appendChild(confettiEl);\n  }, 1000 / confettiFrequency);\n\n  document.querySelector('#__next')?.prepend(el);\n\n  return () => {\n    clearInterval(confettiInterval);\n    setTimeout(function () {\n      el.remove();\n    }, 3000);\n  };\n};\n\nexport default Confettiful;\n```\n\n<br />\n\n`global.css`에도 관련 스타일을 추가해줘야 한다.\n\n- 떨어지는 속도 종류를 `slow`, `medium`, `fast` 3가지를 정의하여 각각 `routate`되는 정도를 조정해준다.\n- `keyframe`이 `100%`되었을 때 가루가 화면 밖으로 떨어지도록 `105vh` 설정해준다.\n\n```css\n/* confetti */\n\n@keyframes confetti-slow {\n  0% {\n    transform: translate3d(0, 0, 0) rotateX(0) rotateY(0);\n  }\n\n  100% {\n    transform: translate3d(25px, 105vh, 0) rotateX(360deg) rotateY(180deg);\n  }\n}\n\n@keyframes confetti-medium {\n  0% {\n    transform: translate3d(0, 0, 0) rotateX(0) rotateY(0);\n  }\n\n  100% {\n    transform: translate3d(100px, 105vh, 0) rotateX(100deg) rotateY(360deg);\n  }\n}\n\n@keyframes confetti-fast {\n  0% {\n    transform: translate3d(0, 0, 0) rotateX(0) rotateY(0);\n  }\n\n  100% {\n    transform: translate3d(-50px, 105vh, 0) rotateX(10deg) rotateY(250deg);\n  }\n}\n\n.confetti--animation-slow {\n  animation: confetti-slow 2.25s linear 1 forwards;\n}\n\n.confetti--animation-medium {\n  animation: confetti-medium 1.75s linear 1 forwards;\n}\n\n.confetti--animation-fast {\n  animation: confetti-fast 1.25s linear 1 forwards;\n}\n\n/* confetti end */\n```\n\n<br />\n\n컴포넌트가 `unmounded`될 때 Confetii를 지워주면 된다.\n\n```tsx\nlet cleanConfetti: () => void | undefined;\n//...\n\nconst [words, setWords] = useState<string[]>(['D', 'R', 'A', 'G']);\nconst [correctWords, setCorrectWords] = useState<string[]>([]);\n\nconst isClear = useMemo(() => correctWords.length === words.length, [correctWords, words]);\n\nuseEffect(() => {\n  if (isClear) {\n    cleanConfetti = Confettiful();\n  } else {\n    cleanConfetti?.();\n  }\n\n  return () => {\n    cleanConfetti?.();\n  };\n}, [isClear]);\n```\n\n---\n\n실제 동작은 아래 링크에서 볼 수 있습니다.\nhttps://dnd-playground.vercel.app/dnd\n\nstyle 정보, 전체 코드는 아래 깃허브에서 살펴보면 됩니다.\nhttps://github.com/bepyan/dnd-playground/blob/main/src/components/DragSizeExample.tsx\n","slug":"/blog/dnd-master/5-drag-and-drop","readingMinutes":12,"wordCount":1496,"serizeSlug":"dnd-master"}},"serize":null,"slug":"/blog/dnd-master/4-drag-carousel","compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    blockquote: \"blockquote\",\n    p: \"p\",\n    strong: \"strong\",\n    hr: \"hr\",\n    br: \"br\",\n    div: \"div\",\n    pre: \"pre\",\n    code: \"code\",\n    button: \"button\",\n    svg: \"svg\",\n    path: \"path\",\n    img: \"img\",\n    del: \"del\",\n    ol: \"ol\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"tldr\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#tldr\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"TL;DR\"]\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsxs(_components.p, {\n        children: [\"캐러셀을 \", _jsx(_components.strong, {\n          children: \"일정 거리이상\"\n        }), \" drag시키면 화면을 넘긴다.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h2, {\n      id: \"기본-원리--carousel-동작\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#기본-원리--carousel-동작\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"기본 원리 — Carousel 동작\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"여러 방식으로 Carousel를 구현할 수 있지만 아래와 같은 형태로 간편하게 마크업을 짜자.\", _jsx(_components.br, {}), \"\\n\", \"css는 편의상 \", _jsx(_components.a, {\n        href: \"https://tailwindcss.com/\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: _jsx(_components.strong, {\n          children: \"tailwindcss\"\n        })\n      }), \"를 같이 사용했다.\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsx(_components.pre, {\n        className: \"language-tsx\",\n        children: _jsxs(_components.code, {\n          className: \"language-tsx code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" imageList \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), _jsx(_components.span, {\n              className: \"token spread operator\",\n              children: \"...\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token constant\",\n              children: \"SLIDER_WIDTH\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"400\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token constant\",\n              children: \"SLIDER_HEIGHT\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"400\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"export\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"default\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"function\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"CarouselExample\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"currentIndex\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" setCurrentIndex\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"useState\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token number\",\n              children: \"0\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"transX\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" setTransX\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"useState\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token number\",\n              children: \"0\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"return\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsx(_components.span, {\n                className: \"token tag\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                })\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"      \"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"/* Viewer */\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"      \"\n            }), _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"div\"]\n              }), \"\\n\"]\n            })]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"        \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"className\"\n              }), _jsxs(_components.span, {\n                className: \"token attr-value\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation attr-equals\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                }), \"overflow-hidden\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                })]\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"        \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"style\"\n              }), _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [_jsx(_components.span, {\n                  className: \"token script-punctuation punctuation\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"\\n\"]\n              })]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [\"          width\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token constant\",\n                  children: \"SLIDER_WIDTH\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [\"          height\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token constant\",\n                  children: \"SLIDER_HEIGHT\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\"]\n            })\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"      \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"        \"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"/* Slider */\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"        \"\n            }), _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"div\"]\n              }), \"\\n\"]\n            })]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"          \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"className\"\n              }), _jsxs(_components.span, {\n                className: \"token attr-value\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation attr-equals\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                }), \"flex\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                })]\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"          \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"style\"\n              }), _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [_jsx(_components.span, {\n                  className: \"token script-punctuation punctuation\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"\\n\"]\n              })]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [\"            transform\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"translateX(\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"-\"\n                    }), \"currentIndex \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"*\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token constant\",\n                      children: \"SLIDER_WIDTH\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"+\"\n                    }), \" transX\", _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"px)\"\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\"]\n            })\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"        \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"          \"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"/* Slide */\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"          \"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"imageList\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"map\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"url\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" i\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token arrow operator\",\n              children: \"=>\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"            \", _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"div\"]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"key\"\n              }), _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [_jsx(_components.span, {\n                  className: \"token script-punctuation punctuation\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"i\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"className\"\n              }), _jsxs(_components.span, {\n                className: \"token attr-value\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation attr-equals\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                }), \"flex-shrink-0\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                })]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"              \"\n            }), _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"img\"]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"src\"\n              }), _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [_jsx(_components.span, {\n                  className: \"token script-punctuation punctuation\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"url\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"alt\"\n              }), _jsxs(_components.span, {\n                className: \"token attr-value\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation attr-equals\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                }), \"img\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                })]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"width\"\n              }), _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [_jsx(_components.span, {\n                  className: \"token script-punctuation punctuation\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), _jsx(_components.span, {\n                  className: \"token constant\",\n                  children: \"SLIDER_WIDTH\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"draggable\"\n              }), _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [_jsx(_components.span, {\n                  className: \"token script-punctuation punctuation\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"false\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \" \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"/>\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"            \"\n            }), _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"</\"\n                }), \"div\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"          \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"        \"\n            }), _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"</\"\n                }), \"div\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"      \"\n            }), _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"</\"\n                }), \"div\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"    \"\n            }), _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsx(_components.span, {\n                className: \"token tag\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"</\"\n                })\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), \"\\n\"]\n          })]\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"마크업을 그림으로 정리하자면 아래와 같다\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://velog.velcdn.com/images/bepyan/post/9c60a2a9-a65b-444b-bd66-0504dcf3fc14/image.png\",\n        alt: \"\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Viewer\"\n      }), \"는 \", _jsx(_components.strong, {\n        children: \"액자\"\n      }), \"와 같은 역할을 수행하고\", _jsx(_components.br, {}), \"\\n\", \"실질적으로 \", _jsx(_components.code, {\n        children: \"Slider\"\n      }), \"가 좌우로 \", _jsx(_components.code, {\n        children: \"transform\"\n      }), \"하여 캐러셀 움직임을 구현한다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"따라서 사전에 \", _jsx(_components.code, {\n        children: \"Slide\"\n      }), \"의 크기를 알고 있어야 한다.\", _jsx(_components.br, {}), \"\\n\", \"동적으로 크기를 맞출려면 \", _jsx(_components.code, {\n        children: \"ref\"\n      }), \"로 \", _jsx(_components.code, {\n        children: \"element.getBoundingClientRect\"\n      }), \"을 호출하면 된다.\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h2, {\n      id: \"기본-응용--carousel-drag\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#기본-응용--carousel-drag\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"기본 응용 — Carousel Drag\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"캐러셀을 \", _jsx(_components.strong, {\n        children: \"일정 거리이상 drag\"\n      }), \"하면 화면을 넘긴다.\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.del, {\n        children: \"참 쉽죠잉?\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://velog.velcdn.com/images/bepyan/post/d73cc634-2819-4264-ae72-704a0252f24d/image.gif\",\n        alt: \"\"\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://velog.io/@bepyan/Drag-Touch-%EB%BD%80%EA%B0%9C%EA%B8%B0#%EC%8B%AC%ED%99%94-%EC%9D%91%EC%9A%A9--%EC%B5%9C%EC%A2%85-%EC%BD%94%EB%93%9C\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"이전 글\"\n        }), \"을 참고하여 드래그 이벤트를 등록한다.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"drag된 거리에 만큼 \", _jsx(_components.code, {\n          children: \"transX\"\n        }), \"를 이동시킨다.\", _jsx(_components.br, {}), \"\\n\", \"한번의 drag로 한 슬라이드 이상으로 이동할 수 없도록 하자.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"손을 땠을 때 일정 거리이상 움직이면 \", _jsx(_components.code, {\n          children: \"currentIndex\"\n        }), \"를 변경해준다.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"drag된 \", _jsx(_components.code, {\n          children: \"transX\"\n        }), \"를 초기화 해준다.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsx(_components.pre, {\n        className: \"language-tsx\",\n        children: _jsxs(_components.code, {\n          className: \"language-tsx code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function-variable function\",\n              children: \"inrange\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"v\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token builtin\",\n              children: \"number\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" min\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token builtin\",\n              children: \"number\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" max\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token builtin\",\n              children: \"number\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token arrow operator\",\n              children: \"=>\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"if\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"v \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"<\"\n            }), \" min\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"return\"\n            }), \" min\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"if\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"v \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \">\"\n            }), \" max\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"return\"\n            }), \" max\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"return\"\n            }), \" v\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          })]\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsx(_components.pre, {\n        className: \"language-jsx\",\n        children: _jsxs(_components.code, {\n          className: \"language-jsx code-highlight\",\n          children: [_jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"div\"]\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"className\"\n              }), _jsxs(_components.span, {\n                className: \"token attr-value\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation attr-equals\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                }), \"flex\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                })]\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"style\"\n              }), _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [_jsx(_components.span, {\n                  className: \"token script-punctuation punctuation\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"\\n\"]\n              })]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token literal-property property\",\n                  children: \"transform\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"translateX(\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"-\"\n                    }), \"currentIndex \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"*\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token constant\",\n                      children: \"SLIDER_WIDTH\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"+\"\n                    }), \" transX\", _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"px)\"\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// 🏄🏻‍♂️  drag를 초기화할 때 부드럽게 이동시켜 주자. 꼼수입니다...\"\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token literal-property property\",\n                  children: \"transition\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"transform \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"transX \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"?\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token number\",\n                      children: \"0\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token number\",\n                      children: \"300\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"ms ease-in-out 0s\"\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token comment\",\n                children: \"// 1️⃣\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"{...registDragEvent({\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"    \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: _jsx(_components.span, {\n                  className: \"token namespace\",\n                  children: \"onDragChange:\"\n                })\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"(deltaX)\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"=\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"{\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"      \", _jsx(_components.span, {\n                className: \"token comment\",\n                children: \"// 2️⃣\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"      \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"setTransX(inrange(deltaX,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"-SLIDER_WIDTH,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"SLIDER_WIDTH));\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"    \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"},\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"    \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: _jsx(_components.span, {\n                  className: \"token namespace\",\n                  children: \"onDragEnd:\"\n                })\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"(deltaX)\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"=\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"{\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"      \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"const\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"maxIndex\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"=\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"imageList.length\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"-\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"1;\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: \"\\n\"\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"      \", _jsx(_components.span, {\n                className: \"token comment\",\n                children: \"// 3️⃣\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"      \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"if\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"(deltaX\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"<\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"-100)\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"setCurrentIndex(inrange(currentIndex\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"+\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"1,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"0,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"maxIndex));\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"      \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"if\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"(deltaX\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"100)\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"setCurrentIndex(inrange(currentIndex\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"-\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"1,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"0,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"maxIndex));\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: \"\\n\"\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"      \", _jsx(_components.span, {\n                className: \"token comment\",\n                children: \"// 4️⃣\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"      \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"setTransX(0);\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"    \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"},\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"})}\"\n              }), \"\\n\"]\n            })\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token tag\",\n              children: _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"  //...\\n\"\n            })\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\"\n            }), _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"</\"\n                }), \"div\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"\\n\"]\n          })]\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h2, {\n      id: \"심화-응용--infinite-carousel\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#심화-응용--infinite-carousel\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"심화 응용 — Infinite Carousel\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"단골로 사용되는 기능 중에 하나이다.\", _jsx(_components.br, {}), \"\\n\", \"무한으로 돌아가는 트릭은 생각보다 간단하다.\"]\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsxs(_components.p, {\n        children: [\"첫 슬라이드 좌측으로 이동시 마지막 슬라이드로,\", _jsx(_components.br, {}), \"\\n\", \"마지막 슬라이드 우측으로 이동시 첫 슬라이드로 이동하면 캐러셀이 무한으로 돌아갈 것이다.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"자, 구현 해보자!\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"기존 \", _jsx(_components.code, {\n        children: \"[0, 1, 2, 3]\"\n      }), \" 번 슬라이드를 \", _jsx(_components.code, {\n        children: \"[3, 0, 1, 2, 3, 0]\"\n      }), \"로 만든다.\", _jsx(_components.br, {}), \"\\n\", \"그리고 \", _jsx(_components.code, {\n        children: \"index\"\n      }), \"를 \", _jsx(_components.code, {\n        children: \"1\"\n      }), \"부터 시작하는 것을 잊지 말자.\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsx(_components.pre, {\n        className: \"language-tsx\",\n        children: _jsxs(_components.code, {\n          className: \"language-tsx code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" slideList \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"imageList\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"at\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"-\"\n            }), _jsx(_components.span, {\n              className: \"token number\",\n              children: \"1\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token spread operator\",\n              children: \"...\"\n            }), \"imageList\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" imageList\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"at\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token number\",\n              children: \"0\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"currentIndex\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" setCurrentIndex\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"useState\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token number\",\n              children: \"1\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          })]\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"자연스럽게 \", _jsx(_components.strong, {\n        children: \"무한루프\"\n      }), \" 되기 위해선 \", _jsx(_components.code, {\n        children: \"currentIndex\"\n      }), \"가 아래와 같이 동작해야 한다.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"code-highlight\",\n        children: _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"1 → 0  (에니메니션 없이) → 4\\n\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"dragEnd\"\n      }), \"시 \", _jsx(_components.code, {\n        children: \"currentIndex\"\n      }), \"를 변동하게 될 것이다.\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.a, {\n        href: \"https://developer.mozilla.org/en-US/docs/Web/API/Element/transitionend_event\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: _jsx(_components.strong, {\n          children: \"onTransitionEnd\"\n        })\n      }), \"을 활용하여 \", _jsx(_components.code, {\n        children: \"transition\"\n      }), \"이 종료될시 \", _jsx(_components.code, {\n        children: \"animate\"\n      }), \"를 끄고 \", _jsx(_components.code, {\n        children: \"currentIndex\"\n      }), \"를 변동해준다.\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsx(_components.pre, {\n        className: \"language-tsx\",\n        children: _jsxs(_components.code, {\n          className: \"language-tsx code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"animate\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" setAnimate\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"useState\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token boolean\",\n              children: \"false\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"div\"]\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"style\"\n              }), _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [_jsx(_components.span, {\n                  className: \"token script-punctuation punctuation\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"\\n\"]\n              })]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [\"    transform\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"translateX(\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"-\"\n                    }), \"currentIndex \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"*\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token constant\",\n                      children: \"SLIDER_WIDTH\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"+\"\n                    }), \" transX\", _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"px)\"\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [\"    transition\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"transform \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"animate \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"?\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token number\",\n                      children: \"300\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token number\",\n                      children: \"0\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"ms ease-in-out 0s\"\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"{...({\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"  \\t\", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: _jsx(_components.span, {\n                  className: \"token namespace\",\n                  children: \"onDragEnd:\"\n                })\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"(deltaX)\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"=\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"{\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"      \", _jsx(_components.span, {\n                className: \"token comment\",\n                children: \"//...\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: \"\\n\"\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"      \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"setAnimate(true);\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"      \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"setTransX(0);\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"    \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"}\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"})}\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"onTransitionEnd\"\n              }), _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [_jsx(_components.span, {\n                  className: \"token script-punctuation punctuation\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token arrow operator\",\n                  children: \"=>\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"\\n\"]\n              })]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [\"\\t\", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"setAnimate\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"false\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: _jsx(_components.span, {\n                className: \"token script language-javascript\",\n                children: \"\\n\"\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"currentIndex \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"===\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"0\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"setCurrentIndex\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"slideList\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token property-access\",\n                  children: \"length\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"2\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"else\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"currentIndex \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"===\"\n                }), \" slideList\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token property-access\",\n                  children: \"length\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"1\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"setCurrentIndex\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"1\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\"]\n            })\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token tag\",\n              children: _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"  \"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), _jsx(_components.span, {\n              className: \"token spread operator\",\n              children: \"...\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\"\n            }), _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"</\"\n                }), \"div\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"\\n\"]\n          })]\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://velog.velcdn.com/images/bepyan/post/7c638d6a-838a-4f70-9c1d-4517e9e0770b/image.gif\",\n        alt: \"\"\n      })\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h2, {\n      id: \"최종-코드\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#최종-코드\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"최종 코드\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsx(_components.pre, {\n        className: \"language-tsx\",\n        children: _jsxs(_components.code, {\n          className: \"language-tsx code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" imageList \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'https://blog.kakaocdn.net/dn/dpxiAT/btqUBv6Fvpn/E8xUMncq7AVuDeOim0LrMk/img.jpg'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'https://blog.kakaocdn.net/dn/BGT7X/btqUzvTqi5h/flp39GdJH0GU6mo7cTbbhk/img.jpg'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'https://blog.kakaocdn.net/dn/bWnmfv/btqUBwqZvwA/3CiXGt3SR0TXoOveRJxV91/img.jpg'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'https://blog.kakaocdn.net/dn/XsLCO/btqUL8PQLwp/NZWCU2jAYKkKSXwcohBKTK/img.jpg'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'https://blog.kakaocdn.net/dn/bG3iVL/btqUvCZPaRL/ofIjkNWJP1mj2bOG9fie51/img.jpg'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token constant\",\n              children: \"SLIDER_WIDTH\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"400\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token constant\",\n              children: \"SLIDER_HEIGHT\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"400\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"export\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"default\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"function\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"CarouselInfiniteExample\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" slideList \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"imageList\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"at\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"-\"\n            }), _jsx(_components.span, {\n              className: \"token number\",\n              children: \"1\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token spread operator\",\n              children: \"...\"\n            }), \"imageList\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" imageList\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"at\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token number\",\n              children: \"0\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"currentIndex\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" setCurrentIndex\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"useState\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token number\",\n              children: \"1\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"transX\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" setTransX\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"useState\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token number\",\n              children: \"0\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"animate\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" setAnimate\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"useState\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token boolean\",\n              children: \"false\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"return\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsx(_components.span, {\n                className: \"token tag\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                })\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"      \"\n            }), _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"div\"]\n              }), \"\\n\"]\n            })]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"        \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"className\"\n              }), _jsxs(_components.span, {\n                className: \"token attr-value\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation attr-equals\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                }), \"overflow-hidden\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                })]\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"        \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"style\"\n              }), _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [_jsx(_components.span, {\n                  className: \"token script-punctuation punctuation\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"\\n\"]\n              })]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [\"          width\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token constant\",\n                  children: \"SLIDER_WIDTH\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [\"          height\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token constant\",\n                  children: \"SLIDER_HEIGHT\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\"]\n            })\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"      \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"        \"\n            }), _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"div\"]\n              }), \"\\n\"]\n            })]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"          \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"className\"\n              }), _jsxs(_components.span, {\n                className: \"token attr-value\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation attr-equals\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                }), \"flex\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                })]\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"          \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"style\"\n              }), _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [_jsx(_components.span, {\n                  className: \"token script-punctuation punctuation\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"\\n\"]\n              })]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [\"            transform\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"translateX(\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"-\"\n                    }), \"currentIndex \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"*\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token constant\",\n                      children: \"SLIDER_WIDTH\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"+\"\n                    }), \" transX\", _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"px)\"\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [\"            transition\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"transform \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"animate \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"?\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token number\",\n                      children: \"300\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token number\",\n                      children: \"0\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"ms ease-in-out 0s\"\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"          \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"{...registDragEvent({\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"            \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: _jsx(_components.span, {\n                  className: \"token namespace\",\n                  children: \"onDragChange:\"\n                })\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"(deltaX)\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"=\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"{\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"              \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"setTransX(inrange(deltaX,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"-SLIDER_WIDTH\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"+\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"10,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"SLIDER_WIDTH\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"-\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"10));\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"            \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"},\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"            \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: _jsx(_components.span, {\n                  className: \"token namespace\",\n                  children: \"onDragEnd:\"\n                })\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"(deltaX)\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"=\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"{\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"              \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"const\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"maxIndex\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"=\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"slideList.length\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"-\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"1;\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: \"\\n\"\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"              \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"if\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"(deltaX\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"<\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"-100)\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"setCurrentIndex(inrange(currentIndex\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"+\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"1,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"0,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"maxIndex));\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"              \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"if\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"(deltaX\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"100)\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"setCurrentIndex(inrange(currentIndex\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"-\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"1,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"0,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"maxIndex));\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: \"\\n\"\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"              \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"setAnimate(true);\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"              \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"setTransX(0);\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"            \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"},\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"          \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"})}\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"          \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"onTransitionEnd\"\n              }), _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [_jsx(_components.span, {\n                  className: \"token script-punctuation punctuation\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token arrow operator\",\n                  children: \"=>\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"\\n\"]\n              })]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"setAnimate\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"false\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: _jsx(_components.span, {\n                className: \"token script language-javascript\",\n                children: \"\\n\"\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"currentIndex \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"===\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"0\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [\"              \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"setCurrentIndex\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"slideList\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token property-access\",\n                  children: \"length\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"2\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"else\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"currentIndex \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"===\"\n                }), \" slideList\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token property-access\",\n                  children: \"length\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"1\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [\"              \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"setCurrentIndex\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"1\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\"]\n            })\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"        \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"          \"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"slideList\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"map\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"url\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" i\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token arrow operator\",\n              children: \"=>\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"            \", _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"div\"]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"key\"\n              }), _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [_jsx(_components.span, {\n                  className: \"token script-punctuation punctuation\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"i\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"className\"\n              }), _jsxs(_components.span, {\n                className: \"token attr-value\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation attr-equals\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                }), \"flex-shrink-0\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                })]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"              \"\n            }), _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"img\"]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"src\"\n              }), _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [_jsx(_components.span, {\n                  className: \"token script-punctuation punctuation\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"url\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"alt\"\n              }), _jsxs(_components.span, {\n                className: \"token attr-value\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation attr-equals\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                }), \"img\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                })]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"width\"\n              }), _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [_jsx(_components.span, {\n                  className: \"token script-punctuation punctuation\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), _jsx(_components.span, {\n                  className: \"token constant\",\n                  children: \"SLIDER_WIDTH\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"draggable\"\n              }), _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [_jsx(_components.span, {\n                  className: \"token script-punctuation punctuation\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"false\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \" \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"/>\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"            \"\n            }), _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"</\"\n                }), \"div\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"          \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"        \"\n            }), _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"</\"\n                }), \"div\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"      \"\n            }), _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"</\"\n                }), \"div\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"    \"\n            }), _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsx(_components.span, {\n                className: \"token tag\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"</\"\n                })\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), \"\\n\"]\n          })]\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"실제 동작은 아래 링크에서 볼 수 있습니다.\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.a, {\n        href: \"https://dnd-playground.vercel.app/carousel\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"https://dnd-playground.vercel.app/carousel\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"style 정보, 전체 코드는 아래 깃허브에서 살펴보면 됩니다.\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.a, {\n        href: \"https://github.com/bepyan/dnd-playground/\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"https://github.com/bepyan/dnd-playground/\"\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tableOfContents":[{"slug":"tldr","text":"TL;DR","subSections":[]},{"slug":"기본-원리--carousel-동작","text":"기본 원리 — Carousel 동작","subSections":[]},{"slug":"기본-응용--carousel-drag","text":"기본 응용 — Carousel Drag","subSections":[]},{"slug":"심화-응용--infinite-carousel","text":"심화 응용 — Infinite Carousel","subSections":[]},{"slug":"최종-코드","text":"최종 코드","subSections":[]}]},"__N_SSG":true}