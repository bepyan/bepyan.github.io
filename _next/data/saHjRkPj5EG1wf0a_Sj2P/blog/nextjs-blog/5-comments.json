{"pageProps":{"post":{"title":"Next.js 블로그 댓글 기능 추가하기 (feat. giscus)","description":"💎 Giscus를 활용하여 Next.js 블로그에 댓글, 대댓글, 리액션을 달 수 있도록 해주자!","tags":["Next.js","Blog","giscus"],"draft":false,"date":"2022-11-13","content":"\n# giscus\n\n[utterances](https://utteranc.es/)의 영감을 받아 만들어진 오픈소스입니다.   \n기존 Github Issue가 아닌 Github Discussion을 활용하여 댓글을 작성하는 것이 특징입니다.\n\nutterances의 장점(광고없음, 가벼움, github 연동, 깔끔한 UI...)들이 너무나 완벽했지만,  \n개인적으로 하나 아쉬웠던 것이 `대댓글이 직관적이지 않다`는 것입니다.\n\ngiscus는 기존 장점을 그대로 가져가면서 아래 추가적인 기능을 제공합니다!\n- 대댓글 작성\n- 댓글 시간순 정렬\n- 댓글 인기순 정렬\n- 페이지에 리액션 달기\n- 귀여운 로딩 UI 제공\n- 강력한 [config](https://github.com/giscus/giscus/blob/main/ADVANCED-USAGE.md#advanced-usage) 제공\n- (덤으로) github에서 전체 댓글들을 더 직관적으로 쉽게 관리\n- (덤으로) 잘 번역된 한글 공식문서 ✨\n\n💎 https://giscus.app/ko \n\n## giscus 연동\n\nGithub Discussion을 연동하기 위해 사전 세팅을 해야합니다.\n\n1. 레포는 `Public`이여야 합니다.\n    - 만약 `private`을 유지하고 싶다면 별도의 `public` 레포(ex. `myusername/comment`)를 생성하면 됩니다.\n2. Github 계정에 [giscus](https://github.com/apps/giscus) 앱을 설치합니다.\n3. Settings에서 [discussions]((https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/enabling-or-disabling-github-discussions-for-a-repository). ) 기능을 활성화 합니다.\n\n<br/>\n\n[공식문서 가이드](https://giscus.app/ko) 따라 `script config`를 생성합니다.\n\n1. 레포 이름 `myusername/myrepo` 입력\n2. Discussion 카테고리 선택\n    - 일반적으로 General 선택하면 됩니다.\n3. 원하는 입맛대로 기능 설정\n    - 가이드 문서의 친절한 설명을 참고해보세요!\n4. 생성된 script config 확인\n    - 위 과정에서 `repo-id` `category-id`를 자동으로 탐지해줍니다!\n\n## 코드 작성\n\n생성된 script config 바탕으로 Next.js에서 활용할 수 있는 컴포넌트를 구현합니다.   \nNext.js 테마에 따라 자동으로 반응하도록 구현했습니다.\n\n```tsx\nimport { useTheme } from 'next-themes';\nimport { useEffect, useRef } from 'react';\n\nexport default function Giscus() {\n  const ref = useRef<HTMLDivElement>(null);\n  const { resolvedTheme } = useTheme();\n\n  // https://github.com/giscus/giscus/tree/main/styles/themes\n  const theme = resolvedTheme === 'dark' ? 'dark' : 'light';\n\n  useEffect(() => {\n    if (!ref.current || ref.current.hasChildNodes()) return;\n\n    const scriptElem = document.createElement('script');\n    scriptElem.src = 'https://giscus.app/client.js';\n    scriptElem.async = true;\n    scriptElem.crossOrigin = 'anonymous';\n\n    scriptElem.setAttribute('data-repo', 'myusername/myrepo');\n    scriptElem.setAttribute('data-repo-id', '[자동]');\n    scriptElem.setAttribute('data-category', 'General');\n    scriptElem.setAttribute('data-category-id', '[자동]');\n    scriptElem.setAttribute('data-mapping', 'pathname');\n    scriptElem.setAttribute('data-strict', '0');\n    scriptElem.setAttribute('data-reactions-enabled', '1');\n    scriptElem.setAttribute('data-emit-metadata', '0');\n    scriptElem.setAttribute('data-input-position', 'bottom');\n    scriptElem.setAttribute('data-theme', theme);\n    scriptElem.setAttribute('data-lang', 'en');\n\n    ref.current.appendChild(scriptElem);\n  }, []);\n\n  // https://github.com/giscus/giscus/blob/main/ADVANCED-USAGE.md#isetconfigmessage\n  useEffect(() => {\n    const iframe = document.querySelector<HTMLIFrameElement>('iframe.giscus-frame');\n    iframe?.contentWindow?.postMessage({ giscus: { setConfig: { theme } } }, 'https://giscus.app');\n  }, [theme]);\n\n  return <section ref={ref} />;\n}\n```\n\n- `theme`을 [직접 제작](https://github.com/giscus/giscus/blob/main/CONTRIBUTING.md#creating-new-themes)할 수도 있습니다.\n- `id` 값들은 어짜피 공개 접근이 가능하기 때문에 따로 `env`로 숨기지 않았습니다.\n- `data-lang`가 `ko`도 지원해주지만 ~~영어가 더 간지나기 때문에~~ 저는 `en`을 선택했습니다.\n- 만약 utterances를 사용하고 싶다면 [여기 코드](https://github.com/bepyan/bepyan.github.io/blob/main/src/components/Utterances.tsx)를 참고하시면 됩니다.\n- 참고\n    - https://github.com/utterance/utterances/issues/161#issuecomment-820722906\n    - https://github.com/utterance/utterances/issues/549#issuecomment-913070158\n\n\n## Trouble Shooting\n\n### 💥 github 로그인시 home으로 리다이랙팅되는 문제\n\ngiscus는 utterances 처럼 canonical link를 활용하여 로그인 리다이랙팅을 진행합니다.   \n\n따라서 SEO에서 canonical link를 **현재 글 주소**로 잘 설정해주면 됩니다.\n\nhttps://github.com/utterance/utterances/issues/474#issuecomment-774887936\n","slug":"/blog/nextjs-blog/5-comments","readingMinutes":4,"wordCount":377,"serizeSlug":"nextjs-blog"},"postFooterProps":{"prevPost":{"title":"Next.js mdx plugin","description":"`next-mdx-remote`에서 플로그인으로 이쁜 결과물을 만들자.","tags":["Next.js","Blog"],"draft":false,"date":"2022-12-27","slug":"/blog/nextjs-blog/4-mdx-plugin","readingMinutes":8,"wordCount":831,"serizeSlug":"nextjs-blog"},"nextPost":{"title":"Next.js 블로그 mdx에서 이미지 복붙하기 (feat. Paste Image)","description":"vscode markdown 파일에서 이미지를 기똥차게 사용해보자!","tags":["Next.js","Blog","markdown","Paste Image"],"draft":false,"date":"2022-11-15","slug":"/blog/nextjs-blog/6-mdx-images","readingMinutes":2,"wordCount":173,"serizeSlug":"nextjs-blog"}},"serize":{"title":"Next.js로 블로그 만들기","description":"100% 취향 반영, 내 손으로 직접 블로그를 만들어 보자!!","tags":[],"draft":false,"date":"2022-11-11","posts":[{"title":"기술 블로그를 만들 땐 무엇을 고려해야 하는가?","description":"블로그를 만들 때 어떤 것들을 고려해야 할까? 🤔","tags":["Next.js","Blog"],"date":"2022-11-11","slug":"/blog/nextjs-blog/1-boilerplate","readingMinutes":5,"wordCount":402,"serizeSlug":"nextjs-blog"},{"title":"Next.js 블로그 Image Optimization","description":"Next.js static html에서 이미지를 기똥차게 사용해보자!","tags":["Next.js","Blog","image","optimization"],"draft":false,"date":"2022-11-14","slug":"/blog/nextjs-blog/2-image-optimization","readingMinutes":3,"wordCount":282,"serizeSlug":"nextjs-blog"},{"title":"Next.js 블로그 글 리스트 만들기","description":"디랙토리 기반을 글 리스트를 만들자 🤔","tags":["Next.js","Blog"],"date":"2022-11-11","slug":"/blog/nextjs-blog/3-blog-list","readingMinutes":1,"wordCount":110,"serizeSlug":"nextjs-blog"},{"title":"Next.js mdx plugin","description":"`next-mdx-remote`에서 플로그인으로 이쁜 결과물을 만들자.","tags":["Next.js","Blog"],"draft":false,"date":"2022-12-27","slug":"/blog/nextjs-blog/4-mdx-plugin","readingMinutes":8,"wordCount":831,"serizeSlug":"nextjs-blog"},{"title":"Next.js 블로그 댓글 기능 추가하기 (feat. giscus)","description":"💎 Giscus를 활용하여 Next.js 블로그에 댓글, 대댓글, 리액션을 달 수 있도록 해주자!","tags":["Next.js","Blog","giscus"],"draft":false,"date":"2022-11-13","slug":"/blog/nextjs-blog/5-comments","readingMinutes":4,"wordCount":377,"serizeSlug":"nextjs-blog"},{"title":"Next.js 블로그 mdx에서 이미지 복붙하기 (feat. Paste Image)","description":"vscode markdown 파일에서 이미지를 기똥차게 사용해보자!","tags":["Next.js","Blog","markdown","Paste Image"],"draft":false,"date":"2022-11-15","slug":"/blog/nextjs-blog/6-mdx-images","readingMinutes":2,"wordCount":173,"serizeSlug":"nextjs-blog"},{"title":"Next.js 블로그 Google Analytics 연동하기","description":"블로그에 Google Analytics v4를 심어주자!","tags":["Next.js","Blog","Typescript","GA"],"draft":false,"date":"2022-11-16","slug":"/blog/nextjs-blog/google-analytics","readingMinutes":3,"wordCount":260,"serizeSlug":"nextjs-blog"},{"title":"Next.js 블로그 sitemap 생성, 검색엔진 등록","description":"`next-sitemap` 라이브러리를 사용해서 쉽게 sitemap 만들고 검색엔진에 등록하자.","tags":["Next.js","Blog","SEO"],"draft":false,"date":"2022-11-15","slug":"/blog/nextjs-blog/sitemap","readingMinutes":4,"wordCount":319,"serizeSlug":"nextjs-blog"}],"readingMinutes":30,"slug":"/blog/nextjs-blog"},"slug":"/blog/nextjs-blog/5-comments","compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    span: \"span\",\n    p: \"p\",\n    br: \"br\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\",\n    ol: \"ol\",\n    div: \"div\",\n    pre: \"pre\",\n    button: \"button\",\n    svg: \"svg\",\n    path: \"path\",\n    del: \"del\",\n    h3: \"h3\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h1, {\n      id: \"giscus\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#giscus\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"giscus\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://utteranc.es/\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"utterances\"\n      }), \"의 영감을 받아 만들어진 오픈소스입니다.\", _jsx(_components.br, {}), \"\\n\", \"기존 Github Issue가 아닌 Github Discussion을 활용하여 댓글을 작성하는 것이 특징입니다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"utterances의 장점(광고없음, 가벼움, github 연동, 깔끔한 UI...)들이 너무나 완벽했지만,\", _jsx(_components.br, {}), \"\\n\", \"개인적으로 하나 아쉬웠던 것이 \", _jsx(_components.code, {\n        children: \"대댓글이 직관적이지 않다\"\n      }), \"는 것입니다.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"giscus는 기존 장점을 그대로 가져가면서 아래 추가적인 기능을 제공합니다!\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"대댓글 작성\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"댓글 시간순 정렬\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"댓글 인기순 정렬\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"페이지에 리액션 달기\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"귀여운 로딩 UI 제공\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"강력한 \", _jsx(_components.a, {\n          href: \"https://github.com/giscus/giscus/blob/main/ADVANCED-USAGE.md#advanced-usage\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"config\"\n        }), \" 제공\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"(덤으로) github에서 전체 댓글들을 더 직관적으로 쉽게 관리\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"(덤으로) 잘 번역된 한글 공식문서 ✨\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"💎 \", _jsx(_components.a, {\n        href: \"https://giscus.app/ko\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"https://giscus.app/ko\"\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"giscus-연동\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#giscus-연동\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"giscus 연동\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Github Discussion을 연동하기 위해 사전 세팅을 해야합니다.\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"레포는 \", _jsx(_components.code, {\n          children: \"Public\"\n        }), \"이여야 합니다.\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"만약 \", _jsx(_components.code, {\n              children: \"private\"\n            }), \"을 유지하고 싶다면 별도의 \", _jsx(_components.code, {\n              children: \"public\"\n            }), \" 레포(ex. \", _jsx(_components.code, {\n              children: \"myusername/comment\"\n            }), \")를 생성하면 됩니다.\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Github 계정에 \", _jsx(_components.a, {\n          href: \"https://github.com/apps/giscus\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"giscus\"\n        }), \" 앱을 설치합니다.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Settings에서 \", _jsx(_components.a, {\n          href: \"(https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/enabling-or-disabling-github-discussions-for-a-repository).\",\n          children: \"discussions\"\n        }), \" 기능을 활성화 합니다.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://giscus.app/ko\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"공식문서 가이드\"\n      }), \" 따라 \", _jsx(_components.code, {\n        children: \"script config\"\n      }), \"를 생성합니다.\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"레포 이름 \", _jsx(_components.code, {\n          children: \"myusername/myrepo\"\n        }), \" 입력\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Discussion 카테고리 선택\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"일반적으로 General 선택하면 됩니다.\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"원하는 입맛대로 기능 설정\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"가이드 문서의 친절한 설명을 참고해보세요!\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"생성된 script config 확인\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"위 과정에서 \", _jsx(_components.code, {\n              children: \"repo-id\"\n            }), \" \", _jsx(_components.code, {\n              children: \"category-id\"\n            }), \"를 자동으로 탐지해줍니다!\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"코드-작성\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#코드-작성\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"코드 작성\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"생성된 script config 바탕으로 Next.js에서 활용할 수 있는 컴포넌트를 구현합니다.\", _jsx(_components.br, {}), \"\\n\", \"Next.js 테마에 따라 자동으로 반응하도록 구현했습니다.\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsx(_components.pre, {\n        className: \"language-tsx\",\n        children: _jsxs(_components.code, {\n          className: \"language-tsx code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"import\"\n            }), \" \", _jsxs(_components.span, {\n              className: \"token imports\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"{\"\n              }), \" useTheme \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"}\"\n              })]\n            }), \" \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"from\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'next-themes'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"import\"\n            }), \" \", _jsxs(_components.span, {\n              className: \"token imports\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"{\"\n              }), \" useEffect\", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \",\"\n              }), \" useRef \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"}\"\n              })]\n            }), \" \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"from\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'react'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"export\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"default\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"function\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"Giscus\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" ref \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsxs(_components.span, {\n              className: \"token generic-function\",\n              children: [_jsx(_components.span, {\n                className: \"token function\",\n                children: \"useRef\"\n              }), _jsxs(_components.span, {\n                className: \"token generic class-name\",\n                children: [_jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"<\"\n                }), \"HTMLDivElement\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \">\"\n                })]\n              })]\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"null\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \" resolvedTheme \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"useTheme\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"// https://github.com/giscus/giscus/tree/main/styles/themes\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" theme \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" resolvedTheme \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"===\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'dark'\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"?\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'dark'\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'light'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"useEffect\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token arrow operator\",\n              children: \"=>\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"if\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"!\"\n            }), \"ref\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token property-access\",\n              children: \"current\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"||\"\n            }), \" ref\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token property-access\",\n              children: \"current\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"hasChildNodes\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"return\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" scriptElem \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token dom variable\",\n              children: \"document\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"createElement\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'script'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    scriptElem\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token property-access\",\n              children: \"src\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'https://giscus.app/client.js'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    scriptElem\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token property-access\",\n              children: \"async\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token boolean\",\n              children: \"true\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    scriptElem\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token property-access\",\n              children: \"crossOrigin\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'anonymous'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    scriptElem\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"setAttribute\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'data-repo'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'myusername/myrepo'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    scriptElem\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"setAttribute\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'data-repo-id'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'[자동]'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    scriptElem\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"setAttribute\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'data-category'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'General'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    scriptElem\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"setAttribute\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'data-category-id'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'[자동]'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    scriptElem\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"setAttribute\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'data-mapping'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'pathname'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    scriptElem\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"setAttribute\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'data-strict'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'0'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    scriptElem\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"setAttribute\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'data-reactions-enabled'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'1'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    scriptElem\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"setAttribute\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'data-emit-metadata'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'0'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    scriptElem\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"setAttribute\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'data-input-position'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'bottom'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    scriptElem\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"setAttribute\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'data-theme'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" theme\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    scriptElem\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"setAttribute\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'data-lang'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'en'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    ref\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token property-access\",\n              children: \"current\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"appendChild\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"scriptElem\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"// https://github.com/giscus/giscus/blob/main/ADVANCED-USAGE.md#isetconfigmessage\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"useEffect\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token arrow operator\",\n              children: \"=>\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" iframe \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token dom variable\",\n              children: \"document\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token property-access\",\n              children: \"querySelector\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"<\"\n            }), _jsx(_components.span, {\n              className: \"token maybe-class-name\",\n              children: \"HTMLIFrameElement\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \">\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'iframe.giscus-frame'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    iframe\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"?.\"\n            }), \"contentWindow\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"?.\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"postMessage\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \" giscus\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \" setConfig\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \" theme \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'https://giscus.app'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"theme\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"return\"\n            }), \" \", _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"section\"]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"ref\"\n              }), _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [_jsx(_components.span, {\n                  className: \"token script-punctuation punctuation\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"ref\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \" \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"/>\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), \"\\n\"]\n          })]\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"theme\"\n        }), \"을 \", _jsx(_components.a, {\n          href: \"https://github.com/giscus/giscus/blob/main/CONTRIBUTING.md#creating-new-themes\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"직접 제작\"\n        }), \"할 수도 있습니다.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"id\"\n        }), \" 값들은 어짜피 공개 접근이 가능하기 때문에 따로 \", _jsx(_components.code, {\n          children: \"env\"\n        }), \"로 숨기지 않았습니다.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"data-lang\"\n        }), \"가 \", _jsx(_components.code, {\n          children: \"ko\"\n        }), \"도 지원해주지만 \", _jsx(_components.del, {\n          children: \"영어가 더 간지나기 때문에\"\n        }), \" 저는 \", _jsx(_components.code, {\n          children: \"en\"\n        }), \"을 선택했습니다.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"만약 utterances를 사용하고 싶다면 \", _jsx(_components.a, {\n          href: \"https://github.com/bepyan/bepyan.github.io/blob/main/src/components/Utterances.tsx\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"여기 코드\"\n        }), \"를 참고하시면 됩니다.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"참고\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: _jsx(_components.a, {\n              href: \"https://github.com/utterance/utterances/issues/161#issuecomment-820722906\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"https://github.com/utterance/utterances/issues/161#issuecomment-820722906\"\n            })\n          }), \"\\n\", _jsx(_components.li, {\n            children: _jsx(_components.a, {\n              href: \"https://github.com/utterance/utterances/issues/549#issuecomment-913070158\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"https://github.com/utterance/utterances/issues/549#issuecomment-913070158\"\n            })\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"trouble-shooting\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#trouble-shooting\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Trouble Shooting\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"-github-로그인시-home으로-리다이랙팅되는-문제\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#-github-로그인시-home으로-리다이랙팅되는-문제\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"💥 github 로그인시 home으로 리다이랙팅되는 문제\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"giscus는 utterances 처럼 canonical link를 활용하여 로그인 리다이랙팅을 진행합니다.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"따라서 SEO에서 canonical link를 \", _jsx(_components.strong, {\n        children: \"현재 글 주소\"\n      }), \"로 잘 설정해주면 됩니다.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://github.com/utterance/utterances/issues/474#issuecomment-774887936\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"https://github.com/utterance/utterances/issues/474#issuecomment-774887936\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tableOfContents":[{"slug":"giscus","text":"giscus","subSections":[]},{"slug":"giscus-연동","text":"giscus 연동","subSections":[]},{"slug":"코드-작성","text":"코드 작성","subSections":[]},{"slug":"trouble-shooting","text":"Trouble Shooting","subSections":[{"slug":"-github-로그인시-home으로-리다이랙팅되는-문제","text":"💥 github 로그인시 home으로 리다이랙팅되는 문제"}]}]},"__N_SSG":true}