{"pageProps":{"tag":"Typescript","posts":[{"title":"Next.js 블로그 Google Analytics 연동하기","description":"블로그에 Google Analytics v4를 심어주자!","tags":["Next.js","Blog","Typescript","GA"],"draft":false,"date":"2022-11-16","slug":"/blog/nextjs-blog/5-google-analytics","readingMinutes":4,"wordCount":502,"serizeSlug":"nextjs-blog"}],"snippets":[{"title":"(React) useMediaQuery","description":"React / Next.js 런타임에서 MediaQuery를 충족시켰는지 여부를 알고 싶다. import { useCallback, useEffect, useState } from 'react'; export const useMedi...","icon":"","image":"","tags":["React","Typescript","hook","css"],"draft":false,"date":"2023-01-14","slug":"/snippets/react/use-media-query","readingMinutes":1,"wordCount":87,"snippetSlug":"react"},{"title":"(TS) Type에서 Promise 제거하기","description":"`Awaited` 문법을 통해서 Promise 타입을 벗겨낼 수 있다. // A = string type A = Awaited<Promise<string>>; // B = number type B = Awaited<Promise<Pr...","icon":"","image":"","tags":["Typescript"],"draft":false,"date":"2022-12-30","slug":"/snippets/typescript/remove-promise","readingMinutes":1,"wordCount":34,"snippetSlug":"typescript"},{"title":"(React) useConfettiful","description":"`hook` 하나로 모든 것을 해결했다! import { useEffect, useState } from 'react'; / 초당 생성할 confetti 개수 / const confettiFrequency = 10; / confett...","icon":"","image":"","tags":["React","Typescript","hook","css"],"draft":false,"date":"2022-12-29","slug":"/snippets/react/confettiful","readingMinutes":2,"wordCount":354,"snippetSlug":"react"},{"title":"(React) Lodash Debounce","description":"`javascript` yarn add lodash.debounce const App = () => { const searchValue, setSearchValue = useState(''); const searchHandler = ...","icon":"","image":"","tags":["React","Javascript","Typescript","debounce"],"draft":false,"date":"2022-12-13","slug":"/snippets/react/lodash-debounce","readingMinutes":1,"wordCount":107,"snippetSlug":"react"}]},"__N_SSG":true}