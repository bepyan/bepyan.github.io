{"pageProps":{"post":{"title":"(CSS) 특정 영역만 상위 클래스 영향 안 받기","description":"다크모드에서 특정 영역만 다크모드 스타일이 적용되지 않길 바랄 때가 있다.\n\n---\n\n 해결 방법\n\n:not(https://developer.mozilla.org/ko/docs/Web/CSS/:not) :where(https://de...","icon":"","image":"","tags":["css"],"draft":false,"date":"2023-01-10","content":"\n다크모드에서 특정 영역만 다크모드 스타일이 적용되지 않길 바랄 때가 있다.\n\n---\n\n## 해결 방법\n\n[`:not`](https://developer.mozilla.org/ko/docs/Web/CSS/:not) [`:where`](https://developer.mozilla.org/en-US/docs/Web/CSS/:where) [`attribute selector`](https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors) 3가지 문법을 조합하면 쉽게 적용할 수 있다.\n\n```css\n:not(:where([class~=\"className\"] *))\n```\n\n부모 중 클래스 속성이 `className`이 아닌 경우에만 css 적용한다.\n\n---\n\n## 예시\n\n```css {5}\n.txt {\n    color: red;\n}\n\n.dark .txt:not(:where([class~=\"no-dark\"] *)) {\n    color: blue;\n}\n```\n\n```html\n<body class=\"dark\">\n    <div>\n        <span class=\"txt\">dynamic text</span>\n    </div>\n    <div class=\"no-dark\">\n        <span class=\"txt\">red text</span>\n    </div>\n</body>\n```\n\n---\n\n**tailwindcss** [`.not-prose`](https://tailwindcss.com/docs/typography-plugin#undoing-typography-styles)에서 사용하는 방법이다.\nhttps://github.com/tailwindlabs/tailwindcss-typography/pull/205/files","slug":"/snippets/css/no-dark","readingMinutes":1,"wordCount":79,"snippetSlug":"css"},"serize":null,"postFooterProps":{"prevPost":{"title":"(CSS) svg 넣기","description":"기본적으로 content 속성에 url로 svg 이미지를 넣을 수 있다.\n\nhttps://stackoverflow.com/questions/19255296/is-there-a-way-to-use-svg-as-content-in-a-p...","icon":"","image":"","tags":["css"],"draft":false,"date":"2022-11-25","content":"\n기본적으로 `content` 속성에 url로 svg 이미지를 넣을 수 있다.\n\nhttps://stackoverflow.com/questions/19255296/is-there-a-way-to-use-svg-as-content-in-a-pseudo-element-before-or-after\n\n```tsx\n#test::before {\n  content: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='100' cy='50' r='40' stroke='black' stroke-width='2' fill='red'/%3E%3Cpolyline points='20,20 40,25 60,40 80,120 120,140 200,180' style='fill:none;stroke:black;stroke-width:3'/%3E%3C/svg%3E \");\n  width: 200px;\n  height: 200px;\n}\n```\n\n기존 svg를 url형태로 파싱을 해야하는데 아래 사이트에서 도움을 받을 수 있다.\n\nhttps://yoksel.github.io/url-encoder/\n\n하지만 만약 색상을 동적으로 변경을 해야한다면?\n\n`mask-image`을 활용한다.\n\nhttps://codepen.io/noahblon/post/coloring-svgs-in-css-background-images\n\n```tsx\n.icon {\n    background-color: red;\n    -webkit-mask-image: url(icon.svg);\n    mask-image: url(icon.svg);\n}\n```\n\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/mask-image#browser_compatibility\n\n브라우저 호환성이 조..금 빡세다.\n\n위치를 조정하고 싶다면?\n\n`mask-position` 을 활용하자.\n\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Backgrounds_and_Borders/Resizing_background_images\n\n```tsx\n.prose .anchor:after {\n  content: ' ';\n  mask-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='none' aria-hidden='true'%3E%3Cpath d='M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10' stroke='currentColor' strokeWidth='1.5' strokeLinecap='round' /%3E%3C/svg%3E\");\n  mask-repeat: no-repeat;\n  mask-position: center;\n\n  @apply h-4 w-4 bg-gray-700 dark:bg-gray-300;\n}\n```\n","slug":"/snippets/css/insert-svg","readingMinutes":1,"wordCount":116,"snippetSlug":"css"},"nextPost":{"title":"(CSS) scroll bar 제거","description":"스크롤은 동작하지만 스크롤바를 숨기고 싶을 때가 있다.\n\ncss\nbody {\n  -ms-overflow-style: none; / IE and Edge /\n  scrollbar-width: none; / Firefox /\n}\nbody...","icon":"","image":"","tags":["css"],"draft":false,"date":"2022-12-17","content":"\n스크롤은 동작하지만 스크롤바를 숨기고 싶을 때가 있다.\n\n```css\nbody {\n  -ms-overflow-style: none; /* IE and Edge */\n  scrollbar-width: none; /* Firefox */\n}\nbody::-webkit-scrollbar {\n  display: none; /* Chrome, Safari, Opera*/\n}\n```\n\n특정 엘리먼트의 스크롤바를 숨기고 싶다면 `body` 대신 클래스명을 입력하면 된다.\n\n```css\n.no-scrollbar {\n  -ms-overflow-style: none; /* IE and Edge */\n  scrollbar-width: none; /* Firefox */\n}\n.no-scrollbar::-webkit-scrollbar {\n  display: none; /* Chrome, Safari, Opera*/\n}\n```\n","slug":"/snippets/css/remove-scrollbar","readingMinutes":1,"wordCount":71,"snippetSlug":"css"}},"slug":"/snippets/css/no-dark","compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    hr: \"hr\",\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    code: \"code\",\n    div: \"div\",\n    pre: \"pre\",\n    button: \"button\",\n    svg: \"svg\",\n    path: \"path\",\n    strong: \"strong\",\n    br: \"br\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"다크모드에서 특정 영역만 다크모드 스타일이 적용되지 않길 바랄 때가 있다.\"\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h2, {\n      id: \"해결-방법\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#해결-방법\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"해결 방법\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://developer.mozilla.org/ko/docs/Web/CSS/:not\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: _jsx(_components.code, {\n          children: \":not\"\n        })\n      }), \" \", _jsx(_components.a, {\n        href: \"https://developer.mozilla.org/en-US/docs/Web/CSS/:where\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: _jsx(_components.code, {\n          children: \":where\"\n        })\n      }), \" \", _jsx(_components.a, {\n        href: \"https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: _jsx(_components.code, {\n          children: \"attribute selector\"\n        })\n      }), \" 3가지 문법을 조합하면 쉽게 적용할 수 있다.\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsx(_components.pre, {\n        className: \"language-css\",\n        children: _jsx(_components.code, {\n          className: \"language-css code-highlight\",\n          children: _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \":\"\n            }), _jsx(_components.span, {\n              className: \"token function\",\n              children: \"not\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \":\"\n            }), _jsx(_components.span, {\n              className: \"token function\",\n              children: \"where\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"[class~=\", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"className\\\"\"\n            }), \"] *\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \"\\n\"]\n          })\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"부모 중 클래스 속성이 \", _jsx(_components.code, {\n        children: \"className\"\n      }), \"이 아닌 경우에만 css 적용한다.\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h2, {\n      id: \"예시\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#예시\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"예시\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsx(_components.pre, {\n        className: \"language-css\",\n        children: _jsxs(_components.code, {\n          className: \"language-css code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token selector\",\n              children: _jsx(_components.span, {\n                className: \"token class\",\n                children: \".txt\"\n              })\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token property\",\n              children: \"color\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token color\",\n              children: \"red\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line highlight-line\",\n            children: [_jsxs(_components.span, {\n              className: \"token selector\",\n              children: [_jsx(_components.span, {\n                className: \"token class\",\n                children: \".dark\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token class\",\n                children: \".txt\"\n              }), _jsx(_components.span, {\n                className: \"token pseudo-class\",\n                children: \":not\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"(\"\n              }), _jsx(_components.span, {\n                className: \"token pseudo-class\",\n                children: \":where\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"(\"\n              }), _jsxs(_components.span, {\n                className: \"token attribute\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token attr-name\",\n                  children: \"class\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"~=\"\n                }), _jsx(_components.span, {\n                  className: \"token attr-value\",\n                  children: \"\\\"no-dark\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \" *\", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \")\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \")\"\n              })]\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token property\",\n              children: \"color\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token color\",\n              children: \"blue\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), \"\\n\"]\n          })]\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsx(_components.pre, {\n        className: \"language-html\",\n        children: _jsxs(_components.code, {\n          className: \"language-html code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"body\"]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"class\"\n              }), _jsxs(_components.span, {\n                className: \"token attr-value\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation attr-equals\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                }), \"dark\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                })]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"div\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"        \", _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"span\"]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"class\"\n              }), _jsxs(_components.span, {\n                className: \"token attr-value\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation attr-equals\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                }), \"txt\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                })]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"dynamic text\", _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"</\"\n                }), \"span\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"</\"\n                }), \"div\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"div\"]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"class\"\n              }), _jsxs(_components.span, {\n                className: \"token attr-value\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation attr-equals\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                }), \"no-dark\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                })]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"        \", _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"span\"]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"class\"\n              }), _jsxs(_components.span, {\n                className: \"token attr-value\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation attr-equals\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                }), \"txt\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                })]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"red text\", _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"</\"\n                }), \"span\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"</\"\n                }), \"div\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"</\"\n                }), \"body\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"\\n\"]\n          })]\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"tailwindcss\"\n      }), \" \", _jsx(_components.a, {\n        href: \"https://tailwindcss.com/docs/typography-plugin#undoing-typography-styles\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: _jsx(_components.code, {\n          children: \".not-prose\"\n        })\n      }), \"에서 사용하는 방법이다.\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.a, {\n        href: \"https://github.com/tailwindlabs/tailwindcss-typography/pull/205/files\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"https://github.com/tailwindlabs/tailwindcss-typography/pull/205/files\"\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tableOfContents":[{"slug":"해결-방법","text":"해결 방법","subSections":[]},{"slug":"예시","text":"예시","subSections":[]}]},"__N_SSG":true}