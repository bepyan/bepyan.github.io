{"pageProps":{"post":{"title":"(ESLint) Parsing error: The keyword 'import' is reserved","description":"vscode에서 개발 중 `Parsing error: The keyword 'import' is reserved`를 마주칠 때가 있다. `typescript` 기반으로 개발을 하는데 `javascript`으로 된 설정 파일에서 에러를...","icon":"","image":"","tags":["troubleshooting","eslint"],"draft":false,"date":"2022-12-27","content":"\nvscode에서 개발 중 `Parsing error: The keyword 'import' is reserved`를 마주칠 때가 있다.\n`typescript` 기반으로 개발을 하는데 `javascript`으로 된 설정 파일에서 에러를 뱉는다.\n\n---\n\n## 원인\n\n말그대로 eslint의 parser가 `import` 구문을 해석할 수 없기 때문에 에러가 발생한다.\nESLint는 기본적으로 [Espree](https://github.com/eslint/espree)를 사용하고 이는 `commonjs` 기반으로 구문을 해석하기에 에러가 발생된다.\n\n---\n\n## 해결법\n\n1. `commonjs`가 아닌 `module` 기반으로 구문을 해석한다.\n\n```js:.eslintrc.cjs\nmodule.exports = {\n  //...\n  overrides: [\n    {\n      files: ['**/*.ts?(x)'],\n      parser: '@typescript-eslint/parser',\n      //...\n    },\n    {\n        files: ['**/*.js?(x)'],\n        parserOptions: {\n            sourceType: 'module',\n            ecmaVersion: 2015,\n        },\n    },\n  ],\n};\n```\n\n2. 다른 parser를 통해서 구문을 해석한다.\n\n가장 대표적인 [`@babel/parser`](https://www.npmjs.com/package/@babel/eslint-parser)를 사용하면 된다.\n참고로 [`babel-eslint`](https://www.npmjs.com/package/babel-eslint)는 deprecated 되었다.\n\n```shell\nyarn add -D @babel/parser @babel/preset-env\n```\n\n```js:.eslintrc.cjs\nmodule.exports = {\n  parser: '@babel/eslint-parser',\n  parserOptions: {\n    requireConfigFile: false,\n    babelOptions: {\n      babelrc: false,\n      configFile: false,\n      presets: [\"@babel/preset-env\"],\n    },\n  },\n};\n```\n\n사실 parser의 default sourceType `module`여서 에러가 사라지는 것이다...\n","slug":"/blog/2022/eslint-parse-error-import","readingMinutes":2,"wordCount":140},"postFooterProps":{"prevPost":{"title":"2022 카카오 신입 개발자의 1년 회고록","description":"이렇게 물경력이 쌓이는 것인가,,, 하지만 돌아보면 정말 많은 것을 수확했다.","icon":"","image":"","tags":["회고","커리어","주니어 개발자"],"draft":false,"date":"2022-12-31","slug":"/blog/retrospect/2022-in-kakao","readingMinutes":19,"wordCount":1412,"serizeSlug":"retrospect"},"nextPost":{"title":"Github Action에서 Error: Cannot find module 에러 해결","description":"at Function.Module._resolveFilename (node:internal/modules/cjs/loader:985:15)","icon":"","image":"","tags":["troubleshooting","git","github-action"],"draft":false,"date":"2022-12-22","slug":"/blog/2022/cannot-find-module-in-github-action","readingMinutes":2,"wordCount":108}},"serize":null,"slug":"/blog/2022/eslint-parse-error-import","compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\",\n    br: \"br\",\n    hr: \"hr\",\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    ol: \"ol\",\n    li: \"li\",\n    div: \"div\",\n    pre: \"pre\",\n    button: \"button\",\n    svg: \"svg\",\n    path: \"path\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"vscode에서 개발 중 \", _jsx(_components.code, {\n        children: \"Parsing error: The keyword 'import' is reserved\"\n      }), \"를 마주칠 때가 있다.\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.code, {\n        children: \"typescript\"\n      }), \" 기반으로 개발을 하는데 \", _jsx(_components.code, {\n        children: \"javascript\"\n      }), \"으로 된 설정 파일에서 에러를 뱉는다.\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h2, {\n      id: \"원인\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#원인\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"원인\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"말그대로 eslint의 parser가 \", _jsx(_components.code, {\n        children: \"import\"\n      }), \" 구문을 해석할 수 없기 때문에 에러가 발생한다.\", _jsx(_components.br, {}), \"\\n\", \"ESLint는 기본적으로 \", _jsx(_components.a, {\n        href: \"https://github.com/eslint/espree\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Espree\"\n      }), \"를 사용하고 이는 \", _jsx(_components.code, {\n        children: \"commonjs\"\n      }), \" 기반으로 구문을 해석하기에 에러가 발생된다.\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h2, {\n      id: \"해결법\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#해결법\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"해결법\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"commonjs\"\n        }), \"가 아닌 \", _jsx(_components.code, {\n          children: \"module\"\n        }), \" 기반으로 구문을 해석한다.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsxs(_components.div, {\n        className: \"rehype-code-wrap--title\",\n        children: [_jsx(_components.div, {\n          className: \"rehype-code-wrap--title-text\",\n          children: \".eslintrc.cjs\"\n        }), _jsx(_components.div, {\n          className: \"rehype-code-wrap--title-blank\"\n        })]\n      }), _jsx(_components.pre, {\n        className: \"language-js\",\n        children: _jsxs(_components.code, {\n          className: \"language-js code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"module\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token property-access\",\n              children: \"exports\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"//...\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token literal-property property\",\n              children: \"overrides\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"      \", _jsx(_components.span, {\n              className: \"token literal-property property\",\n              children: \"files\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'**/*.ts?(x)'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"      \", _jsx(_components.span, {\n              className: \"token literal-property property\",\n              children: \"parser\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'@typescript-eslint/parser'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"      \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"//...\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"        \", _jsx(_components.span, {\n              className: \"token literal-property property\",\n              children: \"files\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'**/*.js?(x)'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"        \", _jsx(_components.span, {\n              className: \"token literal-property property\",\n              children: \"parserOptions\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"            \", _jsx(_components.span, {\n              className: \"token literal-property property\",\n              children: \"sourceType\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'module'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"            \", _jsx(_components.span, {\n              className: \"token literal-property property\",\n              children: \"ecmaVersion\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"2015\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"        \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          })]\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"2\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"다른 parser를 통해서 구문을 해석한다.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"가장 대표적인 \", _jsx(_components.a, {\n        href: \"https://www.npmjs.com/package/@babel/eslint-parser\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: _jsx(_components.code, {\n          children: \"@babel/parser\"\n        })\n      }), \"를 사용하면 된다.\", _jsx(_components.br, {}), \"\\n\", \"참고로 \", _jsx(_components.a, {\n        href: \"https://www.npmjs.com/package/babel-eslint\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: _jsx(_components.code, {\n          children: \"babel-eslint\"\n        })\n      }), \"는 deprecated 되었다.\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsx(_components.pre, {\n        className: \"language-shell\",\n        children: _jsx(_components.code, {\n          className: \"language-shell code-highlight\",\n          children: _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token function\",\n              children: \"yarn\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"add\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token parameter variable\",\n              children: \"-D\"\n            }), \" @babel/parser @babel/preset-env\\n\"]\n          })\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsxs(_components.div, {\n        className: \"rehype-code-wrap--title\",\n        children: [_jsx(_components.div, {\n          className: \"rehype-code-wrap--title-text\",\n          children: \".eslintrc.cjs\"\n        }), _jsx(_components.div, {\n          className: \"rehype-code-wrap--title-blank\"\n        })]\n      }), _jsx(_components.pre, {\n        className: \"language-js\",\n        children: _jsxs(_components.code, {\n          className: \"language-js code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"module\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token property-access\",\n              children: \"exports\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token literal-property property\",\n              children: \"parser\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'@babel/eslint-parser'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token literal-property property\",\n              children: \"parserOptions\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token literal-property property\",\n              children: \"requireConfigFile\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token boolean\",\n              children: \"false\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token literal-property property\",\n              children: \"babelOptions\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"      \", _jsx(_components.span, {\n              className: \"token literal-property property\",\n              children: \"babelrc\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token boolean\",\n              children: \"false\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"      \", _jsx(_components.span, {\n              className: \"token literal-property property\",\n              children: \"configFile\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token boolean\",\n              children: \"false\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"      \", _jsx(_components.span, {\n              className: \"token literal-property property\",\n              children: \"presets\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"@babel/preset-env\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          })]\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"사실 parser의 default sourceType \", _jsx(_components.code, {\n        children: \"module\"\n      }), \"여서 에러가 사라지는 것이다...\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tableOfContents":[{"slug":"원인","text":"원인","subSections":[]},{"slug":"해결법","text":"해결법","subSections":[]}]},"__N_SSG":true}