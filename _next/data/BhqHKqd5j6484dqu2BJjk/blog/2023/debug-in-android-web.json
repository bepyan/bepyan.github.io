{"pageProps":{"post":{"title":"안드로이드에서 브라우저 디버깅하는 방법 (feat. 크롬, 삼성 브라우저)","description":"안드로이드에서 브라우저 디버깅을 해야할 때가 있다.\nMAC 환경에서 어떻게 디버깅할 수 있는지 한번 정리해보자.\n\nhttps://developer.android.com/studio/commandline/adb?hl=kowireless...","icon":"","image":"","tags":["android","debug"],"draft":false,"date":"2023-01-26","content":"\n안드로이드에서 브라우저 디버깅을 해야할 때가 있다.\nMAC 환경에서 어떻게 디버깅할 수 있는지 한번 정리해보자.\n\nhttps://developer.android.com/studio/command-line/adb?hl=ko#wireless-android11-command-line\n\n---\n\n## 환경 세팅\n\n```shell\nbrew install --cask android-platform-tools\n```\n\n---\n\n### 안드로이드 개발자모드 설정\n\n갤럭시 기준으론 아래와 같다.\n`설정` > `휴대전화 정보` > `소프트웨어 정보` > `빌드 번호` 5번 클릭\n\nhttps://developer.android.com/studio/debug/dev-options?hl=ko#enable\n\n---\n\n### USB로 장치 연결\n\n`설정` > `USB 디버깅` 체크 > 장치와 USB 연결\n\n아래 명령어로 제대로 연결이 되었는지 확인할 수 있다.\n\n```shell\nadb devices\n```\n\n---\n\n### 무선으로 장치 연결\n\n`설정` > `무성 디버깅` > `페어링 코드로 기기 페어링`\n\n```\nadb pair ipaddr:port\n```\n\n혹은 `IP 주소 및 포트`를 활용하여 직접 연결할 수 있다.\n\n```shell\nadb connect ipaddr:port\n```\n\n![230126-131551](/posts/debug-in-android-web/230126-131551.png)\n\n---\n\n## 디버깅하는 방법\n\nPC에서 [chrome://inspect/#devices](chrome://inspect/#devices)로 들어가서 `inspect`을 실행하면 된다.\n`Remote Targe`에 장치가 안 뜬다면 위 방법들 중 다른 방법을 시도해보길 바란다.\n\n![230126-132252](/posts/debug-in-android-web/230126-132252.png)\n\n삼성 브라우저, 크롬 브라우저 모두 디버깅이 가능하다.\n시뮬레이터에서의 동작이 실제 디바이스 화면에서도 반영이 된다!\n","slug":"/blog/2023/debug-in-android-web","readingMinutes":2,"wordCount":147},"postFooterProps":{"prevPost":{"title":"5개월간 스타트업에서 굴렀다. 그리고 얻었다.","description":"2021.07.05 ~ 2021.11.26","icon":"","image":"","tags":["회고","커리어"],"draft":false,"date":"2021-12-14","content":"\n> 2021.07.05 ~ 2021.11.26\n\n<br />\n\n바야흐로 올해 여름,  \n지원한 인턴 모두 떨어지고 앞 길의 갈피를 잡지 못하고 있는 상황,  \n인스타그램 광고로 스타트업의 Recruit을 접하게 되었다.\n\n탄소 배출을 줄이고자하는, [샐러드 구독 플랫폼](http://saladweeks.co.kr/)을 운영하는 스타트업이다.\nReact, React-Native 개발자를 모집하고 있었고 나의 기술스택과 딱 맞아 들었다.\n서류 - 1차 면접 - 2차 면접, **입사 프로세스가 1주일안에 마무리 되었던 엄청난(?) 속도**를 보여줬다. 1차는 기술면접으로 비대면, 2차는 인성면접으로 대면으로 진행했다. 서비스를 어디까지 구축할 수 있는지, 현 팀원들과 원활한 협업 가능할지가 중요 포인트였던 것 같다.\n\n직원이 6명이고 법인이 창립된지 얼마 안된 초창기 스타트업이였기에 이런 **사수가 없는 환경에서 내가 잘 성장할 수 있을까** 고민이 되었다. 하지만 이런 초창기 스타트업은 지금 아니면 절대로 경험할 수 없을 것 같았다. 좋은 가치를 추구하는 서비스라고 생각했고 회사의 성장지표도 괜찮아 보여서 도전을 이어나가기로 했다. 다시 학교 들어가 의미없는(?) 이론 수업 보다는 현업에서 부딪치고 싶었고 돈을 벌고 싶었다.\n\n<p align=\"center\">\n  <img src=\"https://c.tenor.com/VCcGldHmbwQAAAAC/moved-clapping.gif\" />\n  <span>돈 받고 코딩이라니... ( 감격 )</span>\n</p>\n\n<br />\n\n입사후,\n**사실 충격의 연속이었다.** 제대로 개발되어 있는 것이 하나도 없었다. 나름 괜찮아 보였던 기존 사이트가 WIX라는 쇼핑몰 사이트 솔루션을 통해 만들어 졌고 사장님용 안드로이드 앱도 학부생 수준 미만의 퀄리티로 사용되고 있었다. 듣기로는 이전에 비전공자 팀원이 만든 것들이라 했다. 열악한 환경속에서도 서비스를 잘 운영해낸 팀원분들이 진심 대단했다..\n\n백엔드가 없다..? WIX에서 제공해주는 DB를 사용하고 있었고 이를 Firebase에 주마다 동기화하여 앱에서 사용하고 있었다. 그래서 한동안(1달) 개발자가 맞나 싶을 정도로 데이터 동기화하는 단순 CS업무도 병행을 했었다. 빨리 이 시스템을 바꿔야지 이 악물며 했던 것 같다.\n\n내가 들어간 시점에서 새로운 통합 시스템을 만들고 있었다. 개발자는 웹 1명, 백엔드 1명이 있었고 나는 React Native으로 사장님앱을 만들게 되었고 사내 관리자페이지까지 구축하게 되었다. 실무 경험이 없던 내가 들어오자마자 시스템 전체를 구축해야 했던 것이다. 시행착오가 있었지만 덕분에 내가 크게 성장할 수 있었던 것 같다.\n\n그렇게 정신없이 5달을 달려왔고 그만두고서야 제대로 회고를 하게 되었다.\n\n---\n\n## 💪🏻 내가 얻어 간 것\n\n> 기획, 설계, 배포 모든 단계에 직접적으로 참여한 경험.\n> 이슈, 업무 프로세스를 관리하는 방법.\n> 기술력, 검색능력, ~~그리고 재력.~~\n\n**Notion & Slack**\n\n- 공유 사무실, 재택, 코로나 환경으로 인해 Slack을 활용해서 많이 커뮤니케이션을 해야했다. Notion의 데이터베이스, 템플릿, Slack의 리마인드, 채널 등을 제대로 활용하게 되면서 업무 메신저 툴의 대한 이해도가 높아졌다.\n\n- 입사한지 1달 반만에 앱 기획부터 배포까지 강행군하며 스스로 **작업 프로세스 관리하는 법을 알게 되었다.** 노션의 칸반보드을 활용하여 내가 무엇을 우선적으로 작업 해야하는지 리스트업했고 어떤 작업이 남아 있는지 쉽게 파악할 수 있었다. 이번주 내가 작업할 수 있는 범위를 더 구체적으로 예측을 할 수도 있었다.\n\n<br />\n\n**사장님 앱**\n\n- **play store와 app store에 직접 앱을 배포했다**. 앱 특성상 앱 스토어를 통해서 앱을 전달하고 업데이트를 해야한다. 따라서 play store와 app store + xcode 에 대한 진입장벽이 꽤나 부담스럽다. 특히 지옥의 apple 심사.. (4번 reject을 당했다.. 3번의 권한 사용 요청 문구 수정, 1번은 해외에서 테스트할 수 있는 핸드폰 인증로직 관련) 그 모든 절차를 경험한 것은 정말 값진 것 같다.\n  m1으로 XCode 앱 빌드하는데 계속 에러가 발생하여 고생했던 것이 기억에 남는다.\n  play console의 에러 모니터링 기능을 통해서 배포한 앱에서 비정상 종료 이슈에 관해서 추적할 수 있었다. 덕분에 카메라 모듈을 교체하여 카메라 동작 이슈를 해결하기도 했다.\n\n- 학교 프로젝트하면서 아쉬웠던 부분을 풀어 낼 수 있었는데 그 중 하나가 **Atomic Degisn System**이다. 초기부터 아토믹한 컴포넌트를 추구했다. `emotion`을 활용해서 다른 UI 라이브러리 도움 없이 앱에 맞는 체계적인 UI Kit을 구축할 수 있었다.\n- 추가적으로 `React Navigation`을 활용한 Custom Modal 구현, `Channel.IO` 연동, 푸시알림 환경 구축, QR 코드 스캔, 앱 자동업데이트, `Typescript Generic` 등을 많은 경험할 수 있었다.\n\n<br />\n\n**관리자 페이지**\n\n- 어떤 UI Kit을 사용할지 고민하다가 IBM의 [Carborn Desgin System](https://www.carbondesignsystem.com/)을 선택했다. 날카롭고 세련된 UI가 관리자와 잘 맞을 것 같았다.\n- Storybook를 보면서 개발을 진행했는데 생각보다 레퍼런스가 부족하고 공식문서는 영문으로 되어 있어 학습에 끙끙댔다. 나중에 [Guideline](https://www.carbondesignsystem.com/guidelines/color/overview/)과 [Pattern](https://www.carbondesignsystem.com/patterns/empty-states-pattern/)에 대해서 알게 되어 참고하다 보니 **UI Layout에 대한 통찰력이 조금은 생긴 것 같다.** 처음에는 무지성으로 그냥 최대한 테이블내에서, 어떻게든 row를 expanded해서 동작을 수행하려 했다. 하지만 Dashboard 기반의 UI 가이드라인과 예시를 보고 내가 잘못하고 있음을 크게 깨닫고 객체 기반으로 대시보드 UI로 리팩토링하게 되었다.\n  Data Table에 대한 레퍼런스가 너무 부족하여 해당 컴포넌트를 활용하는데 꽤나 오랜 시간이 소요되었다. `props`로 넘겨준 데이터가 컴포넌트 내부적으로 memorized되고 변형된 형태로 사용되었다. 이것을 이해하고 나서야 제대로 테이블 컴포넌트를 활용할 수 있게 되었다. 나중에 `react-table` 라이브러리를 접하는데 큰 도움이 되었다.\n\n- 추가적으로 `Github Action`를 통한 AWS S3 CI/CD 자동화, `jwt`를 이용한 인증 구현, `xlsx`를 통한 데이터 엑셀 변환, `html-to-image`를 통해 html 이미지 변환, `Custom Hook` 제작(axios, debounce, 필터링, 테이블 관리 ...), `recoil`을 통한 전역 상태관리 등을 경험할 수 있었다.\n\n<p align=\"center\">\n  <img\n    src=\"https://c.tenor.com/OhQaaoHRM0kAAAAC/%EB%AC%BC%EC%9D%8C%ED%91%9C-%ED%8F%AC%EC%A6%88.gif\"\n    width=\"300\"\n  />\n  <span> 이젠 나도 어엿한 현업 개발자..? 라는 근자감이 생기게 되었다. </span>\n</p>\n\n---\n\n## 🍒 좋았던 점\n\n목걸이?!  \n출입증을 목에 걸고 밥먹으로 갈 때 너무나 뿌듯했다. 나도 직장인..? ㅎ헿\n\n<p align=\"center\">\n  <img src=\"https://a4-images.myspacecdn.com/images04/12/42b055063c4944cc9d703ec36d287870/full.gif\" />\n</p>\n\n<br />\n\n**수평적이고 자유롭게 소통하는 팀문화.**\n\n- 서로 닉네임을 불렀고 정말 자유롭게 의견을 주고 받았다.\n- **애자일하게 업무 프로세스를 개선할 수 있었다.**\n  ex. 개발팀에서 매일 스크럼, 주1회 스프린트를 진행했는데 매번 미팅마다 각자 이슈를 정리해야했다. 개선할 수 없을까하는 피드백이 나왔고 우리의 업무를 하나의 노션 데이터베이스로 합치기로 했다. 이후 따로 자료를 정리할 필요없이 노션의 필터링만 걸면 회의를 진행할 수 있었다. 추가적으로 템플릿을 활용하여 스프린트 회의록도 작성하기 굉장히 간편해졌다!\n\n열정적인 팀원들.\n\n- 더 나은 사회를 위한 따뜻한 마음을 가진 팀원들.\n- **서로를 신뢰할 수 있었다.**\n\n자유로운 출퇴근.\n\n- 코어 근무제 (11:00 ~ 16:00는 일하고 자율적으로 근무시간표를 조정) 였기 때문에 출근에 대한 압박이 없었다.\n- 월화수는 오피스 출근하고 나머지는 선택적 재택할 수 있었다.\n\n팀 전체가 개발자의 목소리를 정말 경청해주었다. ~~그럼에도 살인적인 배포일정이...~~\n\n---\n\n## 🥥 아쉬웠던 점\n\n열악한 개발환경인 만큼 아쉽고 부족했던 점이 많을 수 밖에 없었던 것 같다.\n\n기획의 부실\n\n- 기획자가 대표 1명이었다. 물론 서비스 요구사항에 대해 가장 잘 알지만 바빠서 기획에 전념을 할 수 없었다. 게다가 앱과 웹 둘다 기획을 해야하고 디자이너도 따로 없었다. 디테일한 기능요구사항, UI 마크업이 부실할 수밖에 없었다. 사장님들이 샐픽커 검색, 지난 픽업에 대한 처리 등 불편함을 호소하여 UI와 기능을 갈아 엎기도 했다.\n\n**백엔드의 부실공사**\n\n- 지나치게 빡센 배포일정이 예정 되었다(투자를 받기 위해서). 1달 반안에 기획부터 배포까지 해야하는데 시간이 절대적으로 부족했고 다들 경험도 부족했다.\n- **백엔드 API가 RESTful하지 못하게 되었다.** 리소스 중심으로 route가 구성되지 못했고 네이밍 컨벤션도 잘 지켜지지 않았다. 잘못된 문서 명세로 인해 불필요한 커뮤니케이션도 발생했다. 나만 Typescript를 썼기에 응답 컨벤션에 고통을 받았다. 같은 모델이지만 2-4개의 타입을 응답에 맞춰 작성을 해야했다.\n- 관리자 페이지가 없는 상태에서 서비스를 운영해야하다 보니 DB를 직접 접근을 해야하는 경우가 비일비재했다. 관리자페이지를 고려하여 API 설계가 되지 않아서 admin용 route가 부실했고 알림톡, 인프라 등 많은 일을 감당해야하는 백엔드이기에 앱, 웹 기능 구현이 계속 지연되었다.\n- 설상가상 ❄️ 중간에 백엔드분이 예정대로 그만두시고 새로운 백엔드 개발자가 오시면서 개발일정을 전면 개편하게 되었다. 기존 서버를 리팩토링하게 되었는데 부실했던 API를 RESTful하게, JWT를 제대로 활용하고, HTTPS도 적용한... 1달의 대공사를 치르게 되었다.\n\n나홀로 생존기\n\n- **좀 멀리보지 못 했다.** 개발방향을 가이드해주는 경험이 많은 개발자가 주위에 없어서 구글 검색에 절대적으로 의존했다. 문제가 발생하고나서야 잘못을 깨닫고 리팩토링을 하게 된 경우가 많았다. 그만두는 순간까지도 내가 잘못 설계한 코드가 많이 보였다.\n\niOS 앱이 너무 늦게 배포되었다.\n\n- iOS 개발자 계정이 있어야 제대로 빌드 테스트해서 실제 배포를 할 수 있다. 하지만 기업용 계발자 계정이 지나치게 늦게 나오는 바람에 앱 출시 일정이 거의 1.5 달 늦춰지게 되었다. andriod는 8월달에 배포 된거 보면 사실 3개월이나 늦춰진 것이다...\n- iOS가 늦게 나오는 바람에 iPhone을 쓰시는 사장님들이 android를 구비해야해서 불편하실 수 밖에 없고 회사측에서는 이를 케어하기 위해 픽업 명단 캡처 등 수고스러움을 감수해야 했다.\n\n---\n\n## 💉 백신\n\n백신을 맞으면 이 열악한 정글에서 더 강하게(?) 성장해 갈 수 있지 않을까하는 포인트를 정리해보았다.\n~~넌 강해졌다 돌격해!~~\n\n<p align=\"center\">\n  <img\n    src=\"https://images.velog.io/images/bepyan/post/87aa1520-f028-4ac8-af29-f16734255080/image.png\"\n    width=\"500\"\n  />\n</p>\n\n#### 실제 needs가 무엇인지를 집중하자.\n\n- 결국 개발의 핵심은 서비스 기능을 제공해 주는 것이다.\n- 시/공간복잡도, 깨끗함, 수준 높은 코드를 사람들이 많이 알아 주진 않는다. 사람들이 알아주는건 기능이 잘 동작하고 편리한 것이고 직관적인 것이다.\n- 시스템을 설계 할 때도 데이터가 중점이 아닌 기능을 중점으로 진행해야 한다. 어떤 변수를 사용할지가 아닌 메시지(메소드)를 어떻게 주고받으면서 기능을 구현할지를 고민하자. ~~이것이 객체지향이라고 하더라~~\n\n<br />\n\n#### 완벽함을 좀 내려놓아도 괜찮다.\n\n- 처음부터 완벽한 코드를 작성할 수 없다. 일단 기능을 구현하고 리팩토링하자!\n- 코드는 작성한 순간 레거시가 된다.\n- 완벽함을 위해 머릿속으로 많이 고민할 수 있는데 글로 이슈를 트래킹을 하자. 점심시간 활용해서 동료들과 이에 대해 잡담해보는 것도 좋다. 나중에 면접에서 큰 도움이 될 것이다.\n- 좀 번외긴 하기만,, 출퇴근간 [클린코드 핸드북](https://738.github.io/clean-code-typescript/)을 보면서 내 코드의 청결상태를 점검해보자. ~~은근히 더럽더라..~~\n\n<br />\n\n#### 코드에 감정이입하지 말자.\n\n- 우린 이제 현업이고 프로이다. 적어도 10년은 코딩으로 밥먹고 살아야한다.\n- 비즈니스 요구사항에 따라 기존 코드를 갈아 엎을 수 있다. ~~당연한 거다 ㅎㅎ~~\n- 버그가 발생하는 것은 내가 못나서 그런게 아니다. 불가항력이다. 버그를 수습하는게 개발자의 일이다.\n\n<br />\n\n#### ‘나중에 제대로 정리해야지’ 미루지 말자.\n\n- 되도록 지금 깔끔히 마무리 하자. 나중에 다시 집중해서 리팩토링하기 힘들다. ~~아니, 할 시간이 없다.~~\n- 미루는 것은 새로운 일을 만들어 낼 뿐이다.\n\n<br />\n\n#### 취뽀는 목적지가 아니다.\n\n- '난 뭘 하고 싶지?' 계속 스스로 물어봐야 한다.\n- 직장인의 시계는 5배로 빨리 간다. ~~주 5일을 일하기 때문..~~\n- 한 번뿐인 청춘, 하고 싶은 것을 이루기 위해 불태우자. 직장은 그저 수단일 뿐이다.\n\n---\n\n## 맺으면서\n\n내가 한 일을 타임라인으로 다시 정리해본다면\n\n| 시간  | 내용                                      |\n| ----- | ----------------------------------------- |\n| 7-8월 | 사장님 앱 기획, 설계, 배포                |\n| 9월   | 관리자 페이지 기획, 설계, 배포            |\n| 10월  | 사장님 앱, 관리자 페이지 유지보수         |\n| 11월  | 사장님 앱, 관리자페이지 API V1 업그레이드 |\n\n입사전, 내가 생각했던 것보다 스타트업을 통해서 정말 많이 성장할 수 있었다.\n좋은 팀원들을 만날 수 있었고, 회사와 팀원들이 모두 계속 성장해갔으면 좋겠다.\n\n<p align=\"center\">\n  <img src=\"https://c.tenor.com/bQCHJwgCNuMAAAAC/kitten-cat.gif\" width=\"300\" />\n</p>\n\n바빴지만 즐거웠고 힘들었지만 재밌었다.\n도전을 계속 이어가자 😘\n","slug":"/blog/retrospect/2021-in-startup","readingMinutes":21,"wordCount":1516,"serizeSlug":"retrospect"},"nextPost":{"title":"2022 카카오 신입 개발자의 1년 회고록","description":"이렇게 물경력이 쌓이는 것인가,,, 하지만 돌아보면 정말 많은 것을 수확했다.","icon":"","image":"","tags":["회고","커리어"],"draft":false,"date":"2022-12-31","content":"\n> ⚠️ 극히 개인적으로 느낀 것들 입니다. 가볍게 지나가 주세요. (\\_ \\_)\n\n[**감격스로운 카카오 공채 합격**](/blog/retrospect/2021-pass-kakao)이 엊그제 같은데 벌써 1년이 지나 있다.\n\"와,, 이렇게 물경력이 쌓이는 것인가,,,\" 생각이 들기도 했지만 돌아보면 정말 많은 것들이 있었다.\n조금은 진부하지만 그간의 경험과 생각을 조금이나마 기록해보고자 한다.\n\n![고민](https://media.tenor.com/HHbDUjAOYE0AAAAC/worried-kermit.gif)\n\n---\n\n## 나의 타임라인\n\n무엇을 했는지 정리하려면 역시 타임라인만한 것이 없다.\n모든 것을 담아내기 어렵지만 그래도 큼지막하게 정리해보았다.\n\n| 연도             | 이벤트                                     |\n| ---------------- | ------------------------------------------ |\n| 21.11.29 ~ 22.02 | 카카오 입사 ✨ 온보딩 진행                 |\n| 22.03 ~          | 브런치 서비스 합류                         |\n| 22.04 ~ 05       | grunt -> webpack 전환, 테스트 코드 도입    |\n| 22.06 ~ 07       | 모니터링 시스템 고도화, 개발 컨벤션 재구축 |\n| 22.08            | 제 10회 브런치북 출판 프로젝트, MVI        |\n| 22.09            | if kakao 촬영 \"브런치 심폐소생술\"          |\n| 22.10            | 🏢🔥                                       |\n| 22.11 ~ 12       | 경로 리소스 대청소                         |\n\n---\n\n### 카카오 온보딩\n\n공통 온보딩, 직무 온보딩, 기술 온보딩 과정으로 3달 가까이 교육이 진행되었고\n[**CodeSquad**](https://codesquad.kr/)의 크롱이 1달 동안 기술 온보딩(FE 교육)을 맡아주셨다.\n\n사실 다른 것은 거의 기억이 안나고 기술 온보딩 때 열심히 삽질한 경험이 남게 되었던 것 같았다.\n좋았던 것은 그저 숙제에 대해 점검하는 것이 아닌 **과제의 큰 틀만 주고 스스로 탐구하고픈 영역을 설정하고 이를 점검해주는 형태로 교육이 진행**되었다는 것이다.\n그러면서 평소 접하기 힘들었을 BEM, Glassmorphism, VAC 패턴, stitches 등을 사용해볼 수 있게 되었다.\n\n- **w1**\n  - https://github.com/bepyan/fe-w1-kakaopage\n  - HTML 마크업\n  - vanillaJS\n- **w2,3**\n  - https://github.com/bepyan/fe-w23-shoppinghow\n  - vanillaJS (+ throttle)\n  - babel, webpack\n  - BEM styles rules\n- **w4**\n  - https://github.com/bepyan/fe-w4-vending-machine\n  - React\n  - Glassmorphism\n- **w4,5**\n  - https://github.com/bepyan/fe-w4-issue-tracker\n  - express (JWT, OAuth)\n  - React (+ VAC 패턴)\n  - stitches\n\n교육이 진행되면서 기술공유해주는 세션이 있는데 css-in-js 라이브러리를 조사한 것을 정리해서 발표를 했고 [velog 글](https://velog.io/@bepyan/CSS-in-JS-라이브러리에-대한-고찰)로도 정리를 했었다. 생각보다 정리한 글이 여러 사람에게 도움이 된 것 같아 많이 뿌듯했다.\n돈을 받고 편하게 공부를 한다니,, 개인적으로 이 때가 가장 걱정없이 편하게 시간을 보냈던 것 같다. ~~물론 그 당시엔 학습에 찌들렸던...~~\n\n---\n\n### 브런치 레거시 개선\n\n올해는 브런치 레거시 환경과 내내 싸웠다고 봐도 무방한 것 같다. 이게 [**if kakao 발표**](https://if.kakao.com/2022/session/76)까지 가게될지도 몰랐다..\n대충 한마디로 요약하자면 **webpack을 도입하여 es6 기반의 코드를 쉽게 작성할 수 있게 되었다**.\n\n발표에 대해서도 좀 할말이 많다만..\n지금 다시 생각을 정리해보면 발표 때와 생각이 많이 바꿨다. 조금 옛날스러운 javascript의 구현 방식은 사실 큰 문제가 아니였다. 브런치가 관리하기 어렵게된 것은 결국 **Java와 Javascript 진영간의 괴리이다.**\n\n브런치는 기본적으로 SSR로 서비스를 제공한다.\n서버 사이드의 데이터를 템플릿 엔진([**velocity**](https://velocity.apache.org/))을 통해 마크업을 다루거나 js 단으로 데이터를 넘긴다.\njs 단에서는 또 뷰 엔진([**handlebars**](https://handlebarsjs.com/))를 활용하여 마크업을 다룬다.\n\n이 과정을 제대로 이해하기 못한 상황에서 이슈를 대응하려하니 머리가 터지게 되는 것이다.\n문제를 해결하려면 탐색해야하는 파일들이 무척이나 많고 4개의 문법을 넘나들고 개발 편법까지 이해해가야 했다.\n사실 이들(velocity, handlebars)는 요즘것들에 비해 **문법이 유연하지 못하고 intellisense가 부실**해 개발자가 실수하기 무척 쉽다. ~~실제로 관련해서 크게 손대다가 4번의 prod hotfix를 진행한 경험이 있다..~~\njavascript 내에서의 로직은 이에 비해 사소했던 것 같다. 어짜피 비즈니스 로직이 복잡해지면 ES6든, ES3이든 다루기 어려운 코드가 된다. 해법은 프레임워크, 라이브러리의 도움을 받는것...\n\n이 괴리를 줄이기 위해서 초기에는 패턴을 도입해서 js 중심으로 리팩토링을 하려했으나, 이젠 **velocity에서의 Java를 잘 사용하기, svelte 도입**하는 방향으로 나아가려하고 있다.\n\n그리고 테스트 코드에 대해서도 솔직한 한마디를 메모하자면, **TDD를 하지 않으면 테스트 코드는 실질적인 도움이 되진 않는다.** ~~다만 명분이 좋아 다른 사람들에게 이를 쉽게 내세울 수 있다.~~\n\n---\n\n### 사내 스터디, 행사\n\n카카오답게 자유롭게 스터디, 행사에 참여할 수 있었다.\n\n- 리팩토링 2판 독서 스터디\n- 헤드 퍼스트 디자인 패턴 독서 스터디\n- phaser3로 javascript 게임 만들기 스터디\n- 북마크(기술 블로그 글) 공유 스터디\n- if kakao 세션 발표\n- K24 해커톤\n- 함께 자라기 (DND 마스터 시리즈, 블로그 제작기)\n- 6 nimmt! 보드게임 알고리즘 행사\n- 단체티 제작 TF\n- 팀 정기 발표\n\n하나 하나 느낀 점들이 있지만 글로 정리하기엔 끝도 없을 것 같다.. 이래서 분기별로 글을 정리해야 하나..\n이 역시 한마디 메모하자면 **남한테서 얻어내려하기 보단 스스로 탐구해 가려 할 때 더 많은 수확이 있었던 것 같다.**\n\n---\n\n## 나의 깨닳음\n\n생각을 정리하면서 맺혀지는 깨닳음이 있었다.\n\n![암튼 수련임](https://media.tenor.com/B37J0OvzgVoAAAAC/kermit-the-frog-kermit.gif)\n\n---\n\n### 성장이란 무엇인가?\n\n신입 개발자로서 '성장'은 정말 중요한 키워드인 것 같다.\n회사를 선택할 때 고려되는 가장 중요한 것 중에 하나이다.\n그렇다면 과연 성장이란 무엇이고 난 카카오에서 1년간 얼마나 성장했을까?\n\n성장에 대해 정말 다양한 정의를 내릴 수 있지만 개인적으로 soso님의 정의가 가장 마음에 와닿았다.\n\n> **\"나만의 관점이 많아지는 것\"** > https://so-so.dev/essay/no-silver-bullet/\n\n크게 두 가지 의미를 내포하는 것 같다.\n\n<br />\n\n첫번째는 **지식과 경험은 우리로 하여금 `관점`을 갖게 한다**는 점이다.\n\n우리는 늘상 새로운 지식을 습득하고 경험이 축적된다. 그리고 지식과 경험은 우리로 하여금 관점을 갖게 한다.\n지식이 없으면 그 어떠한 판단을 내릴 수 없고 경험이 없으면 결과에 대해 예측하기 어려운 이유이기도 하다.\n아래와 같은 간단한 예시를 들 수 있을 것 같다.\n\n> webpack는 번들링과 컴파일에 있어 상당히 유연한 설정을 갖추고 있다.\n> : webpack으로 파편화된 번들, 빌드 과정을 통합시켜 목표하는 코드 베이스를 쉽게 구축할 수 있다.\n\n> ==가 ===로만 바꿔도 사이드 이펙트가 발생될 수 있다.\n> : 무턱 레거시 코드에 eslint auto fix를 돌리면 사고가 일어날 수 있다.\n\n이런 작은 지식, 작은 경험이 하나 하나 축척되어 큰 관점을 갖게 되기도 한다.\n이를 테면 '좋은 코드란 무엇인가?', '리팩토링을 어떻게 해가는게 좋을까?'와 같은 무거운 질문에 대한 관점이다.\n\n**관점을 갖춘 개발자는 매력적이다.** 정답이 없는 상황을 명확한 기준으로 헤쳐가기 때문이다.\n[공채면접](https://bepyan.github.io/blog/retrospect/2021-pass-kakao#1%EC%B0%A8-%EC%9D%B8%ED%84%B0%EB%B7%B0--feat-%EC%A7%81%EB%AC%B4%EC%97%AD%EB%9F%89-)에서도 이를 느낄 수 있었다. 기업은 단순히 전문 지식을 많이 갖춘 지원자가 아닌 기술적인 연관관계, trade-off를 잘 설명할 수 있는 지원자를 원한다. 우린 종종 '남의 지식을 나의 것으로 만들어야 한다.'의 말을 듣곤 하는데 이와 같은 맥락이지않을까 생각한다.\n\n<br />\n\n두번째론 **성장은 `나`를 기준으로 상대적**이라는 것이다.\n\n물론 나의 관점이 잘못되었을 수도 있고 그 깊이가 엷을 수도 있다.\n하지만 어제의 나보다 더 나은, 더 풍부한 관점을 갖춘 것 자체가 성장이다.\n따라서 내 옆에 있는 누구와 비교할 필요 없이 나만의 관점이 생긴 것 자체로 의미가 있고 칭찬할 일이다.\n\n내가 새롭게 갖게된 관점을 정리하다보면 나의 성장이 눈에 띄게 나타나는 것 같다.\n\n<br />\n\n나의 성장을 소소하게 나눠보자면, 나는 **레거시 시스템을 어떻게 다뤄야하는지**에 대해 막연한 관점이 생긴 것 같다.\n**그 당시 '최선'이었을 코딩 방식을 이해하고 최대한 그대로 이어서 유지보수하는 것**이다. 어떻게든 최신 세련된 코딩 방식을 도입하려는 건 오히려 시스템을 더 더럽게 만드는 것 같다. 만약 도저히 손을 댈 수 없다면 시스템 통째로 가라엎는 것이 더 빠를 수도 있다. 그리고 부족한 코딩 컨벤션 채워가고, 테스트할 수 있는, 모니터링되는 환경을 구축하는 것이다.\n\n---\n\n### 어떤 사람이 꼰대인가?\n\n꼰대에 대한 정의를 내리라고 한다면 2가지 포인트가 생각이 나는 것 같다.\n\n- **나의 관념을 상대방에게 강요하거나 주입하는 사람.**\n- **상대방에게 관심을 갖지 않고 그저 내가 하고 싶은 얘기를 던지는 사람.**\n\n나는 종종 상대방을 꼰대로 평가했었다.\n할아버지와 대화를 나누면 참 답답한 구석이 있었다. **'그게 왜 그런가면...'** 논리가 꼬리를 물고 1시간 내내 반복되는 것이다.\n할아버지 인생의 지혜를 무시하는 것이 아니지만 나는 그 순간 할아버지가 너무 꼰대스럽다고 생각했다.\n\n> '왜 상대방이 관심 없을 얘기를 저렇게 늘어뜨리지?'\n> '왜 자기 경험과 생각을 풀지 못해 안달일까?'\n\n하지만 언젠가 돌아보니 내가 그런 사람이 되어 있는 것 같았다.\n제대로 의견을 충돌시키지 않고 그저 나의 생각, 나의 의견에 굳혀져 있던 것이다.\n구체적인 예시를 꼽긴 힘들지만 이는 계속 자신을 자각해야 문제임은 확실하다.\n\n좋은 조직장, 상사가에 대해 생각을 하게 되었을 때도 이와 일맥상통한 부분이 있다.\n대화를 나눌 때 비록 평소에 친분이 없음에도 '아 정말 나에게 관심이 있는구나!'라고 느낄 때 상대방에 대한 호감도가 수직상승했던 것 같다.\n상대방에게 포커스를 두고, 상대방이 관심을 가질 만한, 도움이 될 만한 포인트를 가지고 대화를 이어가는 것이다.\n\n그저 뻔한 소리이기는 하지만 중요한 것은 결국 **상대방에 대한 관심**인 것 같다.\n\n---\n\n### 좋은 문화는 나의 행동으로 맺어진다.\n\n카카오는 정~~말 [좋은 문화](https://www.kakaocorp.com/page/kakao/kakaoCulture)를 갖고 있다.\n그러나 아쉽다고 생각되는게 이는 **용두사미**(龍頭蛇尾)하다는 것이다.\n\n100:0 원칙이 있다면 뭐하나, 사내 정책을 공유되자마자 언론에 노출이 되고 심지어 언론을 통해서 먼저 알게 되기도 한다.\n'신충헌'이 있으면 뭐하나, 거세게 충돌하고 헌신할 생각이 없이 자기 주장을 그저 밀고 들어 간다.\n...\n\n너무나 멋진 문화이지만 정작 조직 내에서 이를 행하는 사람이 잘 보이지 않는 것 같다.\n**내가 행동하지 않기 때문이다.**\n\n문화라는 것은 한 사람에게서 이뤄지는 것이 아니다. 사람들의 상호작용이 이뤄졌을 때 문화가 탄생된다.\n내가 그 상호작용에 참여하지 않고 있는데 어떻게 그 문화를 경험할 수 있는가?\n\n의견을 나누는 자리에서 기껏 자신의 생각을 충돌해보고, 상대방이 옮을 수 있다는 믿음을 갖고 질문하고 경청해보고..\n관망하는 것이 아닌 행하였을 때 비로소 팀의 문화를 알 수 있다.\n\n회의감을 가지고 불평하기 보단 **나의 행동으로 좋은 문화를 맺어보자!**\n\n---\n\n## 나의 NEXT\n\n![2023 last dance](https://media.tenor.com/QUCs1atnbWQAAAAM/muppets-muppet-show.gif)\n\n**브런치 리팩토링 ongoing**\n솔직히 브런치 서비스에 오래 발을 담고 싶지는 않다. 돈을 버는 서비스가 아니고 활발하게 발전하지도 못한다.\n그래도 1년 정도는 더 주도적으로 부딪혀서 값진 경험을 할 수 있을 것 같다.\nsvelte의 고도화가 기대된다.\n\n**다양한 취미를 누비기**\n코로나가 있기도 했지만 올 한해는 개발에 많은 포커스를 맞춰왔던 것 같다.\n전문성을 키워가는건 좋지만 그것에 올인하는 것은 삶이 장기적으로 건강하진 못할 것 같다.\n예전 취미 많던 시절 돌아가 풍성한 삶은 좀 이어가보면 어떨까? ~~그럼 연애부터...~~\n겨울에 스키 타기, 화방(그림 그리기) 다니기, 비트 메이깅 해보기, 음료 제작 입문하기, 헬스 관련 첼린지 도전하기...\n\n**코드 리뷰어로 활동해보기**\n촌놈이 시내 구경하는 느낌이랄까? 암튼 재밋을 것 같다.\n","slug":"/blog/retrospect/2022-in-kakao","readingMinutes":19,"wordCount":1412,"serizeSlug":"retrospect"}},"serize":null,"slug":"/blog/2023/debug-in-android-web","compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    br: \"br\",\n    a: \"a\",\n    hr: \"hr\",\n    h2: \"h2\",\n    span: \"span\",\n    div: \"div\",\n    pre: \"pre\",\n    code: \"code\",\n    button: \"button\",\n    svg: \"svg\",\n    path: \"path\",\n    h3: \"h3\",\n    img: \"img\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"안드로이드에서 브라우저 디버깅을 해야할 때가 있다.\", _jsx(_components.br, {}), \"\\n\", \"MAC 환경에서 어떻게 디버깅할 수 있는지 한번 정리해보자.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://developer.android.com/studio/command-line/adb?hl=ko#wireless-android11-command-line\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"https://developer.android.com/studio/command-line/adb?hl=ko#wireless-android11-command-line\"\n      })\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h2, {\n      id: \"환경-세팅\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#환경-세팅\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"환경 세팅\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsx(_components.pre, {\n        className: \"language-shell\",\n        children: _jsx(_components.code, {\n          className: \"language-shell code-highlight\",\n          children: _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"brew \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"install\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token parameter variable\",\n              children: \"--cask\"\n            }), \" android-platform-tools\\n\"]\n          })\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h3, {\n      id: \"안드로이드-개발자모드-설정\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#안드로이드-개발자모드-설정\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"안드로이드 개발자모드 설정\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"갤럭시 기준으론 아래와 같다.\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.code, {\n        children: \"설정\"\n      }), \" > \", _jsx(_components.code, {\n        children: \"휴대전화 정보\"\n      }), \" > \", _jsx(_components.code, {\n        children: \"소프트웨어 정보\"\n      }), \" > \", _jsx(_components.code, {\n        children: \"빌드 번호\"\n      }), \" 5번 클릭\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://developer.android.com/studio/debug/dev-options?hl=ko#enable\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"https://developer.android.com/studio/debug/dev-options?hl=ko#enable\"\n      })\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h3, {\n      id: \"usb로-장치-연결\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#usb로-장치-연결\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"USB로 장치 연결\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"설정\"\n      }), \" > \", _jsx(_components.code, {\n        children: \"USB 디버깅\"\n      }), \" 체크 > 장치와 USB 연결\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"아래 명령어로 제대로 연결이 되었는지 확인할 수 있다.\"\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsx(_components.pre, {\n        className: \"language-shell\",\n        children: _jsx(_components.code, {\n          className: \"language-shell code-highlight\",\n          children: _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"adb devices\\n\"\n          })\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h3, {\n      id: \"무선으로-장치-연결\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#무선으로-장치-연결\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"무선으로 장치 연결\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"설정\"\n      }), \" > \", _jsx(_components.code, {\n        children: \"무성 디버깅\"\n      }), \" > \", _jsx(_components.code, {\n        children: \"페어링 코드로 기기 페어링\"\n      })]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"code-highlight\",\n        children: _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"adb pair ipaddr:port\\n\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"혹은 \", _jsx(_components.code, {\n        children: \"IP 주소 및 포트\"\n      }), \"를 활용하여 직접 연결할 수 있다.\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsx(_components.pre, {\n        className: \"language-shell\",\n        children: _jsx(_components.code, {\n          className: \"language-shell code-highlight\",\n          children: _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"adb connect ipaddr:port\\n\"\n          })\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/posts/debug-in-android-web/230126-131551.png\",\n        alt: \"230126-131551\"\n      })\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h2, {\n      id: \"디버깅하는-방법\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#디버깅하는-방법\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"디버깅하는 방법\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"PC에서 \", _jsx(_components.a, {\n        href: \"chrome://inspect/#devices\",\n        children: \"chrome://inspect/#devices\"\n      }), \"로 들어가서 \", _jsx(_components.code, {\n        children: \"inspect\"\n      }), \"을 실행하면 된다.\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.code, {\n        children: \"Remote Targe\"\n      }), \"에 장치가 안 뜬다면 위 방법들 중 다른 방법을 시도해보길 바란다.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/posts/debug-in-android-web/230126-132252.png\",\n        alt: \"230126-132252\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"삼성 브라우저, 크롬 브라우저 모두 디버깅이 가능하다.\", _jsx(_components.br, {}), \"\\n\", \"시뮬레이터에서의 동작이 실제 디바이스 화면에서도 반영이 된다!\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tableOfContents":[{"slug":"환경-세팅","text":"환경 세팅","subSections":[{"slug":"안드로이드-개발자모드-설정","text":"안드로이드 개발자모드 설정"},{"slug":"usb로-장치-연결","text":"USB로 장치 연결"},{"slug":"무선으로-장치-연결","text":"무선으로 장치 연결"}]},{"slug":"디버깅하는-방법","text":"디버깅하는 방법","subSections":[]}]},"__N_SSG":true}