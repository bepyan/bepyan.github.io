{"pageProps":{"post":{"title":"(Lint) 레포 단위로 VSCode 설정 적용하기","description":"repository 단위로 IDE 설정을 강제하고 싶을 때가 있다.\n사람마다 제각각 선호하는 설정이 있고 프로젝트 환경에 따라 설정이 달라져 프로젝트마다 이를 다르게 설정해야 한다.\n\n.vscode 디랙토리에 설정을 명시하여 이를 해...","icon":"","image":"","tags":["vscode","eslint","prettier"],"draft":false,"date":"2023-01-26","content":"\nrepository 단위로 IDE 설정을 강제하고 싶을 때가 있다.\n사람마다 제각각 선호하는 설정이 있고 프로젝트 환경에 따라 설정이 달라져 프로젝트마다 이를 다르게 설정해야 한다.\n\n`.vscode` 디랙토리에 설정을 명시하여 이를 해결할 수 있다!\n\n---\n\n### 옵션 설정\n\n```json:.vscode/settings.json\n{\n  \"editor.rulers\": [120], // IDE에 줄이 보이게 함\n  \"editor.formatOnSave\": true, // 파일 저장시 포멧팅 실행\n  \"editor.defaultFormatter\": \"esbenp.prettier-vscode\", // 포멧팅 도구를 prettier로 사용\n  \"editor.codeActionsOnSave\": { \"source.fixAll.eslint\": true }, // 파일 저장시 eslint auto fix 실행\n  \"eslint.validate\": [\"javascript\", \"javascriptreact\", \"typescript\", \"typescriptreact\", \"svelte\"] // 사용 언어에 따라 설정\n}\n```\n\n속성을 잘 모르겠다면 설정에서 톱니바퀴의 `Copy Setting as JSON`을 클릭하면 된다.\n\n![230126-175049](/posts/vscode-eslint-prettier/230126-175049.png)\n\n---\n\n### 플러그인 설정\n\n```json:.vscode/extensions.json\n{\n  \"recommendations\": [\"svelte.svelte-vscode\", \"dbaeumer.vscode-eslint\", \"esbenp.prettier-vscode\"]\n}\n```\n\n플러그인이 설치가 안되어 있다면 IDE에서 이를 경고해준다.\n\n![230126-173852](/posts/vscode-eslint-prettier/230126-173852.png)\n\n---\n\n### code snippets 설정\n\n```json:.vscode/.code-snippets\n{\n\n  \"Current DateTime\": {\n    \"prefix\": [\"current_date_time\", \"cdt\"],\n    \"description\": \"Output current DateTime YYYY-MM-DD HH:mm:ss\",\n    \"body\": \"$CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND\"\n  },\n}\n```\n\n[**VSCode Variables**](https://code.visualstudio.com/docs/editor/userdefinedsnippets#_variables)을 활용하여 프로젝트에 맞는 다양한 `code snippets`을 작성할 수 있다.\n\n`.code-snippets` 앞에 적용될 파일 타입을 명시할 수 있다. `ts.code-snippets`\n\n---\n\n### 단축키 설정\n\n```json:.vscode/keybindings.json\n[\n    {\n        \"key\": \"shift+cmd+v\",\n        \"command\": \"-markdown.extension.closePreview\",\n        \"when\": \"markdownPreviewFocus\"\n    },\n    {\n        \"key\": \"shift+cmd+v\",\n        \"command\": \"extension.pasteImage\",\n        \"when\": \"editorTextFocus\"\n    }\n]\n```\n\nVSCode 동작부터 Extension 실행까지 [**다양한 동작**](https://code.visualstudio.com/docs/getstarted/keybindings)을 지원하니 필요에 따라 적용하면 좋을 것 같다.\n","slug":"/snippets/lint/vscode-eslint-prettier","readingMinutes":2,"wordCount":199,"snippetSlug":"lint"},"serize":null,"postFooterProps":{"prevPost":{"title":"(ESLint) sort import","description":"eslint sortimports 설정은 autofix를 제공해주지 않는다.\n\n크게 2가지 방법으로 해결할 수 있다.\n\n\n\n simpleimportsort\n\nplugin을 통해서 설정이 간편하다.\nhttps://github.com/l...","icon":"","image":"","tags":["eslint","import"],"draft":false,"date":"2023-01-11","content":"\n[**eslint sort-imports**](https://eslint.org/docs/latest/rules/sort-imports) 설정은 `autofix`를 제공해주지 않는다.\n\n크게 2가지 방법으로 해결할 수 있다.\n\n---\n\n## simple-import-sort\n\nplugin을 통해서 설정이 간편하다.\nhttps://github.com/lydell/eslint-plugin-simple-import-sort\n\n```shell\nyarn add -D eslint-plugin-simple-import-sort\n```\n\n```js:.eslintrc.js\nmodule.exports = {\n    //...\n    \"plugins\": [\"simple-import-sort\"],\n    \"rules\": {\n        \"simple-import-sort/imports\": \"error\",\n        \"simple-import-sort/exports\": \"error\"\n    }\n}\n```\n\n`import` 순서 커스텀화\n\n```js\n{\n    'simple-import-sort/imports': [\n        'error',\n        {\n        groups: [['^\\\\u0000'], ['^@?\\\\w'], ['^~/', '^\\\\.']],\n        },\n    ],\n}\n```\n\n---\n\n## eslint-plugin-import\n\n타 plugin과 충돌될 경우 이를 사용하면 좋다. (예를 들어 [eslint-plugin-svelte](https://github.com/ota-meshi/eslint-plugin-svelte))\nhttps://github.com/import-js/eslint-plugin-import\n\n```shell\nyarn add -D eslint-plugin-import\n```\n\n```js:.eslintrc.js\nmodule.exports = {\n    //...\n    settings: {\n        'import/resolver': {\n            alias: {\n                map: [\n                    ['~', './src'],\n                ],\n                extensions: ['.js', '.jsx', '.ts', '.tsx', '.svelte'],\n            },\n        },\n    },\n    rules: {\n        // https://github.com/import-js/eslint-plugin-import/blob/main/docs/rules/order.md\n        'import/order': [\n            'error',\n            {\n                groups: ['builtin', 'external', 'internal', ['parent', 'sibling', 'index']],\n                alphabetize: {\n                    order: 'asc',\n                    caseInsensitive: true,\n                },\n                'newlines-between': 'always',\n            },\n        ],\n        'import/first': 'error',\n        'import/newline-after-import': 'error',\n        'import/prefer-default-export': 'off',\n        'import/no-useless-path-segments': ['error', { noUselessIndex: true }],\n    }\n}\n```\n\n`import/order`가 절대경로를 `internal script`로 인식하기 위해선 `settings.\"import/resolver\"` 설정을 해줘야 한다.\n","slug":"/snippets/lint/eslint-sort-import","readingMinutes":2,"wordCount":158,"snippetSlug":"lint"},"nextPost":{"title":"(Next.js) document fonts","description":"적절한 폰트를 찾는다.\nhttps://fonts.google.com/\n\n<br />\n\ntsx:_document.tsx\n<Head>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.c...","icon":"","image":"","tags":["Next.js","css","tailwindcss"],"draft":false,"date":"2022-12-19","content":"\n적절한 폰트를 찾는다.\n**https://fonts.google.com/**\n\n<br />\n\n```tsx:_document.tsx\n<Head>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossOrigin=\"anonymous\" />\n  <link\n      href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800;900&display=swap\"\n      rel=\"stylesheet\"\n  />\n</Head>\n```\n\n```css:globals.css\n@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800;900&display=swap');\n\n* {\n  font-family: 'Inter', sans-serif;\n}\n```\n\n---\n\n`tailwindcss`\n\n```js:tailwind.config.js\nconst { fontFamily } = require('tailwindcss/defaultTheme');\n\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  //...\n  theme: {\n    extend: {\n      fontFamily: {\n        sans: ['inter', ...fontFamily.sans],\n      },\n      //...\n    }\n};\n```\n\n```tsx:_app.tsx\n<div className=\"font-sans\">\n  <Component {...pageProps} />\n</div>\n```\n","slug":"/snippets/next.js/document-fonts","readingMinutes":1,"wordCount":74,"snippetSlug":"next.js"}},"slug":"/snippets/lint/vscode-eslint-prettier","compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    br: \"br\",\n    code: \"code\",\n    hr: \"hr\",\n    h3: \"h3\",\n    a: \"a\",\n    span: \"span\",\n    div: \"div\",\n    pre: \"pre\",\n    button: \"button\",\n    svg: \"svg\",\n    path: \"path\",\n    img: \"img\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"repository 단위로 IDE 설정을 강제하고 싶을 때가 있다.\", _jsx(_components.br, {}), \"\\n\", \"사람마다 제각각 선호하는 설정이 있고 프로젝트 환경에 따라 설정이 달라져 프로젝트마다 이를 다르게 설정해야 한다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \".vscode\"\n      }), \" 디랙토리에 설정을 명시하여 이를 해결할 수 있다!\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h3, {\n      id: \"옵션-설정\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#옵션-설정\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"옵션 설정\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsxs(_components.div, {\n        className: \"rehype-code-wrap--title\",\n        children: [_jsx(_components.div, {\n          className: \"rehype-code-wrap--title-text\",\n          children: \".vscode/settings.json\"\n        }), _jsx(_components.div, {\n          className: \"rehype-code-wrap--title-blank\"\n        })]\n      }), _jsx(_components.pre, {\n        className: \"language-json\",\n        children: _jsxs(_components.code, {\n          className: \"language-json code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token property\",\n              children: \"\\\"editor.rulers\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), _jsx(_components.span, {\n              className: \"token number\",\n              children: \"120\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"// IDE에 줄이 보이게 함\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token property\",\n              children: \"\\\"editor.formatOnSave\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token boolean\",\n              children: \"true\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"// 파일 저장시 포멧팅 실행\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token property\",\n              children: \"\\\"editor.defaultFormatter\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"esbenp.prettier-vscode\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"// 포멧팅 도구를 prettier로 사용\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token property\",\n              children: \"\\\"editor.codeActionsOnSave\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token property\",\n              children: \"\\\"source.fixAll.eslint\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token boolean\",\n              children: \"true\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"// 파일 저장시 eslint auto fix 실행\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token property\",\n              children: \"\\\"eslint.validate\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"javascript\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"javascriptreact\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"typescript\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"typescriptreact\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"svelte\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"// 사용 언어에 따라 설정\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), \"\\n\"]\n          })]\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"속성을 잘 모르겠다면 설정에서 톱니바퀴의 \", _jsx(_components.code, {\n        children: \"Copy Setting as JSON\"\n      }), \"을 클릭하면 된다.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/posts/vscode-eslint-prettier/230126-175049.png\",\n        alt: \"230126-175049\"\n      })\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h3, {\n      id: \"플러그인-설정\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#플러그인-설정\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"플러그인 설정\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsxs(_components.div, {\n        className: \"rehype-code-wrap--title\",\n        children: [_jsx(_components.div, {\n          className: \"rehype-code-wrap--title-text\",\n          children: \".vscode/extensions.json\"\n        }), _jsx(_components.div, {\n          className: \"rehype-code-wrap--title-blank\"\n        })]\n      }), _jsx(_components.pre, {\n        className: \"language-json\",\n        children: _jsxs(_components.code, {\n          className: \"language-json code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token property\",\n              children: \"\\\"recommendations\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"svelte.svelte-vscode\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"dbaeumer.vscode-eslint\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"esbenp.prettier-vscode\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), \"\\n\"]\n          })]\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"플러그인이 설치가 안되어 있다면 IDE에서 이를 경고해준다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/posts/vscode-eslint-prettier/230126-173852.png\",\n        alt: \"230126-173852\"\n      })\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h3, {\n      id: \"code-snippets-설정\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#code-snippets-설정\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"code snippets 설정\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsxs(_components.div, {\n        className: \"rehype-code-wrap--title\",\n        children: [_jsx(_components.div, {\n          className: \"rehype-code-wrap--title-text\",\n          children: \".vscode/.code-snippets\"\n        }), _jsx(_components.div, {\n          className: \"rehype-code-wrap--title-blank\"\n        })]\n      }), _jsx(_components.pre, {\n        className: \"language-json\",\n        children: _jsxs(_components.code, {\n          className: \"language-json code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token property\",\n              children: \"\\\"Current DateTime\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token property\",\n              children: \"\\\"prefix\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"current_date_time\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"cdt\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token property\",\n              children: \"\\\"description\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"Output current DateTime YYYY-MM-DD HH:mm:ss\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token property\",\n              children: \"\\\"body\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"$CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND\\\"\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), \"\\n\"]\n          })]\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://code.visualstudio.com/docs/editor/userdefinedsnippets#_variables\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: _jsx(_components.strong, {\n          children: \"VSCode Variables\"\n        })\n      }), \"을 활용하여 프로젝트에 맞는 다양한 \", _jsx(_components.code, {\n        children: \"code snippets\"\n      }), \"을 작성할 수 있다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \".code-snippets\"\n      }), \" 앞에 적용될 파일 타입을 명시할 수 있다. \", _jsx(_components.code, {\n        children: \"ts.code-snippets\"\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h3, {\n      id: \"단축키-설정\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#단축키-설정\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"단축키 설정\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsxs(_components.div, {\n        className: \"rehype-code-wrap--title\",\n        children: [_jsx(_components.div, {\n          className: \"rehype-code-wrap--title-text\",\n          children: \".vscode/keybindings.json\"\n        }), _jsx(_components.div, {\n          className: \"rehype-code-wrap--title-blank\"\n        })]\n      }), _jsx(_components.pre, {\n        className: \"language-json\",\n        children: _jsxs(_components.code, {\n          className: \"language-json code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"        \", _jsx(_components.span, {\n              className: \"token property\",\n              children: \"\\\"key\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"shift+cmd+v\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"        \", _jsx(_components.span, {\n              className: \"token property\",\n              children: \"\\\"command\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"-markdown.extension.closePreview\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"        \", _jsx(_components.span, {\n              className: \"token property\",\n              children: \"\\\"when\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"markdownPreviewFocus\\\"\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"        \", _jsx(_components.span, {\n              className: \"token property\",\n              children: \"\\\"key\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"shift+cmd+v\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"        \", _jsx(_components.span, {\n              className: \"token property\",\n              children: \"\\\"command\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"extension.pasteImage\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"        \", _jsx(_components.span, {\n              className: \"token property\",\n              children: \"\\\"when\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"editorTextFocus\\\"\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), \"\\n\"]\n          })]\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"VSCode 동작부터 Extension 실행까지 \", _jsx(_components.a, {\n        href: \"https://code.visualstudio.com/docs/getstarted/keybindings\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: _jsx(_components.strong, {\n          children: \"다양한 동작\"\n        })\n      }), \"을 지원하니 필요에 따라 적용하면 좋을 것 같다.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tableOfContents":[{"slug":"옵션-설정","text":"옵션 설정","subSections":[{"slug":"플러그인-설정","text":"플러그인 설정"},{"slug":"code-snippets-설정","text":"code snippets 설정"},{"slug":"단축키-설정","text":"단축키 설정"}]}]},"__N_SSG":true}