{"pageProps":{"post":{"title":"Next.js 블로그 Github Pages에 자동 배포하기","description":"Github Action을 활용하여 자동으로 Github Pages에 배포되도록 하자.","icon":"","image":"","tags":["Next.js","Blog","github action","github pages"],"draft":false,"date":"2022-11-12","content":"\n## 레포 준비\n\n`github pages`에 배포할 것익기 때문에 공식 문서 가이드에 따라 진행하면 됩니다.\nhttps://pages.github.com/\n\n아래 사항들을 주의하면 됩니다.\n\n1. 기본적으로 github `username` 기반으로 도메인 하위에 생성된다. ex `bepyan.github.io`\n2. 레포지토리 이름을 `username.github.io` 형태로 설정해야 기본 도메인에 반영된다.\n3. 다른 형태의 레포지토리 이름은 하위 도메인에 반영이 된다. ex. `todo` => `bepyan.github.io/todo`\n4. 레포지토리는 `public`으로 설정되어야 한다.\n\n---\n\n## Next.js Static HTML Export\n\n경로 별로 html 파일을 생성하게 됩니다.\n\nhttps://nextjs.org/docs/advanced-features/static-html-export\n\n```json:packages.json\n{\n  \"name\": \"bepyan.github.io\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"homepage\": \"https://bepyan.github.io/\",\n  \"scripts\": {\n    \"dev\": \"next dev\",\n    \"build\": \"next build && next export\",\n    \"serve\": \"npx http-server out\",\n  },\n}\n```\n\n기본적으로 `yarn build`하면 결과물이 `out` 디랙토리에 생성됩니다.\n`npx http-server out`을 통해서 결과물을 확인할 수 있습니다.\n\n`static-html`에는 기본적으로 `next/image`를 지원하지 않습니다. 관련해서 오류가 뜰 수 있는데 [Next.js 블로그 Image Optimization](/6-image-optimization)를 참고 바랍니다.\n\n---\n\n## Github Action\n\n기본적으로 main 브랜치에 commit이 되었을 때 배포되도록 설정할 수 있습니다.\n아래 파일을 생성하면 끝입니다.\n\n```yml:.github/main.yml\nname: GitHub Pages Deploy\n\non:\n  push:\n    branches:\n      - main\n\njobs:\n  build-and-deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout 🛎️\n        uses: actions/checkout@v3\n\n      - name: Install and Build 🔧\n        run: |\n          yarn install\n          yarn build && touch ./out/.nojekyll\n\n      - name: Deploy 🚀\n        uses: JamesIves/github-pages-deploy-action@v4\n        with:\n          branch: gh-pages\n          folder: out\n```\n\n동작원리는 단순합니다.\n\n1. main branch에 push 되었을 때 jobs를 실행한다.\n2. ubuntu(리눅스) 환경에서 레포지토리 코드를 pull 해온다.\n3. packages를 설치 해주고 웹앱을 빌드해준다.\n4. `touch ./out/.nojekyll` github pages jekyll 처리 과정에서 `_next` 관련 설정이 무시되지 않도록 설정해준다.\n5. 빌드 결과물 `out` 디랙토리를 gh-pages 브랜치에 푸시하고 github pages에 배포한다.\n\n지금은 배포 용도로만 사용하고 있지만 테스트 코드 시행, 맞춤법 검사, 썸네일 제작, 이미지 전처리 등 다양한 작업으로 확장할 수 있습니다.\n\n---\n\n저는 최종 배포까지 총 **2분 20초**가 소요되고 17MB의 파일들이 github pages에 배포 되었습니다.\n\n![230108-214628](/posts/4-deploy/230108-214628.png)\n\n![230108-214706](/posts/4-deploy/230108-214706.png)\n","slug":"/blog/nextjs-blog/4-deploy","readingMinutes":3,"wordCount":280,"serizeSlug":"nextjs-blog"},"postFooterProps":{"prevPost":{"title":"Next.js mdx plugin","description":"`next-mdx-remote`에서 플로그인으로 이쁜 결과물을 만들자.","tags":["Next.js","Blog"],"draft":false,"date":"2022-11-11","slug":"/blog/nextjs-blog/3-mdx-plugin","readingMinutes":8,"wordCount":832,"serizeSlug":"nextjs-blog"},"nextPost":{"title":"Next.js 블로그 sitemap 생성, 검색엔진 등록","description":"`next-sitemap` 라이브러리를 사용해서 쉽게 sitemap 만들고 검색엔진에 등록하자.","tags":["Next.js","Blog","SEO"],"draft":false,"date":"2022-11-15","slug":"/blog/nextjs-blog/5-create-sitemap","readingMinutes":5,"wordCount":394,"serizeSlug":"nextjs-blog"}},"serize":{"title":"Next.js로 블로그 만들기","description":"100% 취향 반영, 내 손으로 직접 블로그를 만들어 보자!!","tags":[],"draft":false,"date":"2022-11-11","posts":[{"title":"기술 블로그를 만들 때 고려해야 할 점","description":"블로그를 만들 때 어떤 것들을 고려해야 할까? 🤔","tags":["Next.js","Blog"],"date":"2022-11-11","slug":"/blog/nextjs-blog/1-boilerplate","readingMinutes":5,"wordCount":383,"serizeSlug":"nextjs-blog"},{"title":"Next.js 블로그 글 페이지 만들기","description":"glob를 활용하여 디랙토리 기반으로 페이지들을 생성해보자 🤔","tags":["Next.js","Blog","glob"],"date":"2022-11-11","slug":"/blog/nextjs-blog/2-blog-list","readingMinutes":3,"wordCount":333,"serizeSlug":"nextjs-blog"},{"title":"Next.js 블로그 글의 추가 정보 파싱하기","description":"gray-matter, reading-time 등을 활용하여 글에 대한 추가 정보를 알아내자.","tags":["Next.js","Blog"],"date":"2022-11-11","slug":"/blog/nextjs-blog/2-blog-listInfo","readingMinutes":5,"wordCount":508,"serizeSlug":"nextjs-blog"},{"title":"Next.js mdx plugin","description":"`next-mdx-remote`에서 플로그인으로 이쁜 결과물을 만들자.","tags":["Next.js","Blog"],"draft":false,"date":"2022-11-11","slug":"/blog/nextjs-blog/3-mdx-plugin","readingMinutes":8,"wordCount":832,"serizeSlug":"nextjs-blog"},{"title":"Next.js 블로그 Github Pages에 자동 배포하기","description":"Github Action을 활용하여 자동으로 Github Pages에 배포되도록 하자.","icon":"","image":"","tags":["Next.js","Blog","github action","github pages"],"draft":false,"date":"2022-11-12","slug":"/blog/nextjs-blog/4-deploy","readingMinutes":3,"wordCount":280,"serizeSlug":"nextjs-blog"},{"title":"Next.js 블로그 sitemap 생성, 검색엔진 등록","description":"`next-sitemap` 라이브러리를 사용해서 쉽게 sitemap 만들고 검색엔진에 등록하자.","tags":["Next.js","Blog","SEO"],"draft":false,"date":"2022-11-15","slug":"/blog/nextjs-blog/5-create-sitemap","readingMinutes":5,"wordCount":394,"serizeSlug":"nextjs-blog"},{"title":"Next.js 블로그 Google Analytics 연동하기","description":"블로그에 Google Analytics v4를 심어주자!","tags":["Next.js","Blog","Typescript","GA"],"draft":false,"date":"2022-11-16","slug":"/blog/nextjs-blog/5-google-analytics","readingMinutes":4,"wordCount":502,"serizeSlug":"nextjs-blog"},{"title":"Next.js 블로그 댓글 기능 추가하기 (feat. giscus)","description":"💎 Giscus를 활용하여 Next.js 블로그에 댓글, 대댓글, 리액션을 달 수 있도록 해주자!","tags":["Next.js","Blog","giscus"],"draft":false,"date":"2022-11-13","slug":"/blog/nextjs-blog/6-comments","readingMinutes":5,"wordCount":426,"serizeSlug":"nextjs-blog"},{"title":"Next.js 블로그 Image Optimization","description":"Next.js static html에서 이미지를 기똥차게 사용해보자!","tags":["Next.js","Blog","image","optimization"],"draft":false,"date":"2022-11-14","slug":"/blog/nextjs-blog/6-image-optimization","readingMinutes":3,"wordCount":291,"serizeSlug":"nextjs-blog"},{"title":"Next.js 블로그 mdx에서 이미지 복붙하기 (feat. Paste Image)","description":"vscode markdown 파일에서 이미지를 기똥차게 사용해보자!","tags":["Next.js","Blog","markdown","Paste Image"],"draft":false,"date":"2022-11-15","slug":"/blog/nextjs-blog/6-images-use-in-vscode","readingMinutes":2,"wordCount":175,"serizeSlug":"nextjs-blog"}],"readingMinutes":43,"slug":"/blog/nextjs-blog"},"slug":"/blog/nextjs-blog/4-deploy","compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    p: \"p\",\n    code: \"code\",\n    br: \"br\",\n    ol: \"ol\",\n    li: \"li\",\n    hr: \"hr\",\n    div: \"div\",\n    pre: \"pre\",\n    button: \"button\",\n    svg: \"svg\",\n    path: \"path\",\n    strong: \"strong\",\n    img: \"img\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"레포-준비\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#레포-준비\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"레포 준비\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"github pages\"\n      }), \"에 배포할 것익기 때문에 공식 문서 가이드에 따라 진행하면 됩니다.\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.a, {\n        href: \"https://pages.github.com/\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"https://pages.github.com/\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"아래 사항들을 주의하면 됩니다.\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"기본적으로 github \", _jsx(_components.code, {\n          children: \"username\"\n        }), \" 기반으로 도메인 하위에 생성된다. ex \", _jsx(_components.code, {\n          children: \"bepyan.github.io\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"레포지토리 이름을 \", _jsx(_components.code, {\n          children: \"username.github.io\"\n        }), \" 형태로 설정해야 기본 도메인에 반영된다.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"다른 형태의 레포지토리 이름은 하위 도메인에 반영이 된다. ex. \", _jsx(_components.code, {\n          children: \"todo\"\n        }), \" => \", _jsx(_components.code, {\n          children: \"bepyan.github.io/todo\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"레포지토리는 \", _jsx(_components.code, {\n          children: \"public\"\n        }), \"으로 설정되어야 한다.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h2, {\n      id: \"nextjs-static-html-export\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#nextjs-static-html-export\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Next.js Static HTML Export\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"경로 별로 html 파일을 생성하게 됩니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://nextjs.org/docs/advanced-features/static-html-export\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"https://nextjs.org/docs/advanced-features/static-html-export\"\n      })\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsxs(_components.div, {\n        className: \"rehype-code-wrap--title\",\n        children: [_jsx(_components.div, {\n          className: \"rehype-code-wrap--title-text\",\n          children: \"packages.json\"\n        }), _jsx(_components.div, {\n          className: \"rehype-code-wrap--title-blank\"\n        })]\n      }), _jsx(_components.pre, {\n        className: \"language-json\",\n        children: _jsxs(_components.code, {\n          className: \"language-json code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token property\",\n              children: \"\\\"name\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"bepyan.github.io\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token property\",\n              children: \"\\\"version\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"0.1.0\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token property\",\n              children: \"\\\"private\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token boolean\",\n              children: \"true\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token property\",\n              children: \"\\\"homepage\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"https://bepyan.github.io/\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token property\",\n              children: \"\\\"scripts\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token property\",\n              children: \"\\\"dev\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"next dev\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token property\",\n              children: \"\\\"build\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"next build && next export\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token property\",\n              children: \"\\\"serve\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"npx http-server out\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), \"\\n\"]\n          })]\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"기본적으로 \", _jsx(_components.code, {\n        children: \"yarn build\"\n      }), \"하면 결과물이 \", _jsx(_components.code, {\n        children: \"out\"\n      }), \" 디랙토리에 생성됩니다.\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.code, {\n        children: \"npx http-server out\"\n      }), \"을 통해서 결과물을 확인할 수 있습니다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"static-html\"\n      }), \"에는 기본적으로 \", _jsx(_components.code, {\n        children: \"next/image\"\n      }), \"를 지원하지 않습니다. 관련해서 오류가 뜰 수 있는데 \", _jsx(_components.a, {\n        href: \"/6-image-optimization\",\n        children: \"Next.js 블로그 Image Optimization\"\n      }), \"를 참고 바랍니다.\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h2, {\n      id: \"github-action\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#github-action\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Github Action\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"기본적으로 main 브랜치에 commit이 되었을 때 배포되도록 설정할 수 있습니다.\", _jsx(_components.br, {}), \"\\n\", \"아래 파일을 생성하면 끝입니다.\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsxs(_components.div, {\n        className: \"rehype-code-wrap--title\",\n        children: [_jsx(_components.div, {\n          className: \"rehype-code-wrap--title-text\",\n          children: \".github/main.yml\"\n        }), _jsx(_components.div, {\n          className: \"rehype-code-wrap--title-blank\"\n        })]\n      }), _jsx(_components.pre, {\n        className: \"language-yml\",\n        children: _jsxs(_components.code, {\n          className: \"language-yml code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token key atrule\",\n              children: \"name\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \":\"\n            }), \" GitHub Pages Deploy\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token key atrule\",\n              children: \"on\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \":\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token key atrule\",\n              children: \"push\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \":\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token key atrule\",\n              children: \"branches\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \":\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"      \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"-\"\n            }), \" main\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token key atrule\",\n              children: \"jobs\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \":\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token key atrule\",\n              children: \"build-and-deploy\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \":\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token key atrule\",\n              children: \"runs-on\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \":\"\n            }), \" ubuntu\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"-\"\n            }), \"latest\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token key atrule\",\n              children: \"steps\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \":\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"      \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"-\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token key atrule\",\n              children: \"name\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \":\"\n            }), \" Checkout 🛎️\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"        \", _jsx(_components.span, {\n              className: \"token key atrule\",\n              children: \"uses\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \":\"\n            }), \" actions/checkout@v3\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"      \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"-\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token key atrule\",\n              children: \"name\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \":\"\n            }), \" Install and Build 🔧\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"        \", _jsx(_components.span, {\n              className: \"token key atrule\",\n              children: \"run\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"|\"\n            }), _jsx(_components.span, {\n              className: \"token scalar string\",\n              children: \"\\n\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token scalar string\",\n              children: \"          yarn install\\n\"\n            })\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token scalar string\",\n              children: \"          yarn build && touch ./out/.nojekyll\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"      \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"-\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token key atrule\",\n              children: \"name\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \":\"\n            }), \" Deploy 🚀\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"        \", _jsx(_components.span, {\n              className: \"token key atrule\",\n              children: \"uses\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \":\"\n            }), \" JamesIves/github\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"-\"\n            }), \"pages\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"-\"\n            }), \"deploy\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"-\"\n            }), \"action@v4\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"        \", _jsx(_components.span, {\n              className: \"token key atrule\",\n              children: \"with\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \":\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"          \", _jsx(_components.span, {\n              className: \"token key atrule\",\n              children: \"branch\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \":\"\n            }), \" gh\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"-\"\n            }), \"pages\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"          \", _jsx(_components.span, {\n              className: \"token key atrule\",\n              children: \"folder\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \":\"\n            }), \" out\\n\"]\n          })]\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"동작원리는 단순합니다.\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"main branch에 push 되었을 때 jobs를 실행한다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"ubuntu(리눅스) 환경에서 레포지토리 코드를 pull 해온다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"packages를 설치 해주고 웹앱을 빌드해준다.\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"touch ./out/.nojekyll\"\n        }), \" github pages jekyll 처리 과정에서 \", _jsx(_components.code, {\n          children: \"_next\"\n        }), \" 관련 설정이 무시되지 않도록 설정해준다.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"빌드 결과물 \", _jsx(_components.code, {\n          children: \"out\"\n        }), \" 디랙토리를 gh-pages 브랜치에 푸시하고 github pages에 배포한다.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"지금은 배포 용도로만 사용하고 있지만 테스트 코드 시행, 맞춤법 검사, 썸네일 제작, 이미지 전처리 등 다양한 작업으로 확장할 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"저는 최종 배포까지 총 \", _jsx(_components.strong, {\n        children: \"2분 20초\"\n      }), \"가 소요되고 17MB의 파일들이 github pages에 배포 되었습니다.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/posts/4-deploy/230108-214628.png\",\n        alt: \"230108-214628\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/posts/4-deploy/230108-214706.png\",\n        alt: \"230108-214706\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tableOfContents":[{"slug":"레포-준비","text":"레포 준비","subSections":[]},{"slug":"nextjs-static-html-export","text":"Next.js Static HTML Export","subSections":[]},{"slug":"github-action","text":"Github Action","subSections":[]}]},"__N_SSG":true}