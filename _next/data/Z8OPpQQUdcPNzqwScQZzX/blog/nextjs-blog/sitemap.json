{"pageProps":{"post":{"title":"Next.js 블로그 sitemap 생성 및 검색엔진 등록","description":"`next-sitemap` 라이브러리를 사용해서 쉽게 sitemap 만들고 검색 엔진에 등록하자.","tags":["Next.js","Blog"],"draft":false,"date":"2022-11-15","content":"\n검색엔진에 노출되기 위해선 봇들에게 우리 블로그에 어떤 페이지가 있는지 알려줘야 합니다.  \n라이브러리를 통해서 모든 정적 페이지 정보가 담긴 `sitemap.xml`를 만들어 봅시다.\n\n✨ [**next-sitemap**](https://github.com/iamvishnusankar/next-sitemap)\n\n```shell\nyarn add -D next-sitemap\n```\n\n`next-sitemap.config.js`\n\n```js\n/** @type {import('next-sitemap').IConfig} */\nmodule.exports = {\n  siteUrl: 'https://bepyan.github.io',\n  changefreq: 'daily',\n  priority: 0.7,\n  sitemapSize: 7000,\n  generateRobotsTxt: true,\n  exclude: [],\n};\n```\n\n`package.json`\n\n```json\n{\n  \"scripts\": {\n    \"build\": \"next build && next-sitemap && next export\",\n    \"postbuild\": \"next-export-optimize-images\",\n    \"serve\": \"npx http-server out\"\n  }\n}\n```\n\n여기서 주의할 점은 `next build` 실행 후 `next export` 전에 `next-sitemap` 실행 해줘야 한다는 것입니다.  \n그래야 `public`에 생성된 파일들이 최종적으로 `out`에 export됩니다.\n\n참고로 `postbuild` 스크립트는 `build` 실행이후 자동으로 실행됩니다.\n\n기본적으로 아래와 같은 파일들이 생성되는데요.  \n`public/robots.text` `public/sitemap.xml` `public/sitemap-0.xml`   \n이들이 push되지 않도록 `.gitignore`에 추가해주도록 합니다.   \n\n```\n# production\n/build\n/public/robots.txt\n/public/sitemap*.xml\n```\n\n## 실행 결과 확인\n\n`yarn build`를 실행하면 `out` 디랙토리에도 sitemap 관련 파일들이 추가된 것을 확인할 수 있습니다.\n\n![221116-000505](/posts/sitemap/221116-000505.png)\n\ngithub action에서도 잘 실행된 것을 확인할 수 있습니다.\n\n![221115-231937](/posts/sitemap/221115-231937.png)\n\n[sitemap-0.xml](https://bepyan.github.io/sitemap-0.xml)\n\n```html\n<url>\n    <loc>https://bepyan.github.io</loc>\n    <lastmod>2022-11-15T15:18:54.289Z</lastmod>\n    <changefreq>daily</changefreq>\n    <priority>0.7</priority>\n</url>\n```\n","slug":"nextjs-blog/sitemap","readingMinutes":2,"wordCount":162},"slug":"nextjs-blog/sitemap","mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    br: \"br\",\n    code: \"code\",\n    a: \"a\",\n    strong: \"strong\",\n    pre: \"pre\",\n    span: \"span\",\n    h2: \"h2\",\n    img: \"img\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"검색엔진에 노출되기 위해선 봇들에게 우리 블로그에 어떤 페이지가 있는지 알려줘야 합니다.\", _jsx(_components.br, {}), \"\\n\", \"라이브러리를 통해서 모든 정적 페이지 정보가 담긴 \", _jsx(_components.code, {\n        children: \"sitemap.xml\"\n      }), \"를 만들어 봅시다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"✨ \", _jsx(_components.a, {\n        href: \"https://github.com/iamvishnusankar/next-sitemap\",\n        children: _jsx(_components.strong, {\n          children: \"next-sitemap\"\n        })\n      })]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-shell\",\n      children: _jsx(_components.code, {\n        className: \"language-shell code-highlight\",\n        children: _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token function\",\n            children: \"yarn\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"add\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token parameter variable\",\n            children: \"-D\"\n          }), \" next-sitemap\\n\"]\n        })\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.code, {\n        children: \"next-sitemap.config.js\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-js\",\n      children: _jsxs(_components.code, {\n        className: \"language-js code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsxs(_components.span, {\n            className: \"token doc-comment comment\",\n            children: [\"/** \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"@type\"\n            }), \" \", _jsxs(_components.span, {\n              className: \"token class-name\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"{\"\n              }), _jsx(_components.span, {\n                className: \"token keyword\",\n                children: \"import\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"(\"\n              }), _jsx(_components.span, {\n                className: \"token string\",\n                children: \"'next-sitemap'\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \")\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \".\"\n              }), \"IConfig\", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"}\"\n              })]\n            }), \" */\"]\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"module\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: \"exports\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token literal-property property\",\n            children: \"siteUrl\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'https://bepyan.github.io'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token literal-property property\",\n            children: \"changefreq\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'daily'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token literal-property property\",\n            children: \"priority\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0.7\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token literal-property property\",\n            children: \"sitemapSize\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"7000\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token literal-property property\",\n            children: \"generateRobotsTxt\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token boolean\",\n            children: \"true\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token literal-property property\",\n            children: \"exclude\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.code, {\n        children: \"package.json\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-json\",\n      children: _jsxs(_components.code, {\n        className: \"language-json code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token property\",\n            children: \"\\\"scripts\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token property\",\n            children: \"\\\"build\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"next build && next-sitemap && next export\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token property\",\n            children: \"\\\"postbuild\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"next-export-optimize-images\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token property\",\n            children: \"\\\"serve\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"npx http-server out\\\"\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"여기서 주의할 점은 \", _jsx(_components.code, {\n        children: \"next build\"\n      }), \" 실행 후 \", _jsx(_components.code, {\n        children: \"next export\"\n      }), \" 전에 \", _jsx(_components.code, {\n        children: \"next-sitemap\"\n      }), \" 실행 해줘야 한다는 것입니다.\", _jsx(_components.br, {}), \"\\n\", \"그래야 \", _jsx(_components.code, {\n        children: \"public\"\n      }), \"에 생성된 파일들이 최종적으로 \", _jsx(_components.code, {\n        children: \"out\"\n      }), \"에 export됩니다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"참고로 \", _jsx(_components.code, {\n        children: \"postbuild\"\n      }), \" 스크립트는 \", _jsx(_components.code, {\n        children: \"build\"\n      }), \" 실행이후 자동으로 실행됩니다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"기본적으로 아래와 같은 파일들이 생성되는데요.\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.code, {\n        children: \"public/robots.text\"\n      }), \" \", _jsx(_components.code, {\n        children: \"public/sitemap.xml\"\n      }), \" \", _jsx(_components.code, {\n        children: \"public/sitemap-0.xml\"\n      }), _jsx(_components.br, {}), \"\\n\", \"이들이 push되지 않도록 \", _jsx(_components.code, {\n        children: \".gitignore\"\n      }), \"에 추가해주도록 합니다.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"code-highlight\",\n        children: [_jsx(_components.span, {\n          className: \"code-line\",\n          children: \"# production\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"/build\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"/public/robots.txt\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"/public/sitemap*.xml\\n\"\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"실행-결과-확인\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#실행-결과-확인\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"실행 결과 확인\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"yarn build\"\n      }), \"를 실행하면 \", _jsx(_components.code, {\n        children: \"out\"\n      }), \" 디랙토리에도 sitemap 관련 파일들이 추가된 것을 확인할 수 있습니다.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/posts/sitemap/221116-000505.png\",\n        alt: \"221116-000505\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"github action에서도 잘 실행된 것을 확인할 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/posts/sitemap/221115-231937.png\",\n        alt: \"221115-231937\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://bepyan.github.io/sitemap-0.xml\",\n        children: \"sitemap-0.xml\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-html\",\n      children: _jsxs(_components.code, {\n        className: \"language-html code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"<\"\n              }), \"url\"]\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \">\"\n            })]\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"<\"\n              }), \"loc\"]\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \">\"\n            })]\n          }), \"https://bepyan.github.io\", _jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"</\"\n              }), \"loc\"]\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \">\"\n            })]\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"<\"\n              }), \"lastmod\"]\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \">\"\n            })]\n          }), \"2022-11-15T15:18:54.289Z\", _jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"</\"\n              }), \"lastmod\"]\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \">\"\n            })]\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"<\"\n              }), \"changefreq\"]\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \">\"\n            })]\n          }), \"daily\", _jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"</\"\n              }), \"changefreq\"]\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \">\"\n            })]\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"<\"\n              }), \"priority\"]\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \">\"\n            })]\n          }), \"0.7\", _jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"</\"\n              }), \"priority\"]\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \">\"\n            })]\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"</\"\n              }), \"url\"]\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \">\"\n            })]\n          }), \"\\n\"]\n        })]\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}