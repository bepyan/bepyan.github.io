{"pageProps":{"post":{"title":"Next.js 블로그 sitemap 생성, 검색엔진 등록","description":"`next-sitemap` 라이브러리를 사용해서 쉽게 sitemap 만들고 검색엔진에 등록하자.","tags":["Next.js","Blog","SEO"],"draft":false,"date":"2022-11-15","content":"\n검색엔진에 노출되기 위해선 봇들에게 우리 블로그에 어떤 페이지가 있는지 알려줘야 합니다.  \n✨ [**next-sitemap**](https://github.com/iamvishnusankar/next-sitemap) 라이브러리를 통해서 모든 정적 페이지 정보가 담긴 `sitemap.xml`를 만들어 봅시다.\n\n# sitemap 생성\n\n```shell\nyarn add -D next-sitemap\n```\n\n`next-sitemap.config.js`\n\n```js\n/** @type {import('next-sitemap').IConfig} */\nmodule.exports = {\n  siteUrl: 'https://bepyan.github.io',\n  changefreq: 'daily',\n  priority: 0.7,\n  sitemapSize: 7000,\n  generateRobotsTxt: true,\n  exclude: [],\n};\n```\n\n`package.json`\n\n```json\n{\n  \"scripts\": {\n    \"build\": \"next build && next-sitemap && next export\",\n    \"postbuild\": \"next-export-optimize-images\",\n    \"serve\": \"npx http-server out\"\n  }\n}\n```\n\n여기서 주의할 점은 `next build` 실행 후 `next export` 전에 `next-sitemap` 실행 해줘야 한다는 것입니다.  \n그래야 `public`에 생성된 파일들이 최종적으로 `out`에 export됩니다.\n\n참고로 `postbuild` 스크립트는 `build` 실행이후 자동으로 실행됩니다.\n\n기본적으로 아래와 같은 파일들이 생성되는데요.  \n`public/robots.text` `public/sitemap.xml` `public/sitemap-0.xml`  \n이들이 push되지 않도록 `.gitignore`에 추가해주도록 합니다.\n\n```\n# production\n/build\n/public/robots.txt\n/public/sitemap*.xml\n```\n\n## 실행 결과 확인\n\n`yarn build`를 실행하면 `out` 디랙토리에도 sitemap 관련 파일들이 추가된 것을 확인할 수 있습니다.\n\n![221116-000505](/posts/sitemap/221116-000505.png)\n\ngithub action에서도 잘 실행된 것을 확인할 수 있습니다.\n\n![221115-231937](/posts/sitemap/221115-231937.png)\n\n[sitemap-0.xml](https://bepyan.github.io/sitemap-0.xml)\n\n```html\n<url>\n  <loc>https://bepyan.github.io</loc>\n  <lastmod>2022-11-15T15:18:54.289Z</lastmod>\n  <changefreq>daily</changefreq>\n  <priority>0.7</priority>\n</url>\n```\n\n# 검색엔진 등록\n\nsitemap을 만든다고해서 끝이 나는 것이 아닙니다.   \n검색엔진에 사이트를 등록해줘야 크롤러, 봇이 블로그 글들을 수집하여 검색됩니다.\n\n## Google Search Console\n\nGoogle은 [Google Search Console](https://search.google.com/search-console/welcome?utm_source=about-page)에 등록하면 됩니다.\n\nURL 접두어에 블로그 도메인 주소를 입력해줍니다.  \n`https://bepyan.github.io/`\n\n![221116-011827](/posts/sitemap/221116-011827.png)\n\n편의상 HTML 태그 방법을 활용하도록 합니다.  \n`_document.tsx` 파일에 `meta` 태그를 추가해주면 됩니다.\n\n```tsx\nimport { Head, Html } from 'next/document';\n\nexport default function MyDocument() {\n  return (\n    <Html lang=\"ko\">\n      <Head>\n        <meta name=\"google-site-verification\" content=\"\" />\n        {/* ... */}\n      </Head>\n      {/* ... */}\n    </Html>\n  );\n}\n```\n\n배포이후 `확인`을 클릭해 본인 사이트 인증을 합니다.   \n인증이 성공된다면 사이트의 통계를 볼 수 있게 됩니다.\n\n![221116-012421](/posts/sitemap/221116-012421.png)\n\n## Naver Search Advisor\n\nNaver는 [네이버 웹마스터](https://searchadvisor.naver.com/console/board)로 위와 똑같이 진행하면 됩니다.\n\n1. 사이트 도메인을 등록합니다.\n2. `meta` 태그를 삽입하여 본인 사이트임을 인증합니다.\n3. 요청 -> 사이트맵 제출 -> sitemap.xml 주소를 입력해줍니다.\n4. 검증 -> robots.txt -> 잘 수집이 되었는지 확인합니다.\n5. 설정 -> 수집 주기 설정 -> `빠르게`로 설정해줍니다.\n\n![221116-010832](/posts/sitemap/221116-010832.png)\n\n시간이 지난 후 통계가 쌓이는지 확인해보도록 합시다!\n","slug":"/blog/nextjs-blog/sitemap","readingMinutes":4,"wordCount":319,"serizeSlug":"nextjs-blog"},"postFooterProps":{"prevPost":{"title":"Next.js 블로그 Google Analytics 연동하기","description":"블로그에 Google Analytics v4를 심어주자!","tags":["Next.js","Blog","Typescript","GA"],"draft":false,"date":"2022-11-16","content":"\n✨ [**google analytics**](https://analytics.google.com/analytics/web/)\n2020년도에 공식 릴리즈된 web-based 사용자 행동 분석 서비스입니다.   \n사용자의 유입, 스크롤, 검색, 클릭 등 이벤트를 자도으로 수집해줍니다.   \n참고로 firebase analytics는 app-based 분석 서비스로 iOS, AOS 앱을 개발할 때 사용하면 좋습니다.\n\n사이트에 들어가면 어렵지않게 이를 세팅할 수 있습니다.\n\n관리 > 속성 만들기  \n관리 > 데이터 스트림 > 스트림 추가  \n관리 > 데이터 스트림 > 스트림 선택 > 태그 안내 보기 > 직접 설치\n\n```html\n<!-- Google tag (gtag.js) -->\n<script async src=\"https://www.googletagmanager.com/gtag/js?id=###\"></script>\n<script>\n  window.dataLayer = window.dataLayer || [];\n  function gtag() {\n    dataLayer.push(arguments);\n  }\n  gtag('js', new Date());\n\n  gtag('config', '###');\n</script>\n```\n\n위 예시를 Next.js에 맞게 주입시켜 주면 됩니다.   \nNext.js에서 GA를 사용하는 [공식 예시](https://github.com/vercel/next.js/tree/canary/examples/with-google-analytics)가 있어 그대로 참고하면 됩니다.   \n하지만 js로 작성되어 있어 ts에 호환되도록 추가 작업이 진행되어야 합니다.\n\n```shell\nyarn add -D @types/gtag.js\n```\n\n<br />\n\n`types.d.ts`\n```ts\n/// <reference types=\"gtag.js\" />\n\ndeclare module 'gtag.js';\n```\neslint typescript에서 에러를 던질 수 있는데 `.eslintignore`에 `*.d.ts`를 추가하여 무시해주도록 합니다.\n\n<br />\n\n이제 3 파일을 수정하면 됩니다.\n\n[libs/gtags.ts](https://github.com/vercel/next.js/blob/canary/examples/with-google-analytics/lib/gtag.js)\n```ts\nexport const GA_TRACKING_ID = '<어짜피 HTML에 노출된다>';\n\n// https://developers.google.com/analytics/devguides/collection/gtagjs/pages\nexport const pageview = (url: URL) => {\n  window.gtag('config', GA_TRACKING_ID, {\n    page_path: url,\n  });\n};\n\n// https://developers.google.com/analytics/devguides/collection/gtagjs/events\nexport const event = (\n  action: Gtag.EventNames,\n  { event_category, event_label, value }: Gtag.EventParams,\n) => {\n  window.gtag('event', action, {\n    event_category,\n    event_label,\n    value,\n  });\n};\n```\n\n[_app.tsx](https://github.com/vercel/next.js/blob/canary/examples/with-google-analytics/pages/_app.js)\n\n[_document.tsx](https://github.com/vercel/next.js/blob/canary/examples/with-google-analytics/pages/_document.js)\n\n<br />\n\n배포 이후 태그가 잘 추가되었는지 확인 해봅시다!   \nhtml에서 `gtag-init`를 검색해보면 쉽게 찾을 수 있습니다.\n\n![221116-134704](/posts/google-analytics/221116-134704.png)\n\n이제 48시간 내에 해당 태그가 수집되어 GA가 사용자의 행동을 추적하게 됩니다.   \n\n<br />\n\n진짜 마지막으로 GA와 Search Console를 연동해주도록 합시다.\n- 관리 > Search Console 링크 > 연결\n\n![221116-140526](/posts/google-analytics/221116-140526.png)\n\n참고\n- https://andrew-simpson-ross.medium.com/strongly-typed-google-analytics-v4-with-next-js-aad6c6a5e383\n","slug":"/blog/nextjs-blog/google-analytics","readingMinutes":3,"wordCount":260,"serizeSlug":"nextjs-blog"},"nextPost":{"title":"5개월간 스타트업에서 굴렀다. 그리고 얻었다.","description":"2021.07.05 ~ 2021.11.26","icon":"","image":"","tags":["회고","커리어"],"draft":false,"date":"2021-12-14","content":"\n> 2021.07.05 ~ 2021.11.26\n\n<br />\n\n바야흐로 올해 여름,  \n지원한 인턴 모두 떨어지고 앞 길의 갈피를 잡지 못하고 있는 상황,  \n인스타그램 광고로 스타트업의 Recruit을 접하게 되었다.\n\n탄소 배출을 줄이고자하는, [샐러드 구독 플랫폼](http://saladweeks.co.kr/)을 운영하는 스타트업이다.\nReact, React-Native 개발자를 모집하고 있었고 나의 기술스택과 딱 맞아 들었다.\n서류 - 1차 면접 - 2차 면접, **입사 프로세스가 1주일안에 마무리 되었던 엄청난(?) 속도**를 보여줬다. 1차는 기술면접으로 비대면, 2차는 인성면접으로 대면으로 진행했다. 서비스를 어디까지 구축할 수 있는지, 현 팀원들과 원활한 협업 가능할지가 중요 포인트였던 것 같다.\n\n직원이 6명이고 법인이 창립된지 얼마 안된 초창기 스타트업이였기에 이런 **사수가 없는 환경에서 내가 잘 성장할 수 있을까** 고민이 되었다. 하지만 이런 초창기 스타트업은 지금 아니면 절대로 경험할 수 없을 것 같았다. 좋은 가치를 추구하는 서비스라고 생각했고 회사의 성장지표도 괜찮아 보여서 도전을 이어나가기로 했다. 다시 학교 들어가 의미없는(?) 이론 수업 보다는 현업에서 부딪치고 싶었고 돈을 벌고 싶었다.\n\n<p align=\"center\">\n  <img src=\"https://c.tenor.com/VCcGldHmbwQAAAAC/moved-clapping.gif\" />\n  <span>돈 받고 코딩이라니... ( 감격 )</span>\n</p>\n\n<br />\n\n입사후,\n**사실 충격의 연속이었다.** 제대로 개발되어 있는 것이 하나도 없었다. 나름 괜찮아 보였던 기존 사이트가 WIX라는 쇼핑몰 사이트 솔루션을 통해 만들어 졌고 사장님용 안드로이드 앱도 학부생 수준 미만의 퀄리티로 사용되고 있었다. 듣기로는 이전에 비전공자 팀원이 만든 것들이라 했다. 열악한 환경속에서도 서비스를 잘 운영해낸 팀원분들이 진심 대단했다..\n\n백엔드가 없다..? WIX에서 제공해주는 DB를 사용하고 있었고 이를 Firebase에 주마다 동기화하여 앱에서 사용하고 있었다. 그래서 한동안(1달) 개발자가 맞나 싶을 정도로 데이터 동기화하는 단순 CS업무도 병행을 했었다. 빨리 이 시스템을 바꿔야지 이 악물며 했던 것 같다.\n\n내가 들어간 시점에서 새로운 통합 시스템을 만들고 있었다. 개발자는 웹 1명, 백엔드 1명이 있었고 나는 React Native으로 사장님앱을 만들게 되었고 사내 관리자페이지까지 구축하게 되었다. 실무 경험이 없던 내가 들어오자마자 시스템 전체를 구축해야 했던 것이다. 시행착오가 있었지만 덕분에 내가 크게 성장할 수 있었던 것 같다.\n\n그렇게 정신없이 5달을 달려왔고 그만두고서야 제대로 회고를 하게 되었다.\n\n---\n\n## 💪🏻 내가 얻어 간 것\n\n> 기획, 설계, 배포 모든 단계에 직접적으로 참여한 경험.\n> 이슈, 업무 프로세스를 관리하는 방법.\n> 기술력, 검색능력, ~~그리고 재력.~~\n\n**Notion & Slack**\n\n- 공유 사무실, 재택, 코로나 환경으로 인해 Slack을 활용해서 많이 커뮤니케이션을 해야했다. Notion의 데이터베이스, 템플릿, Slack의 리마인드, 채널 등을 제대로 활용하게 되면서 업무 메신저 툴의 대한 이해도가 높아졌다.\n\n- 입사한지 1달 반만에 앱 기획부터 배포까지 강행군하며 스스로 **작업 프로세스 관리하는 법을 알게 되었다.** 노션의 칸반보드을 활용하여 내가 무엇을 우선적으로 작업 해야하는지 리스트업했고 어떤 작업이 남아 있는지 쉽게 파악할 수 있었다. 이번주 내가 작업할 수 있는 범위를 더 구체적으로 예측을 할 수도 있었다.\n\n<br />\n\n**사장님 앱**\n\n- **play store와 app store에 직접 앱을 배포했다**. 앱 특성상 앱 스토어를 통해서 앱을 전달하고 업데이트를 해야한다. 따라서 play store와 app store + xcode 에 대한 진입장벽이 꽤나 부담스럽다. 특히 지옥의 apple 심사.. (4번 reject을 당했다.. 3번의 권한 사용 요청 문구 수정, 1번은 해외에서 테스트할 수 있는 핸드폰 인증로직 관련) 그 모든 절차를 경험한 것은 정말 값진 것 같다.\n  m1으로 XCode 앱 빌드하는데 계속 에러가 발생하여 고생했던 것이 기억에 남는다.\n  play console의 에러 모니터링 기능을 통해서 배포한 앱에서 비정상 종료 이슈에 관해서 추적할 수 있었다. 덕분에 카메라 모듈을 교체하여 카메라 동작 이슈를 해결하기도 했다.\n\n- 학교 프로젝트하면서 아쉬웠던 부분을 풀어 낼 수 있었는데 그 중 하나가 **Atomic Degisn System**이다. 초기부터 아토믹한 컴포넌트를 추구했다. `emotion`을 활용해서 다른 UI 라이브러리 도움 없이 앱에 맞는 체계적인 UI Kit을 구축할 수 있었다.\n- 추가적으로 `React Navigation`을 활용한 Custom Modal 구현, `Channel.IO` 연동, 푸시알림 환경 구축, QR 코드 스캔, 앱 자동업데이트, `Typescript Generic` 등을 많은 경험할 수 있었다.\n\n<br />\n\n**관리자 페이지**\n\n- 어떤 UI Kit을 사용할지 고민하다가 IBM의 [Carborn Desgin System](https://www.carbondesignsystem.com/)을 선택했다. 날카롭고 세련된 UI가 관리자와 잘 맞을 것 같았다.\n- Storybook를 보면서 개발을 진행했는데 생각보다 레퍼런스가 부족하고 공식문서는 영문으로 되어 있어 학습에 끙끙댔다. 나중에 [Guideline](https://www.carbondesignsystem.com/guidelines/color/overview/)과 [Pattern](https://www.carbondesignsystem.com/patterns/empty-states-pattern/)에 대해서 알게 되어 참고하다 보니 **UI Layout에 대한 통찰력이 조금은 생긴 것 같다.** 처음에는 무지성으로 그냥 최대한 테이블내에서, 어떻게든 row를 expanded해서 동작을 수행하려 했다. 하지만 Dashboard 기반의 UI 가이드라인과 예시를 보고 내가 잘못하고 있음을 크게 깨닫고 객체 기반으로 대시보드 UI로 리팩토링하게 되었다.\n  Data Table에 대한 레퍼런스가 너무 부족하여 해당 컴포넌트를 활용하는데 꽤나 오랜 시간이 소요되었다. `props`로 넘겨준 데이터가 컴포넌트 내부적으로 memorized되고 변형된 형태로 사용되었다. 이것을 이해하고 나서야 제대로 테이블 컴포넌트를 활용할 수 있게 되었다. 나중에 `react-table` 라이브러리를 접하는데 큰 도움이 되었다.\n\n- 추가적으로 `Github Action`를 통한 AWS S3 CI/CD 자동화, `jwt`를 이용한 인증 구현, `xlsx`를 통한 데이터 엑셀 변환, `html-to-image`를 통해 html 이미지 변환, `Custom Hook` 제작(axios, debounce, 필터링, 테이블 관리 ...), `recoil`을 통한 전역 상태관리 등을 경험할 수 있었다.\n\n<p align=\"center\">\n  <img\n    src=\"https://c.tenor.com/OhQaaoHRM0kAAAAC/%EB%AC%BC%EC%9D%8C%ED%91%9C-%ED%8F%AC%EC%A6%88.gif\"\n    width=\"300\"\n  />\n  <span> 이젠 나도 어엿한 현업 개발자..? 라는 근자감이 생기게 되었다. </span>\n</p>\n\n---\n\n## 🍒 좋았던 점\n\n목걸이?!  \n출입증을 목에 걸고 밥먹으로 갈 때 너무나 뿌듯했다. 나도 직장인..? ㅎ헿\n\n<p align=\"center\">\n  <img src=\"https://a4-images.myspacecdn.com/images04/12/42b055063c4944cc9d703ec36d287870/full.gif\" />\n</p>\n\n<br />\n\n**수평적이고 자유롭게 소통하는 팀문화.**\n\n- 서로 닉네임을 불렀고 정말 자유롭게 의견을 주고 받았다.\n- **애자일하게 업무 프로세스를 개선할 수 있었다.**\n  ex. 개발팀에서 매일 스크럼, 주1회 스프린트를 진행했는데 매번 미팅마다 각자 이슈를 정리해야했다. 개선할 수 없을까하는 피드백이 나왔고 우리의 업무를 하나의 노션 데이터베이스로 합치기로 했다. 이후 따로 자료를 정리할 필요없이 노션의 필터링만 걸면 회의를 진행할 수 있었다. 추가적으로 템플릿을 활용하여 스프린트 회의록도 작성하기 굉장히 간편해졌다!\n\n열정적인 팀원들.\n\n- 더 나은 사회를 위한 따뜻한 마음을 가진 팀원들.\n- **서로를 신뢰할 수 있었다.**\n\n자유로운 출퇴근.\n\n- 코어 근무제 (11:00 ~ 16:00는 일하고 자율적으로 근무시간표를 조정) 였기 때문에 출근에 대한 압박이 없었다.\n- 월화수는 오피스 출근하고 나머지는 선택적 재택할 수 있었다.\n\n팀 전체가 개발자의 목소리를 정말 경청해주었다. ~~그럼에도 살인적인 배포일정이...~~\n\n---\n\n## 🥥 아쉬웠던 점\n\n열악한 개발환경인 만큼 아쉽고 부족했던 점이 많을 수 밖에 없었던 것 같다.\n\n기획의 부실\n\n- 기획자가 대표 1명이었다. 물론 서비스 요구사항에 대해 가장 잘 알지만 바빠서 기획에 전념을 할 수 없었다. 게다가 앱과 웹 둘다 기획을 해야하고 디자이너도 따로 없었다. 디테일한 기능요구사항, UI 마크업이 부실할 수밖에 없었다. 사장님들이 샐픽커 검색, 지난 픽업에 대한 처리 등 불편함을 호소하여 UI와 기능을 갈아 엎기도 했다.\n\n**백엔드의 부실공사**\n\n- 지나치게 빡센 배포일정이 예정 되었다(투자를 받기 위해서). 1달 반안에 기획부터 배포까지 해야하는데 시간이 절대적으로 부족했고 다들 경험도 부족했다.\n- **백엔드 API가 RESTful하지 못하게 되었다.** 리소스 중심으로 route가 구성되지 못했고 네이밍 컨벤션도 잘 지켜지지 않았다. 잘못된 문서 명세로 인해 불필요한 커뮤니케이션도 발생했다. 나만 Typescript를 썼기에 응답 컨벤션에 고통을 받았다. 같은 모델이지만 2-4개의 타입을 응답에 맞춰 작성을 해야했다.\n- 관리자 페이지가 없는 상태에서 서비스를 운영해야하다 보니 DB를 직접 접근을 해야하는 경우가 비일비재했다. 관리자페이지를 고려하여 API 설계가 되지 않아서 admin용 route가 부실했고 알림톡, 인프라 등 많은 일을 감당해야하는 백엔드이기에 앱, 웹 기능 구현이 계속 지연되었다.\n- 설상가상 ❄️ 중간에 백엔드분이 예정대로 그만두시고 새로운 백엔드 개발자가 오시면서 개발일정을 전면 개편하게 되었다. 기존 서버를 리팩토링하게 되었는데 부실했던 API를 RESTful하게, JWT를 제대로 활용하고, HTTPS도 적용한... 1달의 대공사를 치르게 되었다.\n\n나홀로 생존기\n\n- **좀 멀리보지 못 했다.** 개발방향을 가이드해주는 경험이 많은 개발자가 주위에 없어서 구글 검색에 절대적으로 의존했다. 문제가 발생하고나서야 잘못을 깨닫고 리팩토링을 하게 된 경우가 많았다. 그만두는 순간까지도 내가 잘못 설계한 코드가 많이 보였다.\n\niOS 앱이 너무 늦게 배포되었다.\n\n- iOS 개발자 계정이 있어야 제대로 빌드 테스트해서 실제 배포를 할 수 있다. 하지만 기업용 계발자 계정이 지나치게 늦게 나오는 바람에 앱 출시 일정이 거의 1.5 달 늦춰지게 되었다. andriod는 8월달에 배포 된거 보면 사실 3개월이나 늦춰진 것이다...\n- iOS가 늦게 나오는 바람에 iPhone을 쓰시는 사장님들이 android를 구비해야해서 불편하실 수 밖에 없고 회사측에서는 이를 케어하기 위해 픽업 명단 캡처 등 수고스러움을 감수해야 했다.\n\n---\n\n## 💉 백신\n\n백신을 맞으면 이 열악한 정글에서 더 강하게(?) 성장해 갈 수 있지 않을까하는 포인트를 정리해보았다.\n~~넌 강해졌다 돌격해!~~\n\n<p align=\"center\">\n  <img\n    src=\"https://images.velog.io/images/bepyan/post/87aa1520-f028-4ac8-af29-f16734255080/image.png\"\n    width=\"500\"\n  />\n</p>\n\n#### 실제 needs가 무엇인지를 집중하자.\n\n- 결국 개발의 핵심은 서비스 기능을 제공해 주는 것이다.\n- 시/공간복잡도, 깨끗함, 수준 높은 코드를 사람들이 많이 알아 주진 않는다. 사람들이 알아주는건 기능이 잘 동작하고 편리한 것이고 직관적인 것이다.\n- 시스템을 설계 할 때도 데이터가 중점이 아닌 기능을 중점으로 진행해야 한다. 어떤 변수를 사용할지가 아닌 메시지(메소드)를 어떻게 주고받으면서 기능을 구현할지를 고민하자. ~~이것이 객체지향이라고 하더라~~\n\n<br />\n\n#### 완벽함을 좀 내려놓아도 괜찮다.\n\n- 처음부터 완벽한 코드를 작성할 수 없다. 일단 기능을 구현하고 리팩토링하자!\n- 코드는 작성한 순간 레거시가 된다.\n- 완벽함을 위해 머릿속으로 많이 고민할 수 있는데 글로 이슈를 트래킹을 하자. 점심시간 활용해서 동료들과 이에 대해 잡담해보는 것도 좋다. 나중에 면접에서 큰 도움이 될 것이다.\n- 좀 번외긴 하기만,, 출퇴근간 [클린코드 핸드북](https://738.github.io/clean-code-typescript/)을 보면서 내 코드의 청결상태를 점검해보자. ~~은근히 더럽더라..~~\n\n<br />\n\n#### 코드에 감정이입하지 말자.\n\n- 우린 이제 현업이고 프로이다. 적어도 10년은 코딩으로 밥먹고 살아야한다.\n- 비즈니스 요구사항에 따라 기존 코드를 갈아 엎을 수 있다. ~~당연한 거다 ㅎㅎ~~\n- 버그가 발생하는 것은 내가 못나서 그런게 아니다. 불가항력이다. 버그를 수습하는게 개발자의 일이다.\n\n<br />\n\n#### ‘나중에 제대로 정리해야지’ 미루지 말자.\n\n- 되도록 지금 깔끔히 마무리 하자. 나중에 다시 집중해서 리팩토링하기 힘들다. ~~아니, 할 시간이 없다.~~\n- 미루는 것은 새로운 일을 만들어 낼 뿐이다.\n\n<br />\n\n#### 취뽀는 목적지가 아니다.\n\n- '난 뭘 하고 싶지?' 계속 스스로 물어봐야 한다.\n- 직장인의 시계는 5배로 빨리 간다. ~~주 5일을 일하기 때문..~~\n- 한 번뿐인 청춘, 하고 싶은 것을 이루기 위해 불태우자. 직장은 그저 수단일 뿐이다.\n\n---\n\n## 맺으면서\n\n내가 한 일을 타임라인으로 다시 정리해본다면\n\n| 시간  | 내용                                      |\n| ----- | ----------------------------------------- |\n| 7-8월 | 사장님 앱 기획, 설계, 배포                |\n| 9월   | 관리자 페이지 기획, 설계, 배포            |\n| 10월  | 사장님 앱, 관리자 페이지 유지보수         |\n| 11월  | 사장님 앱, 관리자페이지 API V1 업그레이드 |\n\n입사전, 내가 생각했던 것보다 스타트업을 통해서 정말 많이 성장할 수 있었다.\n좋은 팀원들을 만날 수 있었고, 회사와 팀원들이 모두 계속 성장해갔으면 좋겠다.\n\n<p align=\"center\">\n  <img src=\"https://c.tenor.com/bQCHJwgCNuMAAAAC/kitten-cat.gif\" width=\"300\" />\n</p>\n\n바빴지만 즐거웠고 힘들었지만 재밌었다.\n도전을 계속 이어가자 😘\n","slug":"/blog/retrospect/2021-in-startup","readingMinutes":21,"wordCount":1516,"serizeSlug":"retrospect"}},"serize":null,"slug":"/blog/nextjs-blog/sitemap","compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    br: \"br\",\n    a: \"a\",\n    strong: \"strong\",\n    code: \"code\",\n    h1: \"h1\",\n    span: \"span\",\n    div: \"div\",\n    pre: \"pre\",\n    button: \"button\",\n    svg: \"svg\",\n    path: \"path\",\n    h2: \"h2\",\n    img: \"img\",\n    ol: \"ol\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"검색엔진에 노출되기 위해선 봇들에게 우리 블로그에 어떤 페이지가 있는지 알려줘야 합니다.\", _jsx(_components.br, {}), \"\\n\", \"✨ \", _jsx(_components.a, {\n        href: \"https://github.com/iamvishnusankar/next-sitemap\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: _jsx(_components.strong, {\n          children: \"next-sitemap\"\n        })\n      }), \" 라이브러리를 통해서 모든 정적 페이지 정보가 담긴 \", _jsx(_components.code, {\n        children: \"sitemap.xml\"\n      }), \"를 만들어 봅시다.\"]\n    }), \"\\n\", _jsxs(_components.h1, {\n      id: \"sitemap-생성\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#sitemap-생성\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"sitemap 생성\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsx(_components.pre, {\n        className: \"language-shell\",\n        children: _jsx(_components.code, {\n          className: \"language-shell code-highlight\",\n          children: _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token function\",\n              children: \"yarn\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"add\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token parameter variable\",\n              children: \"-D\"\n            }), \" next-sitemap\\n\"]\n          })\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.code, {\n        children: \"next-sitemap.config.js\"\n      })\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsx(_components.pre, {\n        className: \"language-js\",\n        children: _jsxs(_components.code, {\n          className: \"language-js code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsxs(_components.span, {\n              className: \"token doc-comment comment\",\n              children: [\"/** \", _jsx(_components.span, {\n                className: \"token keyword\",\n                children: \"@type\"\n              }), \" \", _jsxs(_components.span, {\n                className: \"token class-name\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'next-sitemap'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"IConfig\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \" */\"]\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"module\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token property-access\",\n              children: \"exports\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token literal-property property\",\n              children: \"siteUrl\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'https://bepyan.github.io'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token literal-property property\",\n              children: \"changefreq\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'daily'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token literal-property property\",\n              children: \"priority\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"0.7\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token literal-property property\",\n              children: \"sitemapSize\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"7000\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token literal-property property\",\n              children: \"generateRobotsTxt\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token boolean\",\n              children: \"true\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token literal-property property\",\n              children: \"exclude\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          })]\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.code, {\n        children: \"package.json\"\n      })\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsx(_components.pre, {\n        className: \"language-json\",\n        children: _jsxs(_components.code, {\n          className: \"language-json code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token property\",\n              children: \"\\\"scripts\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token property\",\n              children: \"\\\"build\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"next build && next-sitemap && next export\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token property\",\n              children: \"\\\"postbuild\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"next-export-optimize-images\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token property\",\n              children: \"\\\"serve\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"npx http-server out\\\"\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), \"\\n\"]\n          })]\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"여기서 주의할 점은 \", _jsx(_components.code, {\n        children: \"next build\"\n      }), \" 실행 후 \", _jsx(_components.code, {\n        children: \"next export\"\n      }), \" 전에 \", _jsx(_components.code, {\n        children: \"next-sitemap\"\n      }), \" 실행 해줘야 한다는 것입니다.\", _jsx(_components.br, {}), \"\\n\", \"그래야 \", _jsx(_components.code, {\n        children: \"public\"\n      }), \"에 생성된 파일들이 최종적으로 \", _jsx(_components.code, {\n        children: \"out\"\n      }), \"에 export됩니다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"참고로 \", _jsx(_components.code, {\n        children: \"postbuild\"\n      }), \" 스크립트는 \", _jsx(_components.code, {\n        children: \"build\"\n      }), \" 실행이후 자동으로 실행됩니다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"기본적으로 아래와 같은 파일들이 생성되는데요.\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.code, {\n        children: \"public/robots.text\"\n      }), \" \", _jsx(_components.code, {\n        children: \"public/sitemap.xml\"\n      }), \" \", _jsx(_components.code, {\n        children: \"public/sitemap-0.xml\"\n      }), _jsx(_components.br, {}), \"\\n\", \"이들이 push되지 않도록 \", _jsx(_components.code, {\n        children: \".gitignore\"\n      }), \"에 추가해주도록 합니다.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"code-highlight\",\n        children: [_jsx(_components.span, {\n          className: \"code-line\",\n          children: \"# production\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"/build\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"/public/robots.txt\\n\"\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"/public/sitemap*.xml\\n\"\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"실행-결과-확인\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#실행-결과-확인\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"실행 결과 확인\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"yarn build\"\n      }), \"를 실행하면 \", _jsx(_components.code, {\n        children: \"out\"\n      }), \" 디랙토리에도 sitemap 관련 파일들이 추가된 것을 확인할 수 있습니다.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/posts/sitemap/221116-000505.png\",\n        alt: \"221116-000505\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"github action에서도 잘 실행된 것을 확인할 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/posts/sitemap/221115-231937.png\",\n        alt: \"221115-231937\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://bepyan.github.io/sitemap-0.xml\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"sitemap-0.xml\"\n      })\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsx(_components.pre, {\n        className: \"language-html\",\n        children: _jsxs(_components.code, {\n          className: \"language-html code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"url\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"loc\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"https://bepyan.github.io\", _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"</\"\n                }), \"loc\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"lastmod\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"2022-11-15T15:18:54.289Z\", _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"</\"\n                }), \"lastmod\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"changefreq\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"daily\", _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"</\"\n                }), \"changefreq\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"priority\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"0.7\", _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"</\"\n                }), \"priority\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"</\"\n                }), \"url\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"\\n\"]\n          })]\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.h1, {\n      id: \"검색엔진-등록\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#검색엔진-등록\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"검색엔진 등록\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"sitemap을 만든다고해서 끝이 나는 것이 아닙니다.\", _jsx(_components.br, {}), \"\\n\", \"검색엔진에 사이트를 등록해줘야 크롤러, 봇이 블로그 글들을 수집하여 검색됩니다.\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"google-search-console\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#google-search-console\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Google Search Console\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Google은 \", _jsx(_components.a, {\n        href: \"https://search.google.com/search-console/welcome?utm_source=about-page\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Google Search Console\"\n      }), \"에 등록하면 됩니다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"URL 접두어에 블로그 도메인 주소를 입력해줍니다.\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.code, {\n        children: \"https://bepyan.github.io/\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/posts/sitemap/221116-011827.png\",\n        alt: \"221116-011827\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"편의상 HTML 태그 방법을 활용하도록 합니다.\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.code, {\n        children: \"_document.tsx\"\n      }), \" 파일에 \", _jsx(_components.code, {\n        children: \"meta\"\n      }), \" 태그를 추가해주면 됩니다.\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsx(_components.pre, {\n        className: \"language-tsx\",\n        children: _jsxs(_components.code, {\n          className: \"language-tsx code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"import\"\n            }), \" \", _jsxs(_components.span, {\n              className: \"token imports\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"{\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token maybe-class-name\",\n                children: \"Head\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \",\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token maybe-class-name\",\n                children: \"Html\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"}\"\n              })]\n            }), \" \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"from\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'next/document'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"export\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"default\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"function\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"MyDocument\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"return\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"Html\"\n                })]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"lang\"\n              }), _jsxs(_components.span, {\n                className: \"token attr-value\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation attr-equals\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                }), \"ko\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                })]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"      \"\n            }), _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"Head\"\n                })]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"        \"\n            }), _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"meta\"]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"name\"\n              }), _jsxs(_components.span, {\n                className: \"token attr-value\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation attr-equals\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                }), \"google-site-verification\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                })]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"content\"\n              }), _jsxs(_components.span, {\n                className: \"token attr-value\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation attr-equals\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                })]\n              }), \" \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"/>\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"        \"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"/* ... */\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"      \"\n            }), _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"</\"\n                }), _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"Head\"\n                })]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"      \"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"/* ... */\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"    \"\n            }), _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"</\"\n                }), _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"Html\"\n                })]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), \"\\n\"]\n          })]\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"배포이후 \", _jsx(_components.code, {\n        children: \"확인\"\n      }), \"을 클릭해 본인 사이트 인증을 합니다.\", _jsx(_components.br, {}), \"\\n\", \"인증이 성공된다면 사이트의 통계를 볼 수 있게 됩니다.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/posts/sitemap/221116-012421.png\",\n        alt: \"221116-012421\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"naver-search-advisor\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#naver-search-advisor\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Naver Search Advisor\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Naver는 \", _jsx(_components.a, {\n        href: \"https://searchadvisor.naver.com/console/board\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"네이버 웹마스터\"\n      }), \"로 위와 똑같이 진행하면 됩니다.\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"사이트 도메인을 등록합니다.\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"meta\"\n        }), \" 태그를 삽입하여 본인 사이트임을 인증합니다.\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"요청 -> 사이트맵 제출 -> sitemap.xml 주소를 입력해줍니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"검증 -> robots.txt -> 잘 수집이 되었는지 확인합니다.\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"설정 -> 수집 주기 설정 -> \", _jsx(_components.code, {\n          children: \"빠르게\"\n        }), \"로 설정해줍니다.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/posts/sitemap/221116-010832.png\",\n        alt: \"221116-010832\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"시간이 지난 후 통계가 쌓이는지 확인해보도록 합시다!\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tableOfContents":[{"slug":"sitemap-생성","text":"sitemap 생성","subSections":[]},{"slug":"production","text":"production","subSections":[]},{"slug":"실행-결과-확인","text":"실행 결과 확인","subSections":[]},{"slug":"검색엔진-등록","text":"검색엔진 등록","subSections":[]},{"slug":"google-search-console","text":"Google Search Console","subSections":[]},{"slug":"naver-search-advisor","text":"Naver Search Advisor","subSections":[]}]},"__N_SSG":true}