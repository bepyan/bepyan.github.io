{"pageProps":{"post":{"title":"Drag Resize 뽀개기","description":"라이브러리 없이 React에서 element 크기를 drag해서 조정하자!!!","icon":"","image":"","tags":["Next.js","React","DOM"],"draft":false,"date":"2022-10-03","content":"\n[이전 포스트](./2-drag-touch-event)에서 연구한 drag 이벤트를 활용하여 Resize 기능을 구현해보자. \n\n## TL;DR\n\n> [**getBoundingClientRect**](https://developer.mozilla.org/ko/docs/Web/API/Element/getBoundingClientRect)를 활용하여 엘리먼트의 크기 정보를 얻는다.\n> Drag 거리에 맞춰 엘리먼트 크기를 조정해준다.\n\n---\n\n## 복습 — Drag 이벤트 등록\n\nDOM 이벤트를 활용하여 마우스의 움직임을 추적한다.\n\n1. 클릭시(`onMouseDown`) `document`에 `mousemove` `mouseup` 이벤트를 등록한다.\n2. element의 클릭 이벤트가 부모로 전파되지 않길 원할 경우 `stopPropagation`을 호출한다.\n3. 클릭된 상태에서 마우스를 움직일시 `mousemove`에 등록 된 함수가 계속 호출된다.\n4. 클릭(`mousedown`) 이벤트 발생시의 마우스 위치를 기준으로,\n   이동(`mousemove`) 이벤트에서 상대적으로 이동한 거리(**deltaX**, **deltaY**)를 계산하고\n   콜벡으로 받은 `onDragChange`에게 전달해준다.\n5. `mouseup` 이벤트에서 `mousemove` 이벤트를 제거한다.\n\n```tsx\nexport default function registMouseDownDrag(\n  onDragChange: (deltaX: number, deltaY: number) => void,\n  stopPropagation?: boolean,\n) {\n  return {\n    onMouseDown: (clickEvent: React.MouseEvent<Element, MouseEvent>) => {\n      // 2️⃣\n      if (stopPropagation) clickEvent.stopPropagation();\n\n      // 3️⃣\n      const mouseMoveHandler = (moveEvent: MouseEvent) => {\n        // 4️⃣\n        const deltaX = moveEvent.screenX - clickEvent.screenX;\n        const deltaY = moveEvent.screenY - clickEvent.screenY;\n        onDragChange(deltaX, deltaY);\n      };\n\n      // 5️⃣\n      const mouseUpHandler = () => {\n        document.removeEventListener('mousemove', mouseMoveHandler);\n      };\n\n      // 1️⃣\n      document.addEventListener('mousemove', mouseMoveHandler);\n      document.addEventListener('mouseup', mouseUpHandler, { once: true });\n    },\n  };\n}\n```\n\n---\n\n## 기본 응용 — Drag로 Resize하기\n\n마우스의 움직임 바탕으로 element의 size를 조정해보자.\n\n1. element의 `config`(위치, 크기) 상태를 정의한다.\n2. element의 `config`을 초기화 한다.\n   덤으로 boundary를 기준으로 중앙정렬을 해주자.\n3. element의 우하단에 resize를 동작시키는 영역을 정의한다. ([tailwind](https://tailwindcss.com/)를 사용했다.)\n4. config 상태를 변경하여 element의 크기를 변화시킨다.\n\n```tsx\n// 1️⃣\nconst [{ x, y, w, h }, setConfig] = useState({\n  x: 0,\n  y: 0,\n  w: 0,\n  h: 0,\n});\n\nconst boundaryRef = useRef<HTMLDivElement>(null);\n// 2️⃣\nuseEffect(() => {\n  const boundary = boundaryRef.current?.getBoundingClientRect();\n\n  if (boundary) {\n    const DEFAULT_W = 240;\n    const DEFAULT_H = 120;\n    setConfig({\n      x: Math.floor(boundary.width / 2 - DEFAULT_W / 2),\n      y: Math.floor(boundary.height / 2 - DEFAULT_H / 2),\n      w: DEFAULT_W,\n      h: DEFAULT_H,\n    });\n  }\n}, []);\n\nreturn (\n  <Boundary ref={boundaryRef}>\n    <div style={{ width: w, height: h, left: x, top: y }} className=\"relative\">\n      <Box />\n      <div\n        // 3️⃣\n        className=\"absolute -bottom-0.5 left-3 right-3 h-2 cursor-s-resize\"\n        {...registMouseDownDrag((deltaX, deltaY) => {\n          // 4️⃣\n          setConfig({\n            x,\n            y,\n            w: w + deltaX,\n            h: h + deltaY,\n          });\n        })}\n      />\n    </div>\n  </Boundary>\n);\n```\n\n![](https://velog.velcdn.com/images/bepyan/post/7e2b0964-cffa-4800-b2b5-7ccdb3b60b4d/image.gif)\n\n---\n\n## 추가 응용 — Boundary 적용\n\nelement가 **움직일 수 있는 범위**를 계산해보자.\n![](https://velog.velcdn.com/images/bepyan/post/8c05b6c0-75e7-419d-9b68-ddc84cf4ff7f/image.png)\n\n좌측 끝 = `BOUNDARY_MARGIN`\n우측 끝 = `boundary.width` - `w` - `BOUNDARY_MARGIN`\n\n<br />\n\n자, 이제 element가 **확장할 수 있는 범위**를 계산해보자.\n![](https://velog.velcdn.com/images/bepyan/post/089b4342-25bf-4e4f-926b-441a987bbfa9/image.png)\n\n최소 width = `MIN_W`\n최대 width = `boundary.width` - `x` - `BOUNDARY_MARGIN`\n\n<br />\n\n그림을 그려보니 생각보다 간단하지 않는가?!\n이제 아래 주요 로직을 따라 코드를 작성해보도록 하자.\n\n1. position drag 이벤트를 등록해준다.\n2. `resize`의 클릭 이벤트가 부모로 전파되지 않도록 `stopPropagation` 해준다.\n3. `resize`되는 범위를 잘 설정해준다.\n\n```tsx\nconst inrange = (v: number, min: number, max: number) => {\n  if (v < min) return min;\n  if (v > max) return max;\n  return v;\n};\n\nconst BOUNDARY_MARGIN = 12;\nconst MIN_W = 80;\nconst MIN_H = 80;\n```\n\n```tsx\n<Boundary ref={boundaryRef}>\n  <div\n    style={{ width: w, height: h, left: x, top: y }}\n    className=\"relative\"\n    // 1️⃣\n    {...registMouseDownDrag((deltaX, deltaY) => {\n      if (!boundaryRef.current) return;\n\n      const boundary = boundaryRef.current.getBoundingClientRect();\n      setConfig({\n        x: inrange(x + deltaX, BOUNDARY_MARGIN, boundary.width - w - BOUNDARY_MARGIN),\n        y: inrange(y + deltaY, BOUNDARY_MARGIN, boundary.height - h - BOUNDARY_MARGIN),\n        w,\n        h,\n      });\n    }\n  >\n    <Box />\n    <div\n      className=\"absolute -bottom-0.5 left-3 right-3 h-2 cursor-s-resize\"\n\t  style={{ backgroundColor: '#12121250' }}\n      {...registMouseDownDrag((deltaX, deltaY) => {\n        if (!boundaryRef.current) return;\n\n        // 3️⃣\n        const boundary = boundaryRef.current.getBoundingClientRect();\n        setConfig({\n          x,\n          y,\n          w: inrange(w + deltaX, MIN_W, boundary.width - x - BOUNDARY_MARGIN),\n          h: inrange(h + deltaY, MIN_H, boundary.height - y - BOUNDARY_MARGIN),\n        });\n      // 2️⃣\n      }, true)}\n      />\n  </div>\n</Boundary>\n```\n\n![](https://velog.velcdn.com/images/bepyan/post/6c7c265f-5902-4602-8716-f4608794d847/image.gif)\n\n오호, 이 정도면 좀 쓸만할 것 같다 💪🏾\n\n---\n\n## 심화 응용 — 여러 방향의 Resize\n\n우리가 많이 접한 편집툴은 좌상단, 우상단, 좌하단, 우하단 4가지 방향으로 Resize할 수 있다.\n다른 방향으로 진행하기 위해서 무엇을 고려해야하는지 살펴보자.\n\n**좌상단**인 경우, 우하단 동작 방식과 좀 다르다.\n`x`가 줄어드는 만큼 `w`가 증가해야지 위치가 고정된 상태에서 element 크기가 달라진다.\n그렇다면 이들의 범위를 계산해보도록 하자.\n\n![](https://velog.velcdn.com/images/bepyan/post/5420046d-0f19-4920-a573-21ddf35edf6b/image.png)\n\n`maxX` = `x` + `w` - `MIN_W`\n`maxWidth` = `x` + `w` - `BOUNDARY_MARGIN`\n\n<br />\n\n이를 코드에 적용하면 아래와 같다.\n여기서 `deltaX`가 줄어 들 때 `width`가 증가한다는 점을 놓치지 말자.\n`width = w - deltaX`\n\n```tsx\n{/* 좌상단 */}\n<div\n  className=\"absolute -top-1 -left-1 h-4 w-4 cursor-nw-resize\"\n  style={{ '#12121250' }}\n  {...registMouseDownDrag((deltaX, deltaY) => {\n    setConfig({\n      x: inrange(x + deltaX, BOUNDARY_MARGIN, x + w - MIN_W),\n      y: inrange(y + deltaY, BOUNDARY_MARGIN, y + h - MIN_H),\n      w: inrange(w - deltaX, MIN_W, x + w - BOUNDARY_MARGIN),\n      h: inrange(h - deltaY, MIN_H, y + h - BOUNDARY_MARGIN),\n    });\n  }, true)}\n/>\n```\n\n다른 방향에서의 원리도 이와 비슷하다.\n적절히 응용해보도록 하자.\n\n```tsx\n{\n  /* 우상단 */\n}\n<div\n  className=\"absolute -top-1 -right-1 h-4 w-4 cursor-ne-resize\"\n  style={{ backgroundColor: '#12121250' }}\n  {...registMouseDownDrag((deltaX, deltaY) => {\n    if (!boundaryRef.current) return;\n\n    const boundary = boundaryRef.current.getBoundingClientRect();\n\n    setConfig({\n      x,\n      y: inrange(y + deltaY, BOUNDARY_MARGIN, y + h - MIN_H),\n      w: inrange(w + deltaX, MIN_W, boundary.width - x - BOUNDARY_MARGIN),\n      h: inrange(h - deltaY, MIN_H, y + h - BOUNDARY_MARGIN),\n    });\n  }, true)}\n/>;\n\n{\n  /* 좌하단 */\n}\n<div\n  className=\"absolute -bottom-1 -left-1 h-4 w-4 cursor-ne-resize\"\n  style={{ backgroundColor: '#12121250' }}\n  {...registMouseDownDrag((deltaX, deltaY) => {\n    if (!boundaryRef.current) return;\n\n    const boundary = boundaryRef.current.getBoundingClientRect();\n\n    setConfig({\n      x: inrange(x + deltaX, BOUNDARY_MARGIN, x + w - MIN_W),\n      y,\n      w: inrange(w - deltaX, MIN_W, x + w - BOUNDARY_MARGIN),\n      h: inrange(h + deltaY, MIN_H, boundary.height - y - BOUNDARY_MARGIN),\n    });\n  }, true)}\n/>;\n```\n\n![](https://velog.velcdn.com/images/bepyan/post/85f36f99-622d-432a-85ff-7c0443d80dfa/image.gif)\n\n상하좌우 방향은 그저 하드코딩을 이어가면 된다.\n그럼 다음 기능 개발로 넘어가보자 🏄🏻‍♂️\n\n---\n\n실제 동작은 아래 링크에서 볼 수 있습니다.\nhttps://dnd-playground.vercel.app/resize\n\nstyle 정보, 전체 코드는 아래 깃허브에서 살펴보면 됩니다.\nhttps://github.com/bepyan/dnd-playground/blob/main/src/components/DragSizeExample.tsx\n","slug":"/blog/dnd-master/3-drag-resize","readingMinutes":8,"wordCount":904,"serizeSlug":"dnd-master"},"postFooterProps":{"prevPost":{"title":"Drag Touch 뽀개기","description":"라이브러리 없이 React에서 element를 터치로 움직이게 하자!!!","icon":"","image":"","tags":["Next.js","React","DOM"],"draft":false,"date":"2022-10-02","content":"\n[이전 포스트](./1-drag-event)에서 만든 유틸함수에 큰 문제점이 있다.\n바로 **모바일 기기**에서 동작하지 않다는 것이다.\n\n<p align=\"center\">\n  <img\n    src=\"https://media.tenor.com/e5eV8VVfUXQAAAAM/throw-phone-sue%C3%B1itosgifs.gif\"\n    width=\"300px\"\n  />\n</p>\n\n~~힘들게 개발한 것이 모바일에서 동작하지 않다니 ㅠ퓨ㅜㅠ~~\n\n---\n\n## TL;DR\n\n> 모바일 기기에서는 `MouseEvent` 대신 `TouchEvent`를 사용한다.\n> `window.matchMedia('(hover: none) and (pointer: coarse)').matches`를 통해 모바일 기기인지 여부를 파악한다.\n> 기기에 따라 `mousedown` 혹은 `touchdown` 이벤트를 등록해준다.\n\n---\n\n## 사전 지식 — Touch Event\n\n모바일 기기에서는 MouseEvent 대신 [**TouchEvent**](https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent)가 발생된다.\n따라서 MouseEvent로 등록되었던 이벤트가 실행되지 않았던 것이다.\n다행히 TouchEvent에서도 우리가 원하는 동작을 바로 찾을 수 있다.\n\n`mousedown` — `touchdown`\n`mousemove` — `touchmove`\n`mouseup` — `touchend`\n\nTouchEvent의 속성 중\n`touches` — 모든 접촉점의 터치 리스트\n`targetTouches` — 현재 이벤트 타겟에서 시작된 터치 리스트\n`changedTouches` — 이전 이벤트에 할당된 모든 접촉점의 터치 리스트\n\n터치 스크린 특성상 여러 터치 이벤트가 동시 실행될 수 있어서 터치 리스트를 반환하는 것 같다.\n일반적으로 첫 Touch 이벤트를 사용하면 될 것이다.\n\n![](https://velog.velcdn.com/images/bepyan/post/8bdbb9ea-c3c1-4182-8e51-979db4cfe9d9/image.png)\n\n정확히 차이에 대해 와닿진 않지만\n움직일 때는 `touches[0]`, 손을 땠을 때는 `changedTouches[0]`를 사용하도록 하자.\n\n---\n\n## 기본 원리 — touch 이벤트 등록\n\n이전 mouse 등록 절차와 같으니 자세한 설명을 생략하겠다.\n\n```tsx\n<Boundary\n  onTouchStart={(touchEvent) => {\n    const touchMoveHandler = (moveEvent: TouchEvent) => {\n      setPosition({\n        x: moveEvent.touches[0].pageX - touchEvent.touches[0].pageX,\n        y: moveEvent.touches[0].pageY - touchEvent.touches[0].pageY,\n      });\n    };\n    const touchEndHandler = () => {\n      document.removeEventListener('touchmove', touchMoveHandler);\n    };\n\n    document.addEventListener('touchmove', touchMoveHandler);\n    document.addEventListener('touchend', touchEndHandler, { once: true });\n  }}\n/>\n```\n\n`onMouseStart`, `onTouchStart` 둘다 등록하긴 너무나 귀찮다...\nMouseEvent, TouchEvent을 동시 등록할 수 있는 유틸을 만들어 보자.\n그럼 브라우저 환경에 따라 MouseEvent를 등록할지 TouchEvent를 등록할지 판별할 수 있어야 한다.\n\n---\n\n## 심화 적용 — pc와 mobile를 구분\n\n일반적으로 디바이스 크기로 pc와 mobile을 구분하지만\npc에서 작은 화면으로 볼 수도 있고 13인치 iPad를 사용할 수도 있다.\n\n이를 해결해주는 아주 잘 정리된 [블로그](https://paperblock.tistory.com/164)가 있다.\nhover, pointer 쿼리를 이용하면 모바일 기기를 구분할 수 있다.\n\n![](https://velog.velcdn.com/images/bepyan/post/09db8960-6c92-41df-bd83-397df86f5686/image.png)\n\n출처 https://paperblock.tistory.com/164\n\n<br />\n\n그렇다면 이 CSS Media Queries를 어떻게 사용할 수 있을까?\n\n바로 window api, [**matchMedia**](https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia)를 사용하는 것이다.\n아래 코드로 **“현재 화면이 미디어쿼리의 범위에 들어가는지”** 확인할 수 있다.\n\n```tsx\nwindow.matchMedia('(max-width: 600px)').matches; // boolean\n```\n\n여러 쿼리를 같이 확인하고 싶으면 `and` 를 붙이면 된다.\n\n```tsx\nwindow.matchMedia('(hover: none) and (pointer: coarse)').matches;\n```\n\nNextJS에서는 기본적으로 SSR하기 때문에 window가 `undefined`할 수 있다.\n따라서 아래와 같이 코드를 작성해주면 **사용자의 화면이 터치 스크린인지** 확인할 수 있다.\n\n```jsx\nexport const isTouchScreen =\n  typeof window !== 'undefined' && window.matchMedia('(hover: none) and (pointer: coarse)').matches;\n```\n\n---\n\n## 심화 응용 — 최종 코드\n\n`utils/registDragEvent.ts`\n아직 부족한 부분이 많지만 상황에 맞춰 잘 수정하면 될 것이다.\n\n```tsx\nconst isTouchScreen =\n  typeof window !== 'undefined' && window.matchMedia('(hover: none) and (pointer: coarse)').matches;\n\nexport default function registDragEvent({\n  onDragChange,\n  onDragEnd,\n  stopPropagation,\n}: {\n  onDragChange?: (deltaX: number, deltaY: number) => void;\n  onDragEnd?: (deltaX: number, deltaY: number) => void;\n  stopPropagation?: boolean;\n}) {\n  if (isTouchScreen) {\n    return {\n      onTouchStart: (touchEvent: React.TouchEvent<HTMLDivElement>) => {\n        if (stopPropagation) touchEvent.stopPropagation();\n\n        const touchMoveHandler = (moveEvent: TouchEvent) => {\n          if (moveEvent.cancelable) moveEvent.preventDefault();\n\n          const deltaX = moveEvent.touches[0].pageX - touchEvent.touches[0].pageX;\n          const deltaY = moveEvent.touches[0].pageY - touchEvent.touches[0].pageY;\n          onDragChange?.(deltaX, deltaY);\n        };\n\n        const touchEndHandler = (moveEvent: TouchEvent) => {\n          const deltaX = moveEvent.changedTouches[0].pageX - touchEvent.changedTouches[0].pageX;\n          const deltaY = moveEvent.changedTouches[0].pageY - touchEvent.changedTouches[0].pageY;\n          onDragEnd?.(deltaX, deltaY);\n          document.removeEventListener('touchmove', touchMoveHandler);\n        };\n\n        document.addEventListener('touchmove', touchMoveHandler, { passive: false });\n        document.addEventListener('touchend', touchEndHandler, { once: true });\n      },\n    };\n  }\n\n  return {\n    onMouseDown: (clickEvent: React.MouseEvent<Element, MouseEvent>) => {\n      if (stopPropagation) clickEvent.stopPropagation();\n\n      const mouseMoveHandler = (moveEvent: MouseEvent) => {\n        const deltaX = moveEvent.pageX - clickEvent.pageX;\n        const deltaY = moveEvent.pageY - clickEvent.pageY;\n        onDragChange?.(deltaX, deltaY);\n      };\n\n      const mouseUpHandler = (moveEvent: MouseEvent) => {\n        const deltaX = moveEvent.pageX - clickEvent.pageX;\n        const deltaY = moveEvent.pageY - clickEvent.pageY;\n        onDragEnd?.(deltaX, deltaY);\n        document.removeEventListener('mousemove', mouseMoveHandler);\n      };\n\n      document.addEventListener('mousemove', mouseMoveHandler);\n      document.addEventListener('mouseup', mouseUpHandler, { once: true });\n    },\n  };\n}\n```\n\n<br />\n\n<p align=\"center\">\n  <img\n    src=\"https://velog.velcdn.com/images/bepyan/post/cefaa0e8-c43c-4013-8005-00530b63e5bd/image.png\"\n    width=\"300px\"\n  />\n</p>\n\n---\n\n22.10.10 추가\n\n모바일 기기에서 touch를 통해서 scroll를 내리게 된다.\n따라서 drag하면서 scroll이 되는 버그가 발생하게 된다...\n\n이를 해결해주기 위해\n\n```ts\nconst touchMoveHandler = (moveEvent: TouchEvent) => {\n  if (moveEvent.cancelable) moveEvent.preventDefault();\n};\n\ndocument.addEventListener('touchmove', touchMoveHandler, { passive: false });\n```\n\n---\n\n실제 동작은 아래 링크에서 볼 수 있습니다.\nhttps://dnd-playground.vercel.app/\n\nstyle 정보, 전체 코드는 아래 깃허브에서 살펴보면 됩니다.\nhttps://github.com/bepyan/dnd-playground/\n","slug":"/blog/dnd-master/2-drag-touch-event","readingMinutes":6,"wordCount":645,"serizeSlug":"dnd-master"},"nextPost":{"title":"Drag Carousel 뽀개기","description":"라이브러리 없이 React에서 터치로 캐러셀을 만들어 보자!!!","icon":"","image":"","tags":["Next.js","React","DOM"],"draft":false,"date":"2022-10-08","content":"\n## TL;DR\n\n> 캐러셀을 **일정 거리이상** drag시키면 화면을 넘긴다.\n\n---\n\n## 기본 원리 — Carousel 동작\n\n여러 방식으로 Carousel를 구현할 수 있지만 아래와 같은 형태로 간편하게 마크업을 짜자.\ncss는 편의상 [**tailwindcss**](https://tailwindcss.com/)를 같이 사용했다.\n\n```tsx\nconst imageList = [...];\n\nconst SLIDER_WIDTH = 400;\nconst SLIDER_HEIGHT = 400;\n\nexport default function CarouselExample() {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [transX, setTransX] = useState(0);\n\n  return (\n    <>\n      {/* Viewer */}\n      <div\n        className=\"overflow-hidden\"\n        style={{\n          width: SLIDER_WIDTH,\n          height: SLIDER_HEIGHT,\n        }}\n      >\n        {/* Slider */}\n        <div\n          className=\"flex\"\n          style={{\n            transform: `translateX(${-currentIndex * SLIDER_WIDTH + transX}px)`,\n          }}\n        >\n          {/* Slide */}\n          {imageList.map((url, i) => (\n            <div key={i} className=\"flex-shrink-0\">\n              <img src={url} alt=\"img\" width={SLIDER_WIDTH} draggable={false} />\n            </div>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n}\n```\n\n마크업을 그림으로 정리하자면 아래와 같다\n\n![](https://velog.velcdn.com/images/bepyan/post/9c60a2a9-a65b-444b-bd66-0504dcf3fc14/image.png)\n\n`Viewer`는 **액자**와 같은 역할을 수행하고\n실질적으로 `Slider`가 좌우로 `transform`하여 캐러셀 움직임을 구현한다.\n\n따라서 사전에 `Slide`의 크기를 알고 있어야 한다.\n동적으로 크기를 맞출려면 `ref`로 `element.getBoundingClientRect`을 호출하면 된다.\n\n---\n\n## 기본 응용 — Carousel Drag\n\n캐러셀을 **일정 거리이상 drag**하면 화면을 넘긴다.\n~~참 쉽죠잉?~~\n\n![](https://velog.velcdn.com/images/bepyan/post/d73cc634-2819-4264-ae72-704a0252f24d/image.gif)\n\n1. [이전 글](https://velog.io/@bepyan/Drag-Touch-뽀개기#심화-응용--최종-코드)을 참고하여 드래그 이벤트를 등록한다.\n2. drag된 거리에 만큼 `transX`를 이동시킨다.\n   한번의 drag로 한 슬라이드 이상으로 이동할 수 없도록 하자.\n3. 손을 땠을 때 일정 거리이상 움직이면 `currentIndex`를 변경해준다.\n4. drag된 `transX`를 초기화 해준다.\n\n```tsx\nconst inrange = (v: number, min: number, max: number) => {\n  if (v < min) return min;\n  if (v > max) return max;\n  return v;\n};\n```\n\n```jsx\n<div\n  className=\"flex\"\n  style={{\n    transform: `translateX(${-currentIndex * SLIDER_WIDTH + transX}px)`,\n    // 🏄🏻‍♂️  drag를 초기화할 때 부드럽게 이동시켜 주자. 꼼수입니다...\n    transition: `transform ${transX ? 0 : 300}ms ease-in-out 0s`,\n  }}\n  // 1️⃣\n  {...registDragEvent({\n    onDragChange: (deltaX) => {\n      // 2️⃣\n      setTransX(inrange(deltaX, -SLIDER_WIDTH, SLIDER_WIDTH));\n    },\n    onDragEnd: (deltaX) => {\n      const maxIndex = imageList.length - 1;\n\n      // 3️⃣\n      if (deltaX < -100) setCurrentIndex(inrange(currentIndex + 1, 0, maxIndex));\n      if (deltaX > 100) setCurrentIndex(inrange(currentIndex - 1, 0, maxIndex));\n\n      // 4️⃣\n      setTransX(0);\n    },\n  })}\n>\n  //...\n</div>\n```\n\n---\n\n## 심화 응용 — Infinite Carousel\n\n단골로 사용되는 기능 중에 하나이다.\n무한으로 돌아가는 트릭은 생각보다 간단하다.\n\n> 첫 슬라이드 좌측으로 이동시 마지막 슬라이드로,\n> 마지막 슬라이드 우측으로 이동시 첫 슬라이드로 이동하면 캐러셀이 무한으로 돌아갈 것이다.\n\n자, 구현 해보자!\n\n기존 `[0, 1, 2, 3]` 번 슬라이드를 `[3, 0, 1, 2, 3, 0]`로 만든다.\n그리고 `index`를 `1`부터 시작하는 것을 잊지 말자.\n\n```tsx\nconst slideList = [imageList.at(-1), ...imageList, imageList.at(0)];\nconst [currentIndex, setCurrentIndex] = useState(1);\n```\n\n<br />\n\n자연스럽게 **무한루프** 되기 위해선 `currentIndex`가 아래와 같이 동작해야 한다.\n\n```\n1 → 0  (에니메니션 없이) → 4\n```\n\n`dragEnd`시 `currentIndex`를 변동하게 될 것이다.\n[**onTransitionEnd**](https://developer.mozilla.org/en-US/docs/Web/API/Element/transitionend_event)을 활용하여 `transition`이 종료될시 `animate`를 끄고 `currentIndex`를 변동해준다.\n\n```tsx\nconst [animate, setAnimate] = useState(false);\n\n<div\n  style={{\n    transform: `translateX(${-currentIndex * SLIDER_WIDTH + transX}px)`,\n    transition: `transform ${animate ? 300 : 0}ms ease-in-out 0s`,\n  }}\n  {...({\n  \tonDragEnd: (deltaX) => {\n      //...\n\n      setAnimate(true);\n      setTransX(0);\n    }\n  })}\n  onTransitionEnd={() => {\n\tsetAnimate(false);\n\n    if (currentIndex === 0) {\n      setCurrentIndex(slideList.length - 2);\n    } else if (currentIndex === slideList.length - 1) {\n      setCurrentIndex(1);\n    }\n  }}\n>\n  {...}\n</div>\n```\n\n![](https://velog.velcdn.com/images/bepyan/post/7c638d6a-838a-4f70-9c1d-4517e9e0770b/image.gif)\n\n---\n\n## 최종 코드\n\n```tsx\nconst imageList = [\n  'https://blog.kakaocdn.net/dn/dpxiAT/btqUBv6Fvpn/E8xUMncq7AVuDeOim0LrMk/img.jpg',\n  'https://blog.kakaocdn.net/dn/BGT7X/btqUzvTqi5h/flp39GdJH0GU6mo7cTbbhk/img.jpg',\n  'https://blog.kakaocdn.net/dn/bWnmfv/btqUBwqZvwA/3CiXGt3SR0TXoOveRJxV91/img.jpg',\n  'https://blog.kakaocdn.net/dn/XsLCO/btqUL8PQLwp/NZWCU2jAYKkKSXwcohBKTK/img.jpg',\n  'https://blog.kakaocdn.net/dn/bG3iVL/btqUvCZPaRL/ofIjkNWJP1mj2bOG9fie51/img.jpg',\n];\n\nconst SLIDER_WIDTH = 400;\nconst SLIDER_HEIGHT = 400;\n\nexport default function CarouselInfiniteExample() {\n  const slideList = [imageList.at(-1), ...imageList, imageList.at(0)];\n\n  const [currentIndex, setCurrentIndex] = useState(1);\n  const [transX, setTransX] = useState(0);\n  const [animate, setAnimate] = useState(false);\n\n  return (\n    <>\n      <div\n        className=\"overflow-hidden\"\n        style={{\n          width: SLIDER_WIDTH,\n          height: SLIDER_HEIGHT,\n        }}\n      >\n        <div\n          className=\"flex\"\n          style={{\n            transform: `translateX(${-currentIndex * SLIDER_WIDTH + transX}px)`,\n            transition: `transform ${animate ? 300 : 0}ms ease-in-out 0s`,\n          }}\n          {...registDragEvent({\n            onDragChange: (deltaX) => {\n              setTransX(inrange(deltaX, -SLIDER_WIDTH + 10, SLIDER_WIDTH - 10));\n            },\n            onDragEnd: (deltaX) => {\n              const maxIndex = slideList.length - 1;\n\n              if (deltaX < -100) setCurrentIndex(inrange(currentIndex + 1, 0, maxIndex));\n              if (deltaX > 100) setCurrentIndex(inrange(currentIndex - 1, 0, maxIndex));\n\n              setAnimate(true);\n              setTransX(0);\n            },\n          })}\n          onTransitionEnd={() => {\n            setAnimate(false);\n\n            if (currentIndex === 0) {\n              setCurrentIndex(slideList.length - 2);\n            } else if (currentIndex === slideList.length - 1) {\n              setCurrentIndex(1);\n            }\n          }}\n        >\n          {slideList.map((url, i) => (\n            <div key={i} className=\"flex-shrink-0\">\n              <img src={url} alt=\"img\" width={SLIDER_WIDTH} draggable={false} />\n            </div>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n}\n```\n\n---\n\n실제 동작은 아래 링크에서 볼 수 있습니다.\nhttps://dnd-playground.vercel.app/carousel\n\nstyle 정보, 전체 코드는 아래 깃허브에서 살펴보면 됩니다.\nhttps://github.com/bepyan/dnd-playground/\n","slug":"/blog/dnd-master/4-drag-carousel","readingMinutes":6,"wordCount":667,"serizeSlug":"dnd-master"}},"serize":null,"slug":"/blog/dnd-master/3-drag-resize","compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    span: \"span\",\n    blockquote: \"blockquote\",\n    strong: \"strong\",\n    br: \"br\",\n    hr: \"hr\",\n    ol: \"ol\",\n    li: \"li\",\n    code: \"code\",\n    div: \"div\",\n    pre: \"pre\",\n    button: \"button\",\n    svg: \"svg\",\n    path: \"path\",\n    img: \"img\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"./2-drag-touch-event\",\n        children: \"이전 포스트\"\n      }), \"에서 연구한 drag 이벤트를 활용하여 Resize 기능을 구현해보자.\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"tldr\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#tldr\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"TL;DR\"]\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsxs(_components.p, {\n        children: [_jsx(_components.a, {\n          href: \"https://developer.mozilla.org/ko/docs/Web/API/Element/getBoundingClientRect\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: _jsx(_components.strong, {\n            children: \"getBoundingClientRect\"\n          })\n        }), \"를 활용하여 엘리먼트의 크기 정보를 얻는다.\", _jsx(_components.br, {}), \"\\n\", \"Drag 거리에 맞춰 엘리먼트 크기를 조정해준다.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h2, {\n      id: \"복습--drag-이벤트-등록\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#복습--drag-이벤트-등록\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"복습 — Drag 이벤트 등록\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"DOM 이벤트를 활용하여 마우스의 움직임을 추적한다.\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"클릭시(\", _jsx(_components.code, {\n          children: \"onMouseDown\"\n        }), \") \", _jsx(_components.code, {\n          children: \"document\"\n        }), \"에 \", _jsx(_components.code, {\n          children: \"mousemove\"\n        }), \" \", _jsx(_components.code, {\n          children: \"mouseup\"\n        }), \" 이벤트를 등록한다.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"element의 클릭 이벤트가 부모로 전파되지 않길 원할 경우 \", _jsx(_components.code, {\n          children: \"stopPropagation\"\n        }), \"을 호출한다.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"클릭된 상태에서 마우스를 움직일시 \", _jsx(_components.code, {\n          children: \"mousemove\"\n        }), \"에 등록 된 함수가 계속 호출된다.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"클릭(\", _jsx(_components.code, {\n          children: \"mousedown\"\n        }), \") 이벤트 발생시의 마우스 위치를 기준으로,\", _jsx(_components.br, {}), \"\\n\", \"이동(\", _jsx(_components.code, {\n          children: \"mousemove\"\n        }), \") 이벤트에서 상대적으로 이동한 거리(\", _jsx(_components.strong, {\n          children: \"deltaX\"\n        }), \", \", _jsx(_components.strong, {\n          children: \"deltaY\"\n        }), \")를 계산하고\", _jsx(_components.br, {}), \"\\n\", \"콜벡으로 받은 \", _jsx(_components.code, {\n          children: \"onDragChange\"\n        }), \"에게 전달해준다.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"mouseup\"\n        }), \" 이벤트에서 \", _jsx(_components.code, {\n          children: \"mousemove\"\n        }), \" 이벤트를 제거한다.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsx(_components.pre, {\n        className: \"language-tsx\",\n        children: _jsxs(_components.code, {\n          className: \"language-tsx code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"export\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"default\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"function\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"registMouseDownDrag\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token function-variable function\",\n              children: \"onDragChange\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"deltaX\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token builtin\",\n              children: \"number\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" deltaY\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token builtin\",\n              children: \"number\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token arrow operator\",\n              children: \"=>\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"void\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  stopPropagation\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"?\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token builtin\",\n              children: \"boolean\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"return\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token function-variable function\",\n              children: \"onMouseDown\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"clickEvent\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token maybe-class-name\",\n              children: \"React\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token property-access\",\n              children: _jsx(_components.span, {\n                className: \"token maybe-class-name\",\n                children: \"MouseEvent\"\n              })\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"<\"\n            }), _jsx(_components.span, {\n              className: \"token maybe-class-name\",\n              children: \"Element\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token maybe-class-name\",\n              children: \"MouseEvent\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \">\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token arrow operator\",\n              children: \"=>\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"      \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"// 2️⃣\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"      \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"if\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"stopPropagation\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" clickEvent\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"stopPropagation\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"      \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"// 3️⃣\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"      \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function-variable function\",\n              children: \"mouseMoveHandler\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"moveEvent\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token maybe-class-name\",\n              children: \"MouseEvent\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token arrow operator\",\n              children: \"=>\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"        \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"// 4️⃣\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"        \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" deltaX \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" moveEvent\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token property-access\",\n              children: \"screenX\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"-\"\n            }), \" clickEvent\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token property-access\",\n              children: \"screenX\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"        \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" deltaY \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" moveEvent\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token property-access\",\n              children: \"screenY\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"-\"\n            }), \" clickEvent\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token property-access\",\n              children: \"screenY\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"        \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"onDragChange\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"deltaX\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" deltaY\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"      \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"      \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"// 5️⃣\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"      \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function-variable function\",\n              children: \"mouseUpHandler\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token arrow operator\",\n              children: \"=>\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"        \", _jsx(_components.span, {\n              className: \"token dom variable\",\n              children: \"document\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"removeEventListener\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'mousemove'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" mouseMoveHandler\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"      \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"      \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"// 1️⃣\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"      \", _jsx(_components.span, {\n              className: \"token dom variable\",\n              children: \"document\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"addEventListener\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'mousemove'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" mouseMoveHandler\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"      \", _jsx(_components.span, {\n              className: \"token dom variable\",\n              children: \"document\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"addEventListener\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'mouseup'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" mouseUpHandler\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \" once\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token boolean\",\n              children: \"true\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), \"\\n\"]\n          })]\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h2, {\n      id: \"기본-응용--drag로-resize하기\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#기본-응용--drag로-resize하기\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"기본 응용 — Drag로 Resize하기\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"마우스의 움직임 바탕으로 element의 size를 조정해보자.\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"element의 \", _jsx(_components.code, {\n          children: \"config\"\n        }), \"(위치, 크기) 상태를 정의한다.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"element의 \", _jsx(_components.code, {\n          children: \"config\"\n        }), \"을 초기화 한다.\", _jsx(_components.br, {}), \"\\n\", \"덤으로 boundary를 기준으로 중앙정렬을 해주자.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"element의 우하단에 resize를 동작시키는 영역을 정의한다. (\", _jsx(_components.a, {\n          href: \"https://tailwindcss.com/\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"tailwind\"\n        }), \"를 사용했다.)\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"config 상태를 변경하여 element의 크기를 변화시킨다.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsx(_components.pre, {\n        className: \"language-tsx\",\n        children: _jsxs(_components.code, {\n          className: \"language-tsx code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token comment\",\n              children: \"// 1️⃣\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \" x\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" y\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" w\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" h \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" setConfig\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"useState\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  x\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"0\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  y\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"0\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  w\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"0\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  h\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"0\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" boundaryRef \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsxs(_components.span, {\n              className: \"token generic-function\",\n              children: [_jsx(_components.span, {\n                className: \"token function\",\n                children: \"useRef\"\n              }), _jsxs(_components.span, {\n                className: \"token generic class-name\",\n                children: [_jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"<\"\n                }), \"HTMLDivElement\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \">\"\n                })]\n              })]\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"null\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token comment\",\n              children: \"// 2️⃣\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token function\",\n              children: \"useEffect\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token arrow operator\",\n              children: \"=>\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" boundary \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" boundaryRef\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token property-access\",\n              children: \"current\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"?.\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"getBoundingClientRect\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"if\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"boundary\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token constant\",\n              children: \"DEFAULT_W\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"240\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token constant\",\n              children: \"DEFAULT_H\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"120\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"setConfig\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"      x\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token known-class-name class-name\",\n              children: \"Math\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"floor\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"boundary\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token property-access\",\n              children: \"width\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"/\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"2\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"-\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token constant\",\n              children: \"DEFAULT_W\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"/\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"2\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"      y\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token known-class-name class-name\",\n              children: \"Math\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"floor\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"boundary\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token property-access\",\n              children: \"height\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"/\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"2\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"-\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token constant\",\n              children: \"DEFAULT_H\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"/\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"2\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"      w\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token constant\",\n              children: \"DEFAULT_W\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"      h\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token constant\",\n              children: \"DEFAULT_H\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"[\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"]\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"return\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"Boundary\"\n                })]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"ref\"\n              }), _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [_jsx(_components.span, {\n                  className: \"token script-punctuation punctuation\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"boundaryRef\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"    \"\n            }), _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"div\"]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"style\"\n              }), _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [_jsx(_components.span, {\n                  className: \"token script-punctuation punctuation\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" width\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" w\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" height\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" h\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" left\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" x\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" top\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" y \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"className\"\n              }), _jsxs(_components.span, {\n                className: \"token attr-value\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation attr-equals\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                }), \"relative\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                })]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"      \"\n            }), _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"Box\"\n                })]\n              }), \" \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"/>\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"      \"\n            }), _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"div\"]\n              }), \"\\n\"]\n            })]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"        \", _jsx(_components.span, {\n                className: \"token comment\",\n                children: \"// 3️⃣\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"        \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"className\"\n              }), _jsxs(_components.span, {\n                className: \"token attr-value\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation attr-equals\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                }), \"absolute -bottom-0.5 left-3 right-3 h-2 cursor-s-resize\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                })]\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"        \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"{...registMouseDownDrag((deltaX,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"deltaY)\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"=\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"{\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"          \", _jsx(_components.span, {\n                className: \"token comment\",\n                children: \"// 4️⃣\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"          \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"setConfig({\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"            \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"x,\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"            \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"y,\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"            \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: _jsx(_components.span, {\n                  className: \"token namespace\",\n                  children: \"w:\"\n                })\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"w\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"+\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"deltaX,\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"            \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: _jsx(_components.span, {\n                  className: \"token namespace\",\n                  children: \"h:\"\n                })\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"h\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"+\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"deltaY,\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"          \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"});\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"        \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"})}\"\n              }), \"\\n\"]\n            })\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"      \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"/>\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"    \"\n            }), _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"</\"\n                }), \"div\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"  \"\n            }), _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"</\"\n                }), _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"Boundary\"\n                })]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          })]\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://velog.velcdn.com/images/bepyan/post/7e2b0964-cffa-4800-b2b5-7ccdb3b60b4d/image.gif\",\n        alt: \"\"\n      })\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h2, {\n      id: \"추가-응용--boundary-적용\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#추가-응용--boundary-적용\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"추가 응용 — Boundary 적용\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"element가 \", _jsx(_components.strong, {\n        children: \"움직일 수 있는 범위\"\n      }), \"를 계산해보자.\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.img, {\n        src: \"https://velog.velcdn.com/images/bepyan/post/8c05b6c0-75e7-419d-9b68-ddc84cf4ff7f/image.png\",\n        alt: \"\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"좌측 끝 = \", _jsx(_components.code, {\n        children: \"BOUNDARY_MARGIN\"\n      }), _jsx(_components.br, {}), \"\\n\", \"우측 끝 = \", _jsx(_components.code, {\n        children: \"boundary.width\"\n      }), \" - \", _jsx(_components.code, {\n        children: \"w\"\n      }), \" - \", _jsx(_components.code, {\n        children: \"BOUNDARY_MARGIN\"\n      })]\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"자, 이제 element가 \", _jsx(_components.strong, {\n        children: \"확장할 수 있는 범위\"\n      }), \"를 계산해보자.\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.img, {\n        src: \"https://velog.velcdn.com/images/bepyan/post/089b4342-25bf-4e4f-926b-441a987bbfa9/image.png\",\n        alt: \"\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"최소 width = \", _jsx(_components.code, {\n        children: \"MIN_W\"\n      }), _jsx(_components.br, {}), \"\\n\", \"최대 width = \", _jsx(_components.code, {\n        children: \"boundary.width\"\n      }), \" - \", _jsx(_components.code, {\n        children: \"x\"\n      }), \" - \", _jsx(_components.code, {\n        children: \"BOUNDARY_MARGIN\"\n      })]\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"그림을 그려보니 생각보다 간단하지 않는가?!\", _jsx(_components.br, {}), \"\\n\", \"이제 아래 주요 로직을 따라 코드를 작성해보도록 하자.\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"position drag 이벤트를 등록해준다.\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"resize\"\n        }), \"의 클릭 이벤트가 부모로 전파되지 않도록 \", _jsx(_components.code, {\n          children: \"stopPropagation\"\n        }), \" 해준다.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"resize\"\n        }), \"되는 범위를 잘 설정해준다.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsx(_components.pre, {\n        className: \"language-tsx\",\n        children: _jsxs(_components.code, {\n          className: \"language-tsx code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function-variable function\",\n              children: \"inrange\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"v\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token builtin\",\n              children: \"number\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" min\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token builtin\",\n              children: \"number\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" max\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token builtin\",\n              children: \"number\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token arrow operator\",\n              children: \"=>\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"if\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"v \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"<\"\n            }), \" min\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"return\"\n            }), \" min\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"if\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"v \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \">\"\n            }), \" max\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"return\"\n            }), \" max\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"return\"\n            }), \" v\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token constant\",\n              children: \"BOUNDARY_MARGIN\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"12\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token constant\",\n              children: \"MIN_W\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"80\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token constant\",\n              children: \"MIN_H\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token number\",\n              children: \"80\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          })]\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsx(_components.pre, {\n        className: \"language-tsx\",\n        children: _jsxs(_components.code, {\n          className: \"language-tsx code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"Boundary\"\n                })]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"ref\"\n              }), _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [_jsx(_components.span, {\n                  className: \"token script-punctuation punctuation\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"boundaryRef\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"  <div\\n\"\n            })\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"    style=\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \" width\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" w\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" height\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" h\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" left\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" x\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" top\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" y \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"\\n\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"    className=\\\"relative\\\"\\n\"\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"    // 1️⃣\\n\"\n            })\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token plain-text\",\n              children: \"    \"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), _jsx(_components.span, {\n              className: \"token spread operator\",\n              children: \"...\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"registMouseDownDrag\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"deltaX\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" deltaY\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token arrow operator\",\n              children: \"=>\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"      \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"if\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"!\"\n            }), \"boundaryRef\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token property-access\",\n              children: \"current\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"return\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"      \", _jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" boundary \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" boundaryRef\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token property-access\",\n              children: \"current\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"getBoundingClientRect\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"      \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"setConfig\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"        x\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"inrange\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"x \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"+\"\n            }), \" deltaX\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token constant\",\n              children: \"BOUNDARY_MARGIN\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" boundary\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token property-access\",\n              children: \"width\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"-\"\n            }), \" w \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"-\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token constant\",\n              children: \"BOUNDARY_MARGIN\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"        y\", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token function\",\n              children: \"inrange\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"y \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"+\"\n            }), \" deltaY\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token constant\",\n              children: \"BOUNDARY_MARGIN\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \" boundary\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token property-access\",\n              children: \"height\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"-\"\n            }), \" h \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"-\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token constant\",\n              children: \"BOUNDARY_MARGIN\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"        w\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"        h\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \",\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"      \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \">\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"Box\"\n                })]\n              }), \" \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"/>\"\n              })]\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"    \", _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"div\"]\n              }), \"\\n\"]\n            })]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"      \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"className\"\n              }), _jsxs(_components.span, {\n                className: \"token attr-value\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation attr-equals\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                }), \"absolute -bottom-0.5 left-3 right-3 h-2 cursor-s-resize\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                })]\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"\\t  \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"style\"\n              }), _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [_jsx(_components.span, {\n                  className: \"token script-punctuation punctuation\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" backgroundColor\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'#12121250'\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"      \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"{...registMouseDownDrag((deltaX,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"deltaY)\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"=\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"{\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"        \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"if\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"(!boundaryRef.current)\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"return;\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: \"\\n\"\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"        \", _jsx(_components.span, {\n                className: \"token comment\",\n                children: \"// 3️⃣\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"        \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"const\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"boundary\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"=\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"boundaryRef.current.getBoundingClientRect();\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"        \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"setConfig({\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"          \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"x,\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"          \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"y,\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"          \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: _jsx(_components.span, {\n                  className: \"token namespace\",\n                  children: \"w:\"\n                })\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"inrange(w\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"+\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"deltaX,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"MIN_W,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"boundary.width\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"-\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"x\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"-\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"BOUNDARY_MARGIN),\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"          \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: _jsx(_components.span, {\n                  className: \"token namespace\",\n                  children: \"h:\"\n                })\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"inrange(h\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"+\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"deltaY,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"MIN_H,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"boundary.height\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"-\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"y\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"-\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"BOUNDARY_MARGIN),\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"        \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"});\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"      \", _jsx(_components.span, {\n                className: \"token comment\",\n                children: \"// 2️⃣\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"      \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"},\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"true)}\"\n              }), \"\\n\"]\n            })\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"      \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"/>\"\n              })]\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"</\"\n                }), \"div\"]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"</\"\n                }), _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"Boundary\"\n                })]\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              })]\n            }), \"\\n\"]\n          })]\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://velog.velcdn.com/images/bepyan/post/6c7c265f-5902-4602-8716-f4608794d847/image.gif\",\n        alt: \"\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"오호, 이 정도면 좀 쓸만할 것 같다 💪🏾\"\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h2, {\n      id: \"심화-응용--여러-방향의-resize\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#심화-응용--여러-방향의-resize\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"심화 응용 — 여러 방향의 Resize\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"우리가 많이 접한 편집툴은 좌상단, 우상단, 좌하단, 우하단 4가지 방향으로 Resize할 수 있다.\", _jsx(_components.br, {}), \"\\n\", \"다른 방향으로 진행하기 위해서 무엇을 고려해야하는지 살펴보자.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"좌상단\"\n      }), \"인 경우, 우하단 동작 방식과 좀 다르다.\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.code, {\n        children: \"x\"\n      }), \"가 줄어드는 만큼 \", _jsx(_components.code, {\n        children: \"w\"\n      }), \"가 증가해야지 위치가 고정된 상태에서 element 크기가 달라진다.\", _jsx(_components.br, {}), \"\\n\", \"그렇다면 이들의 범위를 계산해보도록 하자.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://velog.velcdn.com/images/bepyan/post/5420046d-0f19-4920-a573-21ddf35edf6b/image.png\",\n        alt: \"\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"maxX\"\n      }), \" = \", _jsx(_components.code, {\n        children: \"x\"\n      }), \" + \", _jsx(_components.code, {\n        children: \"w\"\n      }), \" - \", _jsx(_components.code, {\n        children: \"MIN_W\"\n      }), _jsx(_components.br, {}), \"\\n\", _jsx(_components.code, {\n        children: \"maxWidth\"\n      }), \" = \", _jsx(_components.code, {\n        children: \"x\"\n      }), \" + \", _jsx(_components.code, {\n        children: \"w\"\n      }), \" - \", _jsx(_components.code, {\n        children: \"BOUNDARY_MARGIN\"\n      })]\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"이를 코드에 적용하면 아래와 같다.\", _jsx(_components.br, {}), \"\\n\", \"여기서 \", _jsx(_components.code, {\n        children: \"deltaX\"\n      }), \"가 줄어 들 때 \", _jsx(_components.code, {\n        children: \"width\"\n      }), \"가 증가한다는 점을 놓치지 말자.\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.code, {\n        children: \"width = w - deltaX\"\n      })]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsx(_components.pre, {\n        className: \"language-tsx\",\n        children: _jsxs(_components.code, {\n          className: \"language-tsx code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"/* 좌상단 */\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"div\"]\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"className\"\n              }), _jsxs(_components.span, {\n                className: \"token attr-value\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation attr-equals\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                }), \"absolute -top-1 -left-1 h-4 w-4 cursor-nw-resize\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                })]\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"style\"\n              }), _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [_jsx(_components.span, {\n                  className: \"token script-punctuation punctuation\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'#12121250'\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"{...registMouseDownDrag((deltaX,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"deltaY)\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"=\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"{\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"    \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"setConfig({\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"      \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: _jsx(_components.span, {\n                  className: \"token namespace\",\n                  children: \"x:\"\n                })\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"inrange(x\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"+\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"deltaX,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"BOUNDARY_MARGIN,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"x\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"+\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"w\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"-\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"MIN_W),\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"      \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: _jsx(_components.span, {\n                  className: \"token namespace\",\n                  children: \"y:\"\n                })\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"inrange(y\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"+\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"deltaY,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"BOUNDARY_MARGIN,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"y\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"+\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"h\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"-\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"MIN_H),\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"      \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: _jsx(_components.span, {\n                  className: \"token namespace\",\n                  children: \"w:\"\n                })\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"inrange(w\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"-\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"deltaX,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"MIN_W,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"x\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"+\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"w\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"-\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"BOUNDARY_MARGIN),\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"      \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: _jsx(_components.span, {\n                  className: \"token namespace\",\n                  children: \"h:\"\n                })\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"inrange(h\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"-\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"deltaY,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"MIN_H,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"y\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"+\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"h\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"-\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"BOUNDARY_MARGIN),\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"    \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"});\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"},\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"true)}\"\n              }), \"\\n\"]\n            })\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token tag\",\n              children: _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"/>\"\n              })\n            }), \"\\n\"]\n          })]\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"다른 방향에서의 원리도 이와 비슷하다.\", _jsx(_components.br, {}), \"\\n\", \"적절히 응용해보도록 하자.\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsx(_components.pre, {\n        className: \"language-tsx\",\n        children: _jsxs(_components.code, {\n          className: \"language-tsx code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"/* 우상단 */\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"div\"]\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"className\"\n              }), _jsxs(_components.span, {\n                className: \"token attr-value\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation attr-equals\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                }), \"absolute -top-1 -right-1 h-4 w-4 cursor-ne-resize\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                })]\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"style\"\n              }), _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [_jsx(_components.span, {\n                  className: \"token script-punctuation punctuation\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" backgroundColor\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'#12121250'\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"{...registMouseDownDrag((deltaX,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"deltaY)\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"=\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"{\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"    \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"if\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"(!boundaryRef.current)\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"return;\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: \"\\n\"\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"    \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"const\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"boundary\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"=\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"boundaryRef.current.getBoundingClientRect();\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: \"\\n\"\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"    \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"setConfig({\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"      \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"x,\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"      \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: _jsx(_components.span, {\n                  className: \"token namespace\",\n                  children: \"y:\"\n                })\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"inrange(y\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"+\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"deltaY,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"BOUNDARY_MARGIN,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"y\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"+\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"h\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"-\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"MIN_H),\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"      \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: _jsx(_components.span, {\n                  className: \"token namespace\",\n                  children: \"w:\"\n                })\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"inrange(w\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"+\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"deltaX,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"MIN_W,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"boundary.width\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"-\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"x\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"-\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"BOUNDARY_MARGIN),\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"      \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: _jsx(_components.span, {\n                  className: \"token namespace\",\n                  children: \"h:\"\n                })\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"inrange(h\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"-\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"deltaY,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"MIN_H,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"y\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"+\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"h\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"-\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"BOUNDARY_MARGIN),\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"    \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"});\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"},\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"true)}\"\n              }), \"\\n\"]\n            })\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token tag\",\n              children: _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"/>\"\n              })\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"{\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token comment\",\n              children: \"/* 좌하단 */\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"}\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"div\"]\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"className\"\n              }), _jsxs(_components.span, {\n                className: \"token attr-value\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation attr-equals\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                }), \"absolute -bottom-1 -left-1 h-4 w-4 cursor-ne-resize\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                })]\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"style\"\n              }), _jsxs(_components.span, {\n                className: \"token script language-javascript\",\n                children: [_jsx(_components.span, {\n                  className: \"token script-punctuation punctuation\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" backgroundColor\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'#12121250'\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"{...registMouseDownDrag((deltaX,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"deltaY)\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"=\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \">\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"{\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"    \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"if\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"(!boundaryRef.current)\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"return;\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: \"\\n\"\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"    \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"const\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"boundary\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"=\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"boundaryRef.current.getBoundingClientRect();\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsx(_components.span, {\n              className: \"token tag\",\n              children: \"\\n\"\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"    \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"setConfig({\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"      \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: _jsx(_components.span, {\n                  className: \"token namespace\",\n                  children: \"x:\"\n                })\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"inrange(x\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"+\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"deltaX,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"BOUNDARY_MARGIN,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"x\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"+\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"w\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"-\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"MIN_W),\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"      \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"y,\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"      \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: _jsx(_components.span, {\n                  className: \"token namespace\",\n                  children: \"w:\"\n                })\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"inrange(w\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"-\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"deltaX,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"MIN_W,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"x\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"+\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"w\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"-\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"BOUNDARY_MARGIN),\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"      \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: _jsx(_components.span, {\n                  className: \"token namespace\",\n                  children: \"h:\"\n                })\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"inrange(h\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"+\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"deltaY,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"MIN_H,\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"boundary.height\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"-\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"y\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"-\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"BOUNDARY_MARGIN),\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"    \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"});\"\n              }), \"\\n\"]\n            })\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: _jsxs(_components.span, {\n              className: \"token tag\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"},\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"true)}\"\n              }), \"\\n\"]\n            })\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token tag\",\n              children: _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"/>\"\n              })\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          })]\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://velog.velcdn.com/images/bepyan/post/85f36f99-622d-432a-85ff-7c0443d80dfa/image.gif\",\n        alt: \"\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"상하좌우 방향은 그저 하드코딩을 이어가면 된다.\", _jsx(_components.br, {}), \"\\n\", \"그럼 다음 기능 개발로 넘어가보자 🏄🏻‍♂️\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"실제 동작은 아래 링크에서 볼 수 있습니다.\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.a, {\n        href: \"https://dnd-playground.vercel.app/resize\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"https://dnd-playground.vercel.app/resize\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"style 정보, 전체 코드는 아래 깃허브에서 살펴보면 됩니다.\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.a, {\n        href: \"https://github.com/bepyan/dnd-playground/blob/main/src/components/DragSizeExample.tsx\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"https://github.com/bepyan/dnd-playground/blob/main/src/components/DragSizeExample.tsx\"\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tableOfContents":[{"slug":"tldr","text":"TL;DR","subSections":[]},{"slug":"복습--drag-이벤트-등록","text":"복습 — Drag 이벤트 등록","subSections":[]},{"slug":"기본-응용--drag로-resize하기","text":"기본 응용 — Drag로 Resize하기","subSections":[]},{"slug":"추가-응용--boundary-적용","text":"추가 응용 — Boundary 적용","subSections":[]},{"slug":"심화-응용--여러-방향의-resize","text":"심화 응용 — 여러 방향의 Resize","subSections":[]}]},"__N_SSG":true}