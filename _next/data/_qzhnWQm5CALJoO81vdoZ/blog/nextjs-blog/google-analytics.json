{"pageProps":{"post":{"title":"Next.js 블로그 Google Analytics 연동하기","description":"블로그에 Google Analytics v4를 심어주자!","tags":["Next.js","Blog","Typescript","GA"],"draft":false,"date":"2022-11-16","content":"\n✨ [**google analytics**](https://analytics.google.com/analytics/web/)\n2020년도에 공식 릴리즈된 web-based 사용자 행동 분석 서비스입니다.   \n사용자의 유입, 스크롤, 검색, 클릭 등 이벤트를 자도으로 수집해줍니다.   \n참고로 firebase analytics는 app-based 분석 서비스로 iOS, AOS 앱을 개발할 때 사용하면 좋습니다.\n\n사이트에 들어가면 어렵지않게 이를 세팅할 수 있습니다.\n\n관리 > 속성 만들기  \n관리 > 데이터 스트림 > 스트림 추가  \n관리 > 데이터 스트림 > 스트림 선택 > 태그 안내 보기 > 직접 설치\n\n```html\n<!-- Google tag (gtag.js) -->\n<script async src=\"https://www.googletagmanager.com/gtag/js?id=###\"></script>\n<script>\n  window.dataLayer = window.dataLayer || [];\n  function gtag() {\n    dataLayer.push(arguments);\n  }\n  gtag('js', new Date());\n\n  gtag('config', '###');\n</script>\n```\n\n위 예시를 Next.js에 맞게 주입시켜 주면 됩니다.   \nNext.js에서 GA를 사용하는 [공식 예시](https://github.com/vercel/next.js/tree/canary/examples/with-google-analytics)가 있어 그대로 참고하면 됩니다.   \n하지만 js로 작성되어 있어 ts에 호환되도록 추가 작업이 진행되어야 합니다.\n\n```shell\nyarn add -D @types/gtag.js\n```\n\n<br />\n\n`types.d.ts`\n```ts\n/// <reference types=\"gtag.js\" />\n\ndeclare module 'gtag.js';\n```\neslint typescript에서 에러를 던질 수 있는데 `.eslintignore`에 `*.d.ts`를 추가하여 무시해주도록 합니다.\n\n<br />\n\n이제 3 파일을 수정하면 됩니다.\n\n[libs/gtags.ts](https://github.com/vercel/next.js/blob/canary/examples/with-google-analytics/lib/gtag.js)\n```ts\nexport const GA_TRACKING_ID = '<어짜피 HTML에 노출된다>';\n\n// https://developers.google.com/analytics/devguides/collection/gtagjs/pages\nexport const pageview = (url: URL) => {\n  window.gtag('config', GA_TRACKING_ID, {\n    page_path: url,\n  });\n};\n\n// https://developers.google.com/analytics/devguides/collection/gtagjs/events\nexport const event = (\n  action: Gtag.EventNames,\n  { event_category, event_label, value }: Gtag.EventParams,\n) => {\n  window.gtag('event', action, {\n    event_category,\n    event_label,\n    value,\n  });\n};\n```\n\n[_app.tsx](https://github.com/vercel/next.js/blob/canary/examples/with-google-analytics/pages/_app.js)\n\n[_document.tsx](https://github.com/vercel/next.js/blob/canary/examples/with-google-analytics/pages/_document.js)\n\n<br />\n\n배포 이후 태그가 잘 추가되었는지 확인 해봅시다!   \nhtml에서 `gtag-init`를 검색해보면 쉽게 찾을 수 있습니다.\n\n![221116-134704](/posts/google-analytics/221116-134704.png)\n\n이제 48시간 내에 해당 태그가 수집되어 GA가 사용자의 행동을 추적하게 됩니다.   \n\n<br />\n\n진짜 마지막으로 GA와 Search Console를 연동해주도록 합시다.\n- 관리 > Search Console 링크 > 연결\n\n![221116-140526](/posts/google-analytics/221116-140526.png)\n\n참고\n- https://andrew-simpson-ross.medium.com/strongly-typed-google-analytics-v4-with-next-js-aad6c6a5e383\n","slug":"nextjs-blog/google-analytics","readingMinutes":3,"wordCount":260},"postFooterProps":{"prevPost":{"title":"Next.js 블로그 mdx에서 이미지 복붙하기 (feat. Paste Image)","description":"vscode markdown 파일에서 이미지를 기똥차게 사용해보자!","tags":["next.js","blog","markdown","Paste Image"],"draft":false,"date":"2022-11-15","content":"\nnotion, velog로 글을 작성하다가 vscode로 작성하려다보니 이미지를 추가하는 것이 꽤나 번거롭습니다. 🥲\n일일이 링크를 찾거나 생성해서 수작업으로 넣어줘야 했지요.\n앞으로 글을 그대로 수작업으로 작성해야한다고 생각하면 너무 아찔합니다!\n\n다행히 우리를 구원해줄 vscode 플러그인이 있습니다!  \nmdx에서 이미지를 복사하면 로컬환경에 정적 이미지 리소스를 생성해줍니다.\n\n✨ [**Paste Image**](https://marketplace.visualstudio.com/items?itemName=mushan.vscode-paste-image)  \n다만 gif는 지원되지 않습니다.\n\n## 환경 세팅하기\n\n`.vscode/settings.json` 파일을 생성합니다.  \n레포 단위의 개발환경을 세팅하기 위함입니다.\n\n```json\n{\n  \"pasteImage.defaultName\": \"YYMMDD-HHmmss\",\n  \"pasteImage.basePath\": \"${projectRoot}/public\",\n  \"pasteImage.path\": \"${projectRoot}/public/posts/${currentFileNameWithoutExt}\",\n  \"pasteImage.forceUnixStyleSeparator\": true,\n  \"pasteImage.insertPattern\": \"![${imageFileNameWithoutExt}](${imageFilePath})\",\n  \"pasteImage.prefix\": \"/\"\n}\n```\n\n경로를 mdx 파일 단위로 이미지가 저장되도록 했습니다.\n\n`/posts/nextjs-blog/2-images.mdx`  \n-> `/public/posts/2-images/[YYMMDD-HHmmss].png`\n\nposts와 1:1 매칭하고 싶지만 중간 경로를 추출할 수 있는 방법이 없는 것 같습니다 🥲\n\n## 단축키 설정\n\n저는 간편하게 복붙하기 위해서 단축키도 같이 수정을 해줬습니다.\n\n`.vscode/keybindings.json`\n\n```json\n[\n  {\n    \"key\": \"shift+cmd+v\",\n    \"command\": \"-notebook.cell.pasteAbove\",\n    \"when\": \"notebookEditorFocused && !inputFocus\"\n  },\n  {\n    \"key\": \"shift+cmd+v\",\n    \"command\": \"-markdown.showPreview\",\n    \"when\": \"!notebookEditorFocused && editorLangId == 'markdown'\"\n  },\n  {\n    \"key\": \"shift+cmd+v\",\n    \"command\": \"-markdown.extension.closePreview\",\n    \"when\": \"markdownPreviewFocus\"\n  },\n  {\n    \"key\": \"shift+cmd+v\",\n    \"command\": \"extension.pasteImage\",\n    \"when\": \"editorTextFocus\"\n  }\n]\n```\n\n이제 이미지를 복사하고 `shift + cmd + v` 입력하면 이미지가 짜잔 생성됩니다.  \n딜레이가 ~~거의~~ 없다는 사실!\n\n![copy-paste](/posts/6-mdx-images/copy-paste.gif)\n\n![221115-012522](/posts/6-mdx-images/221115-012522.png)\n","slug":"nextjs-blog/6-mdx-images","readingMinutes":2,"wordCount":173},"nextPost":{"title":"Next.js 블로그 sitemap 생성, 검색엔진 등록","description":"`next-sitemap` 라이브러리를 사용해서 쉽게 sitemap 만들고 검색엔진에 등록하자.","tags":["Next.js","Blog","SEO"],"draft":false,"date":"2022-11-15","content":"\n검색엔진에 노출되기 위해선 봇들에게 우리 블로그에 어떤 페이지가 있는지 알려줘야 합니다.  \n✨ [**next-sitemap**](https://github.com/iamvishnusankar/next-sitemap) 라이브러리를 통해서 모든 정적 페이지 정보가 담긴 `sitemap.xml`를 만들어 봅시다.\n\n# sitemap 생성\n\n```shell\nyarn add -D next-sitemap\n```\n\n`next-sitemap.config.js`\n\n```js\n/** @type {import('next-sitemap').IConfig} */\nmodule.exports = {\n  siteUrl: 'https://bepyan.github.io',\n  changefreq: 'daily',\n  priority: 0.7,\n  sitemapSize: 7000,\n  generateRobotsTxt: true,\n  exclude: [],\n};\n```\n\n`package.json`\n\n```json\n{\n  \"scripts\": {\n    \"build\": \"next build && next-sitemap && next export\",\n    \"postbuild\": \"next-export-optimize-images\",\n    \"serve\": \"npx http-server out\"\n  }\n}\n```\n\n여기서 주의할 점은 `next build` 실행 후 `next export` 전에 `next-sitemap` 실행 해줘야 한다는 것입니다.  \n그래야 `public`에 생성된 파일들이 최종적으로 `out`에 export됩니다.\n\n참고로 `postbuild` 스크립트는 `build` 실행이후 자동으로 실행됩니다.\n\n기본적으로 아래와 같은 파일들이 생성되는데요.  \n`public/robots.text` `public/sitemap.xml` `public/sitemap-0.xml`  \n이들이 push되지 않도록 `.gitignore`에 추가해주도록 합니다.\n\n```\n# production\n/build\n/public/robots.txt\n/public/sitemap*.xml\n```\n\n## 실행 결과 확인\n\n`yarn build`를 실행하면 `out` 디랙토리에도 sitemap 관련 파일들이 추가된 것을 확인할 수 있습니다.\n\n![221116-000505](/posts/sitemap/221116-000505.png)\n\ngithub action에서도 잘 실행된 것을 확인할 수 있습니다.\n\n![221115-231937](/posts/sitemap/221115-231937.png)\n\n[sitemap-0.xml](https://bepyan.github.io/sitemap-0.xml)\n\n```html\n<url>\n  <loc>https://bepyan.github.io</loc>\n  <lastmod>2022-11-15T15:18:54.289Z</lastmod>\n  <changefreq>daily</changefreq>\n  <priority>0.7</priority>\n</url>\n```\n\n# 검색엔진 등록\n\nsitemap을 만든다고해서 끝이 나는 것이 아닙니다.   \n검색엔진에 사이트를 등록해줘야 크롤러, 봇이 블로그 글들을 수집하여 검색됩니다.\n\n## Google Search Console\n\nGoogle은 [Google Search Console](https://search.google.com/search-console/welcome?utm_source=about-page)에 등록하면 됩니다.\n\nURL 접두어에 블로그 도메인 주소를 입력해줍니다.  \n`https://bepyan.github.io/`\n\n![221116-011827](/posts/sitemap/221116-011827.png)\n\n편의상 HTML 태그 방법을 활용하도록 합니다.  \n`_document.tsx` 파일에 `meta` 태그를 추가해주면 됩니다.\n\n```tsx\nimport { Head, Html } from 'next/document';\n\nexport default function MyDocument() {\n  return (\n    <Html lang=\"ko\">\n      <Head>\n        <meta name=\"google-site-verification\" content=\"\" />\n        {/* ... */}\n      </Head>\n      {/* ... */}\n    </Html>\n  );\n}\n```\n\n배포이후 `확인`을 클릭해 본인 사이트 인증을 합니다.   \n인증이 성공된다면 사이트의 통계를 볼 수 있게 됩니다.\n\n![221116-012421](/posts/sitemap/221116-012421.png)\n\n## Naver Search Advisor\n\nNaver는 [네이버 웹마스터](https://searchadvisor.naver.com/console/board)로 위와 똑같이 진행하면 됩니다.\n\n1. 사이트 도메인을 등록합니다.\n2. `meta` 태그를 삽입하여 본인 사이트임을 인증합니다.\n3. 요청 -> 사이트맵 제출 -> sitemap.xml 주소를 입력해줍니다.\n4. 검증 -> robots.txt -> 잘 수집이 되었는지 확인합니다.\n5. 설정 -> 수집 주기 설정 -> `빠르게`로 설정해줍니다.\n\n![221116-010832](/posts/sitemap/221116-010832.png)\n\n시간이 지난 후 통계가 쌓이는지 확인해보도록 합시다!\n","slug":"nextjs-blog/sitemap","readingMinutes":4,"wordCount":319}},"serize":{"title":"Next.js로 블로그 만들기","description":"100% 취향 반영, 내 손으로 직접 블로그를 만들어 보자!!","tags":[],"draft":false,"date":"2022-11-11","posts":[{"title":"Project Boilerplate 세팅하기","description":"next-mdx-remote 에서 플로그인 쓰는 법","tags":["nextjs","blog"],"date":"2022-11-11","slug":"nextjs-blog/1-boilerplate","readingMinutes":1,"wordCount":14},{"title":"Next.js 블로그 Image Optimization","description":"Next.js static html에서 이미지를 기똥차게 사용해보자!","tags":["next.js","blog","image","optimization"],"draft":false,"date":"2022-11-14","slug":"nextjs-blog/2-image-optimization","readingMinutes":3,"wordCount":282},{"title":"Next.js 블로그 글 리스트 만들기","description":"디랙토리 기반을 글 리스트를 만들자 🤔","tags":["Next.js","Blog"],"date":"2022-11-11","slug":"nextjs-blog/3-blog-list","readingMinutes":1,"wordCount":115},{"title":"Next.js mdx plugin","description":"`next-mdx-remote`에서 플로그인으로 이쁜 결과물을 만들자.","tags":["next.js","blog"],"draft":false,"date":"2022-11-25","slug":"nextjs-blog/4-mdx-plugin","readingMinutes":7,"wordCount":780},{"title":"Next.js 블로그 댓글 기능 추가하기 (feat. giscus)","description":"💎 Giscus를 활용하여 Next.js 블로그에 댓글, 대댓글, 리액션을 달 수 있도록 해주자!","tags":["Next.js","Blog","giscus"],"draft":false,"date":"2022-11-13","slug":"nextjs-blog/5-comments","readingMinutes":4,"wordCount":377},{"title":"Next.js 블로그 mdx에서 이미지 복붙하기 (feat. Paste Image)","description":"vscode markdown 파일에서 이미지를 기똥차게 사용해보자!","tags":["next.js","blog","markdown","Paste Image"],"draft":false,"date":"2022-11-15","slug":"nextjs-blog/6-mdx-images","readingMinutes":2,"wordCount":173},{"title":"Next.js 블로그 Google Analytics 연동하기","description":"블로그에 Google Analytics v4를 심어주자!","tags":["Next.js","Blog","Typescript","GA"],"draft":false,"date":"2022-11-16","slug":"nextjs-blog/google-analytics","readingMinutes":3,"wordCount":260},{"title":"Next.js 블로그 sitemap 생성, 검색엔진 등록","description":"`next-sitemap` 라이브러리를 사용해서 쉽게 sitemap 만들고 검색엔진에 등록하자.","tags":["Next.js","Blog","SEO"],"draft":false,"date":"2022-11-15","slug":"nextjs-blog/sitemap","readingMinutes":4,"wordCount":319}],"readingMinutes":25,"slug":"nextjs-blog"},"slug":"nextjs-blog/google-analytics","compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    strong: \"strong\",\n    br: \"br\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\",\n    img: \"img\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"✨ \", _jsx(_components.a, {\n        href: \"https://analytics.google.com/analytics/web/\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: _jsx(_components.strong, {\n          children: \"google analytics\"\n        })\n      }), _jsx(_components.br, {}), \"\\n\", \"2020년도에 공식 릴리즈된 web-based 사용자 행동 분석 서비스입니다.\", _jsx(_components.br, {}), \"\\n\", \"사용자의 유입, 스크롤, 검색, 클릭 등 이벤트를 자도으로 수집해줍니다.\", _jsx(_components.br, {}), \"\\n\", \"참고로 firebase analytics는 app-based 분석 서비스로 iOS, AOS 앱을 개발할 때 사용하면 좋습니다.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"사이트에 들어가면 어렵지않게 이를 세팅할 수 있습니다.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"관리 > 속성 만들기\", _jsx(_components.br, {}), \"\\n\", \"관리 > 데이터 스트림 > 스트림 추가\", _jsx(_components.br, {}), \"\\n\", \"관리 > 데이터 스트림 > 스트림 선택 > 태그 안내 보기 > 직접 설치\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-html\",\n      children: _jsxs(_components.code, {\n        className: \"language-html code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"<!-- Google tag (gtag.js) -->\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"<\"\n              }), \"script\"]\n            }), \" \", _jsx(_components.span, {\n              className: \"token attr-name\",\n              children: \"async\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token attr-name\",\n              children: \"src\"\n            }), _jsxs(_components.span, {\n              className: \"token attr-value\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation attr-equals\",\n                children: \"=\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"\\\"\"\n              }), \"https://www.googletagmanager.com/gtag/js?id=###\", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"\\\"\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \">\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token script\"\n          }), _jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"</\"\n              }), \"script\"]\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \">\"\n            })]\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"<\"\n              }), \"script\"]\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \">\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token script\",\n            children: _jsx(_components.span, {\n              className: \"token language-javascript\",\n              children: \"\\n\"\n            })\n          })]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: _jsx(_components.span, {\n            className: \"token script\",\n            children: _jsxs(_components.span, {\n              className: \"token language-javascript\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token dom variable\",\n                children: \"window\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \".\"\n              }), _jsx(_components.span, {\n                className: \"token property-access\",\n                children: \"dataLayer\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token operator\",\n                children: \"=\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token dom variable\",\n                children: \"window\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \".\"\n              }), _jsx(_components.span, {\n                className: \"token property-access\",\n                children: \"dataLayer\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token operator\",\n                children: \"||\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"[\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"]\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \";\"\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: _jsx(_components.span, {\n            className: \"token script\",\n            children: _jsxs(_components.span, {\n              className: \"token language-javascript\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token keyword\",\n                children: \"function\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token function\",\n                children: \"gtag\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"(\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \")\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"{\"\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: _jsx(_components.span, {\n            className: \"token script\",\n            children: _jsxs(_components.span, {\n              className: \"token language-javascript\",\n              children: [\"    dataLayer\", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \".\"\n              }), _jsx(_components.span, {\n                className: \"token method function property-access\",\n                children: \"push\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"(\"\n              }), \"arguments\", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \")\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \";\"\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: _jsx(_components.span, {\n            className: \"token script\",\n            children: _jsxs(_components.span, {\n              className: \"token language-javascript\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"}\"\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: _jsx(_components.span, {\n            className: \"token script\",\n            children: _jsxs(_components.span, {\n              className: \"token language-javascript\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token function\",\n                children: \"gtag\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"(\"\n              }), _jsx(_components.span, {\n                className: \"token string\",\n                children: \"'js'\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \",\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token keyword\",\n                children: \"new\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token class-name\",\n                children: \"Date\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"(\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \")\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \")\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \";\"\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: _jsx(_components.span, {\n            className: \"token script\",\n            children: _jsx(_components.span, {\n              className: \"token language-javascript\",\n              children: \"\\n\"\n            })\n          })\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: _jsx(_components.span, {\n            className: \"token script\",\n            children: _jsxs(_components.span, {\n              className: \"token language-javascript\",\n              children: [\"  \", _jsx(_components.span, {\n                className: \"token function\",\n                children: \"gtag\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"(\"\n              }), _jsx(_components.span, {\n                className: \"token string\",\n                children: \"'config'\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \",\"\n              }), \" \", _jsx(_components.span, {\n                className: \"token string\",\n                children: \"'###'\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \")\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \";\"\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token script\",\n            children: _jsx(_components.span, {\n              className: \"token language-javascript\"\n            })\n          }), _jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"</\"\n              }), \"script\"]\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \">\"\n            })]\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"위 예시를 Next.js에 맞게 주입시켜 주면 됩니다.\", _jsx(_components.br, {}), \"\\n\", \"Next.js에서 GA를 사용하는 \", _jsx(_components.a, {\n        href: \"https://github.com/vercel/next.js/tree/canary/examples/with-google-analytics\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"공식 예시\"\n      }), \"가 있어 그대로 참고하면 됩니다.\", _jsx(_components.br, {}), \"\\n\", \"하지만 js로 작성되어 있어 ts에 호환되도록 추가 작업이 진행되어야 합니다.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-shell\",\n      children: _jsx(_components.code, {\n        className: \"language-shell code-highlight\",\n        children: _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token function\",\n            children: \"yarn\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"add\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token parameter variable\",\n            children: \"-D\"\n          }), \" @types/gtag.js\\n\"]\n        })\n      })\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.code, {\n        children: \"types.d.ts\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-ts\",\n      children: _jsxs(_components.code, {\n        className: \"language-ts code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"/// <reference types=\\\"gtag.js\\\" />\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"declare\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"module\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'gtag.js'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"eslint typescript에서 에러를 던질 수 있는데 \", _jsx(_components.code, {\n        children: \".eslintignore\"\n      }), \"에 \", _jsx(_components.code, {\n        children: \"*.d.ts\"\n      }), \"를 추가하여 무시해주도록 합니다.\"]\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(_components.p, {\n      children: \"이제 3 파일을 수정하면 됩니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://github.com/vercel/next.js/blob/canary/examples/with-google-analytics/lib/gtag.js\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"libs/gtags.ts\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-ts\",\n      children: _jsxs(_components.code, {\n        className: \"language-ts code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"export\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token constant\",\n            children: \"GA_TRACKING_ID\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'<어짜피 HTML에 노출된다>'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"// https://developers.google.com/analytics/devguides/collection/gtagjs/pages\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"export\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function-variable function\",\n            children: \"pageview\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"url\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token constant\",\n            children: \"URL\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=>\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  window\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"gtag\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'config'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token constant\",\n            children: \"GA_TRACKING_ID\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    page_path\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" url\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"// https://developers.google.com/analytics/devguides/collection/gtagjs/events\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"export\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function-variable function\",\n            children: \"event\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  action\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" Gtag\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"EventNames\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" event_category\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" event_label\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" value \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" Gtag\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"EventParams\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=>\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  window\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"gtag\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'event'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" action\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    event_category\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    event_label\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    value\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://github.com/vercel/next.js/blob/canary/examples/with-google-analytics/pages/_app.js\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"_app.tsx\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://github.com/vercel/next.js/blob/canary/examples/with-google-analytics/pages/_document.js\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"_document.tsx\"\n      })\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"배포 이후 태그가 잘 추가되었는지 확인 해봅시다!\", _jsx(_components.br, {}), \"\\n\", \"html에서 \", _jsx(_components.code, {\n        children: \"gtag-init\"\n      }), \"를 검색해보면 쉽게 찾을 수 있습니다.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/posts/google-analytics/221116-134704.png\",\n        alt: \"221116-134704\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이제 48시간 내에 해당 태그가 수집되어 GA가 사용자의 행동을 추적하게 됩니다.\"\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(_components.p, {\n      children: \"진짜 마지막으로 GA와 Search Console를 연동해주도록 합시다.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"관리 > Search Console 링크 > 연결\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/posts/google-analytics/221116-140526.png\",\n        alt: \"221116-140526\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"참고\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://andrew-simpson-ross.medium.com/strongly-typed-google-analytics-v4-with-next-js-aad6c6a5e383\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"https://andrew-simpson-ross.medium.com/strongly-typed-google-analytics-v4-with-next-js-aad6c6a5e383\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tableOfContents":[]},"__N_SSG":true}