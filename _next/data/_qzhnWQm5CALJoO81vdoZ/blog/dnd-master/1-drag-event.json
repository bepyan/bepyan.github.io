{"pageProps":{"post":{"title":"Drag 이벤트 뽀개기","description":"라이브러리 없이 React에서 element를 커서로 움직이게 하자!!!","tags":["Next.js","React","DOM"],"draft":false,"date":"2022-10-01","content":"\n\ndrag관련해서 좋은 라이브러리들이 있지만 순수하게 구현해보고 싶다.\n더 나아가 관련해서 `drag and drop`, `resize`, `carousel` 등 다양한 기능까지 구현해볼 생각이다.\n아래의 스펙으로 구현을 시작해보자 🏄🏻‍♂️\n- `NextJS` `React`\n- `Typescript`\n- `Tilwind` ~~괜히 진입장벽이 생긴 것 같다... 미얀합니다...~~\n- ~~`라이브러리`~~\n- ~~`onDragStart`~~\n\n> **TL;DR**\n> `mousedown`에서 `mousemove` `mouseup` 이벤트를 등록한다.\n> `mousemove`에서 `event.pageX`와 `mousedown`의 `event.pageX` 차이를 활용해 엘리먼트를 이동시킨다.\n> `mouseup`에서 `mousemove` 이벤트를 해제시킨다.\n\n<br />\n<br />\n\n### 사전 지식 — DOM 이해\n\n마우스의 움직임 바탕으로 element의 위치를 이동시켜야 한다.\n따라서 마우스 관련 이벤트를 잘 이해해야 한다.\n\n`mousedown` — 마우스 클릭 이벤트\n`mousemove` — 마우스 이동 이벤트\n`mouseup` — 마우스 클릭 해제 이벤트\n[https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent](https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent)\n\n위 DOM 이벤트를 활용하여 마우스의 정보를 받아 올 수 있을 것 같다.\n그렇다면 **MouseEvent**는 어떤 속성을 가지고 있을까?\n비슷 비슷하게 보이는 친구들이 많은데 차이를 비교해보자.\n\n| Properties |   |\n| --- | --- |\n| **x, clientX** | in local (DOM content) coordinates.<br />event가 발생되는 element 기준으로 위치를 산정한다. |\n| **pageX** | relative to the whole document.<br />page document을 기준으로 위치를 산정한다.\n| **screenX** | in global (screen) coordinates.<br />더 나아가 듀얼 모니터의 주 모니터를 기준으로 위치를 산정한다. |\n\n무엇을 사용하던 크게 문제될 것이 없어보여 screenX을 사용해보자.\n\n<br />\n<br />\n<br />\n\n### 기본 원리 — Drag 이벤트 등록\n\n그렇다면 DOM 이벤트를 활용하여 마우스의 움직임을 추적해보자!\n주요 로직은 아래와 같다.\n\n1. 클릭시(`onMouseDown`) document에 `mousemove` `mouseup` 이벤트를 등록한다.\n2. 클릭된 상태에서 마우스를 움직일시 `mousemove`에 등록 된 함수가 계속 호출된다.\n3. `mouseup` 이벤트에서 `mousemove` 이벤트를 제거한다.\n\n```jsx\n<div\n  onMouseDown={() => {\n    // 2️⃣\n    const mouseMoveHandler = (e: MouseEvent) => {\n      console.log(`mouse move x:${e.screenX} y:${e.screenY}`);\n    };\n\n    // 3️⃣\n    const mouseUpHandler = (e: MouseEvent) => {\n      console.warn(`>>>> mouse up x:${e.screenX} y:${e.screenY}`);\n      document.removeEventListener('mousemove', mouseMoveHandler);\n    };\n\n    // 1️⃣\n    document.addEventListener('mousemove', mouseMoveHandler);\n    document.addEventListener('mouseup', mouseUpHandler, { once: true });\n    // mouseup 이벤트는 한번만 실행되면 되기에 { once: true } 옵션을 추가해준다.\n  }}\n/>\n```\n\n![](https://velog.velcdn.com/images/bepyan/post/40730059-40c1-4a9c-8fc9-c9abfd59c82d/image.gif)\n\n\n<br />\n<br />\n<br />\n\n### 기본 응용 — Drag 위치 이동\n\n마우스의 움직임을 추적하였으니,\n이제 이를 활용하여 element를 drag해서 위치를 움직여보자!\n\n\n1. element의 `position` 상태를 정의한다.\n2. 클릭(`mousedown`) 이벤트 발생시의 커서 위치를 기준으로,\n이동(`mousemove`) 이벤트에서 **상대적으로 이동한 거리(deltaX, deltaY)**를 계산한다.\n3. `position` 상태를 변경하여 element를 움직이게 한다.\n\n```tsx\n// 1️⃣\nconst [{ x, y }, setPosition] = useState({\n\tx: 0,\n\ty: 0,\n});\n\nreturn <div>\n\t<div\n\t\tstyle={{ transform: `translateX(${x}px) translateY(${y}px)` }}\n        onMouseDown={(clickEvent: React.MouseEvent<Element, MouseEvent>) => {\n            const mouseMoveHandler = (moveEvent: MouseEvent) => {\n              // 2️⃣\n              const deltaX = moveEvent.screenX - clickEvent.screenX;\n              const deltaY = moveEvent.screenY - clickEvent.screenY;\n\n              // 3️⃣\n              setPosition({\n                  x: x + deltaX,\n                  y: y + deltaY,\n              });\n            };\n\n            const mouseUpHandler = () => {\n              document.removeEventListener('mousemove', mouseMoveHandler);\n            };\n\n            document.addEventListener('mousemove', mouseMoveHandler);\n            document.addEventListener('mouseup', mouseUpHandler, { once: true });\n      \t}}\n\t/>\n</div>\n```\n\n![](https://velog.velcdn.com/images/bepyan/post/5c38729e-f30e-406f-92e6-de16918f87c0/image.gif)\n\n(TIP)\n에니메니션 인터랙션을 고려할 경우,\n실제 drag할 element(`Box`)를 div로 씌워서 이벤트, style를 등록 것이 좋다.\n\n`transition: transform` 경우 원치않게 에니메이션 효과가 적용될 수 있다.\n\n```jsx\n<div\n\tstyle={...}\n\tonMouseDown={...}\n>\n\t<Box />\n</div>\n```\n\n<br />\n<br />\n<br />\n\n### 심화 응용 — **Drag Boundary**\n\ndrag할 때 특정 영역(boundary)을 벗어나지 않길 원할 수 있다.\n위 2번 과정, `mousemove`이벤트에서 **특정 범위를 벗어나지 않도록 제한**하면 된다.\n\n\n![](https://velog.velcdn.com/images/bepyan/post/ac92e9bf-fce7-48b5-8a83-acc04b183878/image.png)\n\n\n#### 1. boundary, box element의 크기를 얻는다.\n\n[getBoundingClientRect]((https://developer.mozilla.org/ko/docs/Web/API/Element/getBoundingClientRect))을 활용하여 element의 정보를 얻을 수 있다.\n```tsx\nconst boundary = boundaryRef.current.getBoundingClientRect();\nconst box = boxRef.current.getBoundingClientRect();\n// x, y, width, height\n```\n    \n\n\n#### 2. drag할 수 있는 경계(minx, maxx, miny, maxy)를 계산한다.\nelement를 놓는 기준에 따라 boundary가 달라지는데 상황에 맞게 잘 계산하면 된다.\n\n<br />\n<br />\n\ndrag element이 **중앙 정렬**되었다고 생각해보자.\n기본 box의 위치는 `x:0, y:0`(중앙) 이다.\n\n따라서 element의 제한 범위를 계산해보면\n\n![](https://velog.velcdn.com/images/bepyan/post/26ef16ac-fa25-4c96-b2f7-da4bf5759f0c/image.png)![](https://velog.velcdn.com/images/bepyan/post/332fa024-b6ec-46fe-9b0e-40527d11e101/image.png)\n\n좌측 끝  = `-boundary.width/2` + `box.width/2` + `margin`\n우측 끝  =  `boundary.width/2` - `box.width/2` - `margin`\n\n\n먼저, 범위를 얻는 유틸함수를 만들면 코드가 더 깔끔해질 것 같다.\n```tsx\nconst inrange = (v: number, min: number, max: number) => {\n  if (v < min) return min;\n  if (v > max) return max;\n  return v;\n};\n```\n\n\n코드에 적용하면 아래와 같다.\n```tsx\nconst BOUNDARY_MARGIN = 12;\nconst deltaX = moveEvent.screenX - clickEvent.screenX;\nconst deltaY = moveEvent.screenY - clickEvent.screenY;\n\nsetPosition({\n  x: inrange(\n      x + deltaX,\n      Math.floor(-boundary.width / 2 + box.width / 2 + BOUNDARY_MARGIN),\n\t  Math.floor(boundary.width / 2 - box.width / 2 - BOUNDARY_MARGIN),\n  ),\n  y: inrange(\n      y + deltaY,\n      Math.floor(-boundary.height / 2 + box.height / 2 + BOUNDARY_MARGIN),\n      Math.floor(boundary.height / 2 - box.height / 2 - BOUNDARY_MARGIN),\n  ),\n});\n```\n\n<br />\n<br />\n\n이제 drag element가 **absolute**하다고 생각해보자.\n기본 box의 위치는 boundary의 좌상단(`x:0, y:0`) 이다.\n\n따라서 element의 제한 범위를 계산해보면\n![](https://velog.velcdn.com/images/bepyan/post/1d9d532f-5d0d-45a4-93fc-b2eb12b6ada7/image.png)![](https://velog.velcdn.com/images/bepyan/post/173cb287-673d-478f-a24a-1a3eadf8b8ee/image.png)\n\n좌측 끝 = `margin`\n우측 끝 = `boundary.width` - `box.width` - `margin`\n\n코드에 적용하면 아래와 같다.\n~~코드가 더 깔끔한 느낌은 기분탓인가..~~\n\n```tsx\nconst BOUNDARY_MARGIN = 12;\nconst deltaX = moveEvent.screenX - clickEvent.screenX;\nconst deltaY = moveEvent.screenY - clickEvent.screenY;\n\nsetPosition({\n  x: inrange(\n    x + deltaX,\n    BOUNDARY_MARGIN,\n    boundary.width - box.width - BOUNDARY_MARGIN\n  ),\n  y: inrange(\n    y + deltaY,\n    BOUNDARY_MARGIN\n    boundary.height - box.height - BOUNDARY_MARGIN,\n  ),\n});\n```\n\n![](https://velog.velcdn.com/images/bepyan/post/65b91811-a409-4877-90aa-f589b5768ee8/image.gif)\n\n뭔가 그럴듯한 결과물이 나왔다 ✨✨\n\n<br />\n<br />\n<br />\n\n### 응용 마무리 — 유틸 함수로 만들기\n\n관련된 기능을 유틸 함수로 추출하면 쉽게 element를 적용시킬 수 있을 거 같다.\n\n```tsx\nexport default function registMouseDownDrag(\n  onDragChange: (deltaX: number, deltaY: number) => void,\n  stopPropagation?: boolean,\n) {\n  return {\n    onMouseDown: (clickEvent: React.MouseEvent<Element, MouseEvent>) => {\n      if (stopPropagation) clickEvent.stopPropagation();\n\n      const mouseMoveHandler = (moveEvent: MouseEvent) => {\n        const deltaX = moveEvent.screenX - clickEvent.screenX;\n        const deltaY = moveEvent.screenY - clickEvent.screenY;\n        onDragChange(deltaX, deltaY);\n      };\n\n      const mouseUpHandler = () => {\n        document.removeEventListener('mousemove', mouseMoveHandler);\n      };\n\n      document.addEventListener('mousemove', mouseMoveHandler);\n      document.addEventListener('mouseup', mouseUpHandler, { once: true });\n    },\n  };\n}\n```\n\n`stopPropagation` 경우 click이벤트가 전파되지 않기 위함이다.\n부모 div의 click이벤트가 실행되면 곤란한 경우가 있다...\n\n`onDragChange`를 콜벡으로 받아서 쉽게 커스터마이징을 할 수 있을 것 같다.\n코드에 응용해보자.\n```tsx\nconst [{ x, y }, setPosition] = useState({\n  x: 0,\n  y: 0,\n});\n```\n```tsx\n<div\n  style={{ left: x, top: y }}\n  {...registMouseDownDrag((deltaX, deltaY) => {\n    setConfig({\n      x: x + deltaX,\n      y: y + deltaY,\n    });\n  })}\n  >\n```\n\n<br />\n<br />\n<br />\n\n실제 동작은 아래 링크에서 볼 수 있다.\nhttps://dnd-playground.vercel.app/\n\nstyle 정보, 전체 코드는 아래 깃허브에서 살펴보면 될 것 같다.\nhttps://github.com/bepyan/dnd-playground\n","slug":"dnd-master/1-drag-event","readingMinutes":9,"wordCount":979},"postFooterProps":{"prevPost":{"title":"Markdown Template Example","description":"마크다운 문법 사용 템플릿","tags":["markdown"],"date":"2022-11-17","content":"\n# h1 Heading\n\n## h2 Heading\n\n### h3 Heading\n\n#### h4 Heading\n\n##### h5 Heading\n\n###### h6 Heading\n\n\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n\nline break with '&nbsp;&nbsp;&nbsp;'   \nline break with `<br />` <br />\n\n---\n\n## Emphasis\n\n**This is bold text**\n\n_This is italic text_\n\n~~Strikethrough~~\n\n## Blockquotes\n\n> Blockquotes can also be nested...\n>\n> > ...by using additional greater-than signs right next to each other...\n> >\n> > > ...or with spaces between arrows.\n\n## Lists\n\nUnordered\n\n- Create a list by starting a line with `-` or `*`\n- Sub-lists are made by indenting 2 spaces:\n  - Marker character change forces new list start:\n    - Ac tristique libero volutpat at\n    * Facilisis in pretium nisl aliquet\n- Very easy!\n\nOrdered\n\n1. Lorem ipsum dolor sit amet\n2. Consectetur adipiscing elit\n3. Integer molestie lorem at massa\n\n4. You can use sequential numbers...\n5. ...or keep all the numbers as `1.`\n\nStart numbering with offset:\n\n57. foo\n1. bar\n\n## Code\n\nInline `code`\n\nBlock code\n\n```\nSample text here...\n```\n\nSyntax highlighting\n\n```js\nvar foo = function (bar) {\n  return bar++;\n};\n\nconsole.log(foo(5));\n```\n\nSyntax highlighting with file name, highlight line\n\n```ts:cores.ts {2}\nexport const cn = (classNames: ...any) => {\n    return classNames.filter(Boolean).join(' ');\n}\n```\n\n## Tables\n\n| Option | Description                                                               |\n| ------ | ------------------------------------------------------------------------- |\n| data   | path to data files to supply the data that will be passed into templates. |\n| engine | engine to be used for processing templates. Handlebars is the default.    |\n| ext    | extension to be used for dest files.                                      |\n\nRight aligned columns\n\n| Option |                                                               Description |\n| -----: | ------------------------------------------------------------------------: |\n|   data | path to data files to supply the data that will be passed into templates. |\n| engine |    engine to be used for processing templates. Handlebars is the default. |\n|    ext |                                      extension to be used for dest files. |\n\n## Links\n\n[link text](http://bepyan.github.io/)\n\n[**bold link text**](http://bepyan.github.io/)\n\n[`code link text`](http://bepyan.github.io/)\n\nAutoconverted link https://github.com/bepyan\n\n## Images\n\n![Minion](https://octodex.github.com/images/minion.png)\n\nHTML `<Img />` tag\n\n<img src=\"https://octodex.github.com/images/stormtroopocat.jpg\" alt=\"Stormtroopocat\" width={300} />\n","slug":"2022/example","readingMinutes":3,"wordCount":413},"nextPost":{"title":"Project Boilerplate 세팅하기","description":"next-mdx-remote 에서 플로그인 쓰는 법","tags":["nextjs","blog"],"date":"2022-11-11","content":"\n블로그의 스택은 아래와 같다.\n\n- NextJS\n- Typescript\n- TailwindCSS\n- next-mdx-remote\n","slug":"nextjs-blog/1-boilerplate","readingMinutes":1,"wordCount":14}},"serize":{"title":"DND 마스터리","description":"Drag and Drop 이벤트를 라이브러리 없이 구현해서 활용해봅니다.","tags":[],"draft":false,"date":"2022-10-01","posts":[{"title":"Drag 이벤트 뽀개기","description":"라이브러리 없이 React에서 element를 커서로 움직이게 하자!!!","tags":["Next.js","React","DOM"],"draft":false,"date":"2022-10-01","slug":"dnd-master/1-drag-event","readingMinutes":9,"wordCount":979}],"readingMinutes":9,"slug":"dnd-master"},"slug":"dnd-master/1-drag-event","compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    br: \"br\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    del: \"del\",\n    blockquote: \"blockquote\",\n    strong: \"strong\",\n    h3: \"h3\",\n    a: \"a\",\n    span: \"span\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    ol: \"ol\",\n    pre: \"pre\",\n    img: \"img\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"drag관련해서 좋은 라이브러리들이 있지만 순수하게 구현해보고 싶다.\", _jsx(_components.br, {}), \"\\n\", \"더 나아가 관련해서 \", _jsx(_components.code, {\n        children: \"drag and drop\"\n      }), \", \", _jsx(_components.code, {\n        children: \"resize\"\n      }), \", \", _jsx(_components.code, {\n        children: \"carousel\"\n      }), \" 등 다양한 기능까지 구현해볼 생각이다.\", _jsx(_components.br, {}), \"\\n\", \"아래의 스펙으로 구현을 시작해보자 🏄🏻‍♂️\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"NextJS\"\n        }), \" \", _jsx(_components.code, {\n          children: \"React\"\n        })]\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.code, {\n          children: \"Typescript\"\n        })\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"Tilwind\"\n        }), \" \", _jsx(_components.del, {\n          children: \"괜히 진입장벽이 생긴 것 같다... 미얀합니다...\"\n        })]\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.del, {\n          children: _jsx(_components.code, {\n            children: \"라이브러리\"\n          })\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.del, {\n          children: _jsx(_components.code, {\n            children: \"onDragStart\"\n          })\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsxs(_components.p, {\n        children: [_jsx(_components.strong, {\n          children: \"TL;DR\"\n        }), _jsx(_components.br, {}), \"\\n\", _jsx(_components.code, {\n          children: \"mousedown\"\n        }), \"에서 \", _jsx(_components.code, {\n          children: \"mousemove\"\n        }), \" \", _jsx(_components.code, {\n          children: \"mouseup\"\n        }), \" 이벤트를 등록한다.\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.code, {\n          children: \"mousemove\"\n        }), \"에서 \", _jsx(_components.code, {\n          children: \"event.pageX\"\n        }), \"와 \", _jsx(_components.code, {\n          children: \"mousedown\"\n        }), \"의 \", _jsx(_components.code, {\n          children: \"event.pageX\"\n        }), \" 차이를 활용해 엘리먼트를 이동시킨다.\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.code, {\n          children: \"mouseup\"\n        }), \"에서 \", _jsx(_components.code, {\n          children: \"mousemove\"\n        }), \" 이벤트를 해제시킨다.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsxs(_components.h3, {\n      id: \"사전-지식--dom-이해\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#사전-지식--dom-이해\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"사전 지식 — DOM 이해\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"마우스의 움직임 바탕으로 element의 위치를 이동시켜야 한다.\", _jsx(_components.br, {}), \"\\n\", \"따라서 마우스 관련 이벤트를 잘 이해해야 한다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"mousedown\"\n      }), \" — 마우스 클릭 이벤트\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.code, {\n        children: \"mousemove\"\n      }), \" — 마우스 이동 이벤트\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.code, {\n        children: \"mouseup\"\n      }), \" — 마우스 클릭 해제 이벤트\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.a, {\n        href: \"https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"위 DOM 이벤트를 활용하여 마우스의 정보를 받아 올 수 있을 것 같다.\", _jsx(_components.br, {}), \"\\n\", \"그렇다면 \", _jsx(_components.strong, {\n        children: \"MouseEvent\"\n      }), \"는 어떤 속성을 가지고 있을까?\", _jsx(_components.br, {}), \"\\n\", \"비슷 비슷하게 보이는 친구들이 많은데 차이를 비교해보자.\"]\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Properties\"\n          }), _jsx(_components.th, {})]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: \"x, clientX\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"in local (DOM content) coordinates.\", _jsx(\"br\", {}), \"event가 발생되는 element 기준으로 위치를 산정한다.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: \"pageX\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"relative to the whole document.\", _jsx(\"br\", {}), \"page document을 기준으로 위치를 산정한다.\"]\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.strong, {\n              children: \"screenX\"\n            })\n          }), _jsxs(_components.td, {\n            children: [\"in global (screen) coordinates.\", _jsx(\"br\", {}), \"더 나아가 듀얼 모니터의 주 모니터를 기준으로 위치를 산정한다.\"]\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"무엇을 사용하던 크게 문제될 것이 없어보여 screenX을 사용해보자.\"\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsxs(_components.h3, {\n      id: \"기본-원리--drag-이벤트-등록\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#기본-원리--drag-이벤트-등록\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"기본 원리 — Drag 이벤트 등록\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"그렇다면 DOM 이벤트를 활용하여 마우스의 움직임을 추적해보자!\", _jsx(_components.br, {}), \"\\n\", \"주요 로직은 아래와 같다.\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"클릭시(\", _jsx(_components.code, {\n          children: \"onMouseDown\"\n        }), \") document에 \", _jsx(_components.code, {\n          children: \"mousemove\"\n        }), \" \", _jsx(_components.code, {\n          children: \"mouseup\"\n        }), \" 이벤트를 등록한다.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"클릭된 상태에서 마우스를 움직일시 \", _jsx(_components.code, {\n          children: \"mousemove\"\n        }), \"에 등록 된 함수가 계속 호출된다.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"mouseup\"\n        }), \" 이벤트에서 \", _jsx(_components.code, {\n          children: \"mousemove\"\n        }), \" 이벤트를 제거한다.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-jsx\",\n      children: _jsxs(_components.code, {\n        className: \"language-jsx code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"<\"\n          }), \"div\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  onMouseDown\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token arrow operator\",\n            children: \"=>\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"// 2️⃣\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function-variable function\",\n            children: \"mouseMoveHandler\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsxs(_components.span, {\n            className: \"token parameter\",\n            children: [_jsx(_components.span, {\n              className: \"token literal-property property\",\n              children: \"e\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token maybe-class-name\",\n              children: \"MouseEvent\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token arrow operator\",\n            children: \"=>\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      \", _jsx(_components.span, {\n            className: \"token console class-name\",\n            children: \"console\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"log\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsxs(_components.span, {\n            className: \"token template-string\",\n            children: [_jsx(_components.span, {\n              className: \"token template-punctuation string\",\n              children: \"`\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"mouse move x:\"\n            }), _jsxs(_components.span, {\n              className: \"token interpolation\",\n              children: [_jsx(_components.span, {\n                className: \"token interpolation-punctuation punctuation\",\n                children: \"${\"\n              }), \"e\", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \".\"\n              }), _jsx(_components.span, {\n                className: \"token property-access\",\n                children: \"screenX\"\n              }), _jsx(_components.span, {\n                className: \"token interpolation-punctuation punctuation\",\n                children: \"}\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \" y:\"\n            }), _jsxs(_components.span, {\n              className: \"token interpolation\",\n              children: [_jsx(_components.span, {\n                className: \"token interpolation-punctuation punctuation\",\n                children: \"${\"\n              }), \"e\", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \".\"\n              }), _jsx(_components.span, {\n                className: \"token property-access\",\n                children: \"screenY\"\n              }), _jsx(_components.span, {\n                className: \"token interpolation-punctuation punctuation\",\n                children: \"}\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token template-punctuation string\",\n              children: \"`\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"// 3️⃣\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function-variable function\",\n            children: \"mouseUpHandler\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsxs(_components.span, {\n            className: \"token parameter\",\n            children: [_jsx(_components.span, {\n              className: \"token literal-property property\",\n              children: \"e\"\n            }), _jsx(_components.span, {\n              className: \"token operator\",\n              children: \":\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token maybe-class-name\",\n              children: \"MouseEvent\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token arrow operator\",\n            children: \"=>\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      \", _jsx(_components.span, {\n            className: \"token console class-name\",\n            children: \"console\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"warn\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsxs(_components.span, {\n            className: \"token template-string\",\n            children: [_jsx(_components.span, {\n              className: \"token template-punctuation string\",\n              children: \"`\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \">>>> mouse up x:\"\n            }), _jsxs(_components.span, {\n              className: \"token interpolation\",\n              children: [_jsx(_components.span, {\n                className: \"token interpolation-punctuation punctuation\",\n                children: \"${\"\n              }), \"e\", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \".\"\n              }), _jsx(_components.span, {\n                className: \"token property-access\",\n                children: \"screenX\"\n              }), _jsx(_components.span, {\n                className: \"token interpolation-punctuation punctuation\",\n                children: \"}\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \" y:\"\n            }), _jsxs(_components.span, {\n              className: \"token interpolation\",\n              children: [_jsx(_components.span, {\n                className: \"token interpolation-punctuation punctuation\",\n                children: \"${\"\n              }), \"e\", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \".\"\n              }), _jsx(_components.span, {\n                className: \"token property-access\",\n                children: \"screenY\"\n              }), _jsx(_components.span, {\n                className: \"token interpolation-punctuation punctuation\",\n                children: \"}\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token template-punctuation string\",\n              children: \"`\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      \", _jsx(_components.span, {\n            className: \"token dom variable\",\n            children: \"document\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"removeEventListener\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'mousemove'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" mouseMoveHandler\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"// 1️⃣\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token dom variable\",\n            children: \"document\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"addEventListener\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'mousemove'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" mouseMoveHandler\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token dom variable\",\n            children: \"document\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"addEventListener\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'mouseup'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" mouseUpHandler\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token literal-property property\",\n            children: \"once\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token boolean\",\n            children: \"true\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"// mouseup 이벤트는 한번만 실행되면 되기에 { once: true } 옵션을 추가해준다.\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"/\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \">\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://velog.velcdn.com/images/bepyan/post/40730059-40c1-4a9c-8fc9-c9abfd59c82d/image.gif\",\n        alt: \"\"\n      })\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsxs(_components.h3, {\n      id: \"기본-응용--drag-위치-이동\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#기본-응용--drag-위치-이동\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"기본 응용 — Drag 위치 이동\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"마우스의 움직임을 추적하였으니,\", _jsx(_components.br, {}), \"\\n\", \"이제 이를 활용하여 element를 drag해서 위치를 움직여보자!\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"element의 \", _jsx(_components.code, {\n          children: \"position\"\n        }), \" 상태를 정의한다.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"클릭(\", _jsx(_components.code, {\n          children: \"mousedown\"\n        }), \") 이벤트 발생시의 커서 위치를 기준으로,\", _jsx(_components.br, {}), \"\\n\", \"이동(\", _jsx(_components.code, {\n          children: \"mousemove\"\n        }), \") 이벤트에서 **상대적으로 이동한 거리(deltaX, deltaY)**를 계산한다.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"position\"\n        }), \" 상태를 변경하여 element를 움직이게 한다.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-tsx\",\n      children: _jsxs(_components.code, {\n        className: \"language-tsx code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"// 1️⃣\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" y \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" setPosition\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"useState\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"\\tx\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"\\ty\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"return\"\n          }), \" \", _jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"<\"\n              }), \"div\"]\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \">\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token plain-text\",\n            children: \"\\n\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: _jsx(_components.span, {\n            className: \"token plain-text\",\n            children: \"\\t<div\\n\"\n          })\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token plain-text\",\n            children: \"\\t\\tstyle=\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" transform\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsxs(_components.span, {\n            className: \"token template-string\",\n            children: [_jsx(_components.span, {\n              className: \"token template-punctuation string\",\n              children: \"`\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"translateX(\"\n            }), _jsxs(_components.span, {\n              className: \"token interpolation\",\n              children: [_jsx(_components.span, {\n                className: \"token interpolation-punctuation punctuation\",\n                children: \"${\"\n              }), \"x\", _jsx(_components.span, {\n                className: \"token interpolation-punctuation punctuation\",\n                children: \"}\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"px) translateY(\"\n            }), _jsxs(_components.span, {\n              className: \"token interpolation\",\n              children: [_jsx(_components.span, {\n                className: \"token interpolation-punctuation punctuation\",\n                children: \"${\"\n              }), \"y\", _jsx(_components.span, {\n                className: \"token interpolation-punctuation punctuation\",\n                children: \"}\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"px)\"\n            }), _jsx(_components.span, {\n              className: \"token template-punctuation string\",\n              children: \"`\"\n            })]\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token plain-text\",\n            children: \"\\n\"\n          })]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token plain-text\",\n            children: \"        onMouseDown=\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"clickEvent\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"React\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: _jsx(_components.span, {\n              className: \"token maybe-class-name\",\n              children: \"MouseEvent\"\n            })\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"<\"\n          }), _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"Element\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"MouseEvent\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \">\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token arrow operator\",\n            children: \"=>\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function-variable function\",\n            children: \"mouseMoveHandler\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"moveEvent\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"MouseEvent\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token arrow operator\",\n            children: \"=>\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"              \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"// 2️⃣\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"              \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" deltaX \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" moveEvent\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: \"screenX\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" clickEvent\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: \"screenX\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"              \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" deltaY \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" moveEvent\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: \"screenY\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" clickEvent\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: \"screenY\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"              \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"// 3️⃣\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"              \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"setPosition\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"                  x\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \" deltaX\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"                  y\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" y \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \" deltaY\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"              \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function-variable function\",\n            children: \"mouseUpHandler\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token arrow operator\",\n            children: \"=>\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"              \", _jsx(_components.span, {\n            className: \"token dom variable\",\n            children: \"document\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"removeEventListener\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'mousemove'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" mouseMoveHandler\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            \", _jsx(_components.span, {\n            className: \"token dom variable\",\n            children: \"document\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"addEventListener\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'mousemove'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" mouseMoveHandler\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            \", _jsx(_components.span, {\n            className: \"token dom variable\",\n            children: \"document\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"addEventListener\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'mouseup'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" mouseUpHandler\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" once\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token boolean\",\n            children: \"true\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      \\t\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token plain-text\",\n            children: \"\\n\"\n          })]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: _jsx(_components.span, {\n            className: \"token plain-text\",\n            children: \"\\t/>\\n\"\n          })\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token plain-text\"\n          }), _jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"</\"\n              }), \"div\"]\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \">\"\n            })]\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://velog.velcdn.com/images/bepyan/post/5c38729e-f30e-406f-92e6-de16918f87c0/image.gif\",\n        alt: \"\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"(TIP)\", _jsx(_components.br, {}), \"\\n\", \"에니메니션 인터랙션을 고려할 경우,\", _jsx(_components.br, {}), \"\\n\", \"실제 drag할 element(\", _jsx(_components.code, {\n        children: \"Box\"\n      }), \")를 div로 씌워서 이벤트, style를 등록 것이 좋다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"transition: transform\"\n      }), \" 경우 원치않게 에니메이션 효과가 적용될 수 있다.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-jsx\",\n      children: _jsxs(_components.code, {\n        className: \"language-jsx code-highlight\",\n        children: [_jsx(_components.span, {\n          className: \"code-line\",\n          children: _jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"<\"\n              }), \"div\"]\n            }), \"\\n\"]\n          })\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: _jsxs(_components.span, {\n            className: \"token tag\",\n            children: [\"\\t\", _jsx(_components.span, {\n              className: \"token attr-name\",\n              children: \"style\"\n            }), _jsxs(_components.span, {\n              className: \"token script language-javascript\",\n              children: [_jsx(_components.span, {\n                className: \"token script-punctuation punctuation\",\n                children: \"=\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"{\"\n              }), _jsx(_components.span, {\n                className: \"token spread operator\",\n                children: \"...\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"}\"\n              })]\n            }), \"\\n\"]\n          })\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: _jsxs(_components.span, {\n            className: \"token tag\",\n            children: [\"\\t\", _jsx(_components.span, {\n              className: \"token attr-name\",\n              children: \"onMouseDown\"\n            }), _jsxs(_components.span, {\n              className: \"token script language-javascript\",\n              children: [_jsx(_components.span, {\n                className: \"token script-punctuation punctuation\",\n                children: \"=\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"{\"\n              }), _jsx(_components.span, {\n                className: \"token spread operator\",\n                children: \"...\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"}\"\n              })]\n            }), \"\\n\"]\n          })\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token tag\",\n            children: _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \">\"\n            })\n          }), _jsx(_components.span, {\n            className: \"token plain-text\",\n            children: \"\\n\"\n          })]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token plain-text\",\n            children: \"\\t\"\n          }), _jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"<\"\n              }), _jsx(_components.span, {\n                className: \"token class-name\",\n                children: \"Box\"\n              })]\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"/>\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token plain-text\",\n            children: \"\\n\"\n          })]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token plain-text\"\n          }), _jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"</\"\n              }), \"div\"]\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \">\"\n            })]\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsxs(_components.h3, {\n      id: \"심화-응용--drag-boundary\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#심화-응용--drag-boundary\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"심화 응용 — \", _jsx(_components.strong, {\n        children: \"Drag Boundary\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"drag할 때 특정 영역(boundary)을 벗어나지 않길 원할 수 있다.\", _jsx(_components.br, {}), \"\\n\", \"위 2번 과정, \", _jsx(_components.code, {\n        children: \"mousemove\"\n      }), \"이벤트에서 \", _jsx(_components.strong, {\n        children: \"특정 범위를 벗어나지 않도록 제한\"\n      }), \"하면 된다.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://velog.velcdn.com/images/bepyan/post/ac92e9bf-fce7-48b5-8a83-acc04b183878/image.png\",\n        alt: \"\"\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"1-boundary-box-element의-크기를-얻는다\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#1-boundary-box-element의-크기를-얻는다\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"1. boundary, box element의 크기를 얻는다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"(https://developer.mozilla.org/ko/docs/Web/API/Element/getBoundingClientRect)\",\n        children: \"getBoundingClientRect\"\n      }), \"을 활용하여 element의 정보를 얻을 수 있다.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-tsx\",\n      children: _jsxs(_components.code, {\n        className: \"language-tsx code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" boundary \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" boundaryRef\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: \"current\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"getBoundingClientRect\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" box \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" boxRef\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: \"current\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"getBoundingClientRect\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"// x, y, width, height\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"2-drag할-수-있는-경계minx-maxx-miny-maxy를-계산한다\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#2-drag할-수-있는-경계minx-maxx-miny-maxy를-계산한다\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"2. drag할 수 있는 경계(minx, maxx, miny, maxy)를 계산한다.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"element를 놓는 기준에 따라 boundary가 달라지는데 상황에 맞게 잘 계산하면 된다.\"\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"drag element이 \", _jsx(_components.strong, {\n        children: \"중앙 정렬\"\n      }), \"되었다고 생각해보자.\", _jsx(_components.br, {}), \"\\n\", \"기본 box의 위치는 \", _jsx(_components.code, {\n        children: \"x:0, y:0\"\n      }), \"(중앙) 이다.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"따라서 element의 제한 범위를 계산해보면\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.img, {\n        src: \"https://velog.velcdn.com/images/bepyan/post/26ef16ac-fa25-4c96-b2f7-da4bf5759f0c/image.png\",\n        alt: \"\"\n      }), _jsx(_components.img, {\n        src: \"https://velog.velcdn.com/images/bepyan/post/332fa024-b6ec-46fe-9b0e-40527d11e101/image.png\",\n        alt: \"\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"좌측 끝  = \", _jsx(_components.code, {\n        children: \"-boundary.width/2\"\n      }), \" + \", _jsx(_components.code, {\n        children: \"box.width/2\"\n      }), \" + \", _jsx(_components.code, {\n        children: \"margin\"\n      }), _jsx(_components.br, {}), \"\\n\", \"우측 끝  =  \", _jsx(_components.code, {\n        children: \"boundary.width/2\"\n      }), \" - \", _jsx(_components.code, {\n        children: \"box.width/2\"\n      }), \" - \", _jsx(_components.code, {\n        children: \"margin\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"먼저, 범위를 얻는 유틸함수를 만들면 코드가 더 깔끔해질 것 같다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-tsx\",\n      children: _jsxs(_components.code, {\n        className: \"language-tsx code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function-variable function\",\n            children: \"inrange\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"v\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"number\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" min\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"number\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" max\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"number\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token arrow operator\",\n            children: \"=>\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"if\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"v \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"<\"\n          }), \" min\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"return\"\n          }), \" min\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"if\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"v \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \">\"\n          }), \" max\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"return\"\n          }), \" max\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"return\"\n          }), \" v\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"코드에 적용하면 아래와 같다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-tsx\",\n      children: _jsxs(_components.code, {\n        className: \"language-tsx code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token constant\",\n            children: \"BOUNDARY_MARGIN\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"12\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" deltaX \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" moveEvent\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: \"screenX\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" clickEvent\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: \"screenX\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" deltaY \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" moveEvent\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: \"screenY\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" clickEvent\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: \"screenY\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token function\",\n            children: \"setPosition\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  x\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"inrange\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \" deltaX\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      \", _jsx(_components.span, {\n            className: \"token known-class-name class-name\",\n            children: \"Math\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"floor\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \"boundary\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: \"width\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"/\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \" box\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: \"width\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"/\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token constant\",\n            children: \"BOUNDARY_MARGIN\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"\\t  \", _jsx(_components.span, {\n            className: \"token known-class-name class-name\",\n            children: \"Math\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"floor\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"boundary\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: \"width\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"/\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" box\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: \"width\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"/\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token constant\",\n            children: \"BOUNDARY_MARGIN\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  y\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"inrange\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      y \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \" deltaY\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      \", _jsx(_components.span, {\n            className: \"token known-class-name class-name\",\n            children: \"Math\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"floor\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \"boundary\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: \"height\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"/\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \" box\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: \"height\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"/\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token constant\",\n            children: \"BOUNDARY_MARGIN\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      \", _jsx(_components.span, {\n            className: \"token known-class-name class-name\",\n            children: \"Math\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"floor\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"boundary\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: \"height\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"/\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" box\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: \"height\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"/\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token constant\",\n            children: \"BOUNDARY_MARGIN\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"이제 drag element가 \", _jsx(_components.strong, {\n        children: \"absolute\"\n      }), \"하다고 생각해보자.\", _jsx(_components.br, {}), \"\\n\", \"기본 box의 위치는 boundary의 좌상단(\", _jsx(_components.code, {\n        children: \"x:0, y:0\"\n      }), \") 이다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"따라서 element의 제한 범위를 계산해보면\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.img, {\n        src: \"https://velog.velcdn.com/images/bepyan/post/1d9d532f-5d0d-45a4-93fc-b2eb12b6ada7/image.png\",\n        alt: \"\"\n      }), _jsx(_components.img, {\n        src: \"https://velog.velcdn.com/images/bepyan/post/173cb287-673d-478f-a24a-1a3eadf8b8ee/image.png\",\n        alt: \"\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"좌측 끝 = \", _jsx(_components.code, {\n        children: \"margin\"\n      }), _jsx(_components.br, {}), \"\\n\", \"우측 끝 = \", _jsx(_components.code, {\n        children: \"boundary.width\"\n      }), \" - \", _jsx(_components.code, {\n        children: \"box.width\"\n      }), \" - \", _jsx(_components.code, {\n        children: \"margin\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"코드에 적용하면 아래와 같다.\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.del, {\n        children: \"코드가 더 깔끔한 느낌은 기분탓인가..\"\n      })]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-tsx\",\n      children: _jsxs(_components.code, {\n        className: \"language-tsx code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token constant\",\n            children: \"BOUNDARY_MARGIN\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"12\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" deltaX \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" moveEvent\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: \"screenX\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" clickEvent\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: \"screenX\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" deltaY \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" moveEvent\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: \"screenY\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" clickEvent\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: \"screenY\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token function\",\n            children: \"setPosition\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  x\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"inrange\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    x \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \" deltaX\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token constant\",\n            children: \"BOUNDARY_MARGIN\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    boundary\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: \"width\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" box\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: \"width\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token constant\",\n            children: \"BOUNDARY_MARGIN\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  y\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"inrange\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    y \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \" deltaY\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token constant\",\n            children: \"BOUNDARY_MARGIN\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    boundary\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: \"height\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" box\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: \"height\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token constant\",\n            children: \"BOUNDARY_MARGIN\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://velog.velcdn.com/images/bepyan/post/65b91811-a409-4877-90aa-f589b5768ee8/image.gif\",\n        alt: \"\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"뭔가 그럴듯한 결과물이 나왔다 ✨✨\"\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsxs(_components.h3, {\n      id: \"응용-마무리--유틸-함수로-만들기\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#응용-마무리--유틸-함수로-만들기\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"응용 마무리 — 유틸 함수로 만들기\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"관련된 기능을 유틸 함수로 추출하면 쉽게 element를 적용시킬 수 있을 거 같다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-tsx\",\n      children: _jsxs(_components.code, {\n        className: \"language-tsx code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"export\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"default\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"function\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"registMouseDownDrag\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token function-variable function\",\n            children: \"onDragChange\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"deltaX\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"number\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" deltaY\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"number\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token arrow operator\",\n            children: \"=>\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"void\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  stopPropagation\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"?\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"boolean\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"return\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token function-variable function\",\n            children: \"onMouseDown\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"clickEvent\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"React\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: _jsx(_components.span, {\n              className: \"token maybe-class-name\",\n              children: \"MouseEvent\"\n            })\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"<\"\n          }), _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"Element\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"MouseEvent\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \">\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token arrow operator\",\n            children: \"=>\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"if\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"stopPropagation\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" clickEvent\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"stopPropagation\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function-variable function\",\n            children: \"mouseMoveHandler\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"moveEvent\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"MouseEvent\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token arrow operator\",\n            children: \"=>\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" deltaX \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" moveEvent\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: \"screenX\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" clickEvent\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: \"screenX\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" deltaY \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" moveEvent\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: \"screenY\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \" clickEvent\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: \"screenY\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"onDragChange\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"deltaX\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" deltaY\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function-variable function\",\n            children: \"mouseUpHandler\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token arrow operator\",\n            children: \"=>\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        \", _jsx(_components.span, {\n            className: \"token dom variable\",\n            children: \"document\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"removeEventListener\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'mousemove'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" mouseMoveHandler\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      \", _jsx(_components.span, {\n            className: \"token dom variable\",\n            children: \"document\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"addEventListener\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'mousemove'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" mouseMoveHandler\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      \", _jsx(_components.span, {\n            className: \"token dom variable\",\n            children: \"document\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"addEventListener\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'mouseup'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" mouseUpHandler\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" once\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token boolean\",\n            children: \"true\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"stopPropagation\"\n      }), \" 경우 click이벤트가 전파되지 않기 위함이다.\", _jsx(_components.br, {}), \"\\n\", \"부모 div의 click이벤트가 실행되면 곤란한 경우가 있다...\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"onDragChange\"\n      }), \"를 콜벡으로 받아서 쉽게 커스터마이징을 할 수 있을 것 같다.\", _jsx(_components.br, {}), \"\\n\", \"코드에 응용해보자.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-tsx\",\n      children: _jsxs(_components.code, {\n        className: \"language-tsx code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" y \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" setPosition\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"useState\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  x\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  y\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-tsx\",\n      children: _jsxs(_components.code, {\n        className: \"language-tsx code-highlight\",\n        children: [_jsx(_components.span, {\n          className: \"code-line\",\n          children: _jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"<\"\n              }), \"div\"]\n            }), \"\\n\"]\n          })\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: _jsxs(_components.span, {\n            className: \"token tag\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token attr-name\",\n              children: \"style\"\n            }), _jsxs(_components.span, {\n              className: \"token script language-javascript\",\n              children: [_jsx(_components.span, {\n                className: \"token script-punctuation punctuation\",\n                children: \"=\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"{\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"{\"\n              }), \" left\", _jsx(_components.span, {\n                className: \"token operator\",\n                children: \":\"\n              }), \" x\", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \",\"\n              }), \" top\", _jsx(_components.span, {\n                className: \"token operator\",\n                children: \":\"\n              }), \" y \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"}\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"}\"\n              })]\n            }), \"\\n\"]\n          })\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: _jsxs(_components.span, {\n            className: \"token tag\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token attr-name\",\n              children: \"{...registMouseDownDrag((deltaX,\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token attr-name\",\n              children: \"deltaY)\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token attr-name\",\n              children: \"=\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \">\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token attr-name\",\n              children: \"{\"\n            }), \"\\n\"]\n          })\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: _jsxs(_components.span, {\n            className: \"token tag\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token attr-name\",\n              children: \"setConfig({\"\n            }), \"\\n\"]\n          })\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: _jsxs(_components.span, {\n            className: \"token tag\",\n            children: [\"      \", _jsx(_components.span, {\n              className: \"token attr-name\",\n              children: _jsx(_components.span, {\n                className: \"token namespace\",\n                children: \"x:\"\n              })\n            }), \" \", _jsx(_components.span, {\n              className: \"token attr-name\",\n              children: \"x\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token attr-name\",\n              children: \"+\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token attr-name\",\n              children: \"deltaX,\"\n            }), \"\\n\"]\n          })\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: _jsxs(_components.span, {\n            className: \"token tag\",\n            children: [\"      \", _jsx(_components.span, {\n              className: \"token attr-name\",\n              children: _jsx(_components.span, {\n                className: \"token namespace\",\n                children: \"y:\"\n              })\n            }), \" \", _jsx(_components.span, {\n              className: \"token attr-name\",\n              children: \"y\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token attr-name\",\n              children: \"+\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token attr-name\",\n              children: \"deltaY,\"\n            }), \"\\n\"]\n          })\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: _jsxs(_components.span, {\n            className: \"token tag\",\n            children: [\"    \", _jsx(_components.span, {\n              className: \"token attr-name\",\n              children: \"});\"\n            }), \"\\n\"]\n          })\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: _jsxs(_components.span, {\n            className: \"token tag\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token attr-name\",\n              children: \"})}\"\n            }), \"\\n\"]\n          })\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsxs(_components.span, {\n            className: \"token tag\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \">\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token plain-text\",\n            children: \"\\n\"\n          })]\n        })]\n      })\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"실제 동작은 아래 링크에서 볼 수 있다.\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.a, {\n        href: \"https://dnd-playground.vercel.app/\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"https://dnd-playground.vercel.app/\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"style 정보, 전체 코드는 아래 깃허브에서 살펴보면 될 것 같다.\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.a, {\n        href: \"https://github.com/bepyan/dnd-playground\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"https://github.com/bepyan/dnd-playground\"\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tableOfContents":[{"slug":"사전-지식-dom-이해","text":"사전 지식 — DOM 이해","subSections":[{"slug":"기본-원리-drag-이벤트-등록","text":"기본 원리 — Drag 이벤트 등록"},{"slug":"기본-응용-drag-위치-이동","text":"기본 응용 — Drag 위치 이동"},{"slug":"심화-응용-drag-boundary","text":"심화 응용 — **Drag Boundary**"},{"slug":"응용-마무리-유틸-함수로-만들기","text":"응용 마무리 — 유틸 함수로 만들기"}]}]},"__N_SSG":true}