{"pageProps":{"post":{"title":"Next.js mdx plugin","description":"`next-mdx-remote`에서 플로그인으로 이쁜 결과물을 만들자.","tags":["next.js","blog"],"draft":false,"date":"2022-11-19","content":"\n✨ [**next-mdx-remote**](https://github.com/hashicorp/next-mdx-remote)를 활용하여 markdown파일을 이쁜 HTML 코드로 변환해줍니다.   \nmarkdown과 Custom React Component를 연결해주는 것이 특징입니다.\n\n# 기본 사용법\n\n```shell\nyarn add next-mdx-remote\n```\n\n<br />\n\n1. mdx 파일을 `serialize`하여 필요한 데이터를 추출하고 가공합니다.\n\n```ts:libs/mdx.ts\nimport { serialize } from 'next-mdx-remote/serialize';\n\nexport const serializeMdx = (source: string) => {\n  return serialize(source, {\n    parseFrontmatter: false,\n    mdxOptions: {\n      remarkPlugins: [],\n      rehypePlugins: [],\n      format: 'mdx',\n    },\n  });\n};\n```\n\n- [`remark plugins`](https://github.com/remarkjs/remark/blob/main/doc/plugins.md)과 [`rehype plugins`](https://github.com/rehypejs/rehype/blob/main/doc/plugins.md)를 활용해서 다양한 기능을 추가할 수 있습니다.\n\n<br />\n\n2. `getStaticProps`(빌드시점)에서 필요한 데이터를 모두 가공합니다.\n\n```ts:[...slugs].tsx {21}\nimport { GetStaticPaths, GetStaticProps } from 'next';\nimport { serializeMdx } from '~/libs/mdx';\nimport { getAllPosts } from '~/libs/post';\n\nexport const getStaticPaths: GetStaticPaths = () => {\n  const posts = getAllPosts();\n\n  return {\n    paths: posts.map((post) => `/blog/${post.slug}`),\n    fallback: 'blocking',\n  };\n};\n\nexport const getStaticProps: GetStaticProps = async ({ params }) => {\n  const { slugs } = params as { slugs: string[] };\n\n  const slug = [...slugs].join('/');\n  const post = getAllPosts().find((v) => v.slug === slug);\n  //...\n\n  const mdx = await serializeMdx(post.content);\n\n  return {\n    props: { mdx },\n  };\n};\n```\n\n3. 브라우저는 `<MDXRemote />`를 활용하여 데이터를 HTML로 변환합니다.\n\n```tsx\nexport default function PostPage({ mdx }: { mdx: MDXRemoteSerializeResult }) {\n  return (\n    <div className=\"prose mt-4 w-full max-w-none dark:prose-dark\">\n      <MDXRemote {...mdx} />\n    </div>\n  );\n}\n```\n\n# 필수 플러그인\n\n모두 `server-side`에서 사용하게 될 것이기에 모두 `devDependency`로 설치해줍니다.\n\n```shell\nyarn add -D remark-gfm remark-toc rehype-prism-plus\nyarn add -D @tailwindcss/typography\n```\n\n---\n\n### remark-gfm\n\nhttps://github.com/remarkjs/remark-gfm\n\n`GFM`(autolink literals, footnotes, strikethrough, tables, tasklists...) 문법들을 해석해주는 도구 입니다.\n\n---\n\n### remark-toc\n\nhttps://github.com/remarkjs/remark-toc\n\n`Tabel of Content` 목차를 만들어 주는 도구 입니다.   \n다른 포스트에서 집중적으로 활용해보도록 합시다.\n\n---\n\n### rehype-prism-plus\n\nhttps://github.com/timlrx/rehype-prism-plus\n\n[`prism`](https://prismjs.com/) 기반으로 코드블럭을 `syntax highlighting`해주는 도구 입니다.   \nhighlighting, showLineNumbers, line inserted, line deleted 등 기능도 제공해줍니다.   \n\n```diff-js {1} showLineNumbers\nfunction fancyAlert(arg) {\n  if (arg) {\n+    $.facebox({ div: '#foo' })\n-    alert('#roo')\n  }\n}\n```\n\n하지만 코드 토큰만 해석해줄 뿐이지 스타일은 직접 씌워줘야합니다.   \nprism기반의 [다양한 테마](https://github.com/PrismJS/prism-themes)를 적용할 수 있으니 취향 것 선택하면 됩니다.   \n저는 [dracular](https://draculatheme.com/prism)에서 받아왔습니다.\n\n자세한 설정은 [제 레포지토리](https://github.com/bepyan/bepyan.github.io/blob/main/src/styles/code.css)를 참고해주시면 될 것 같습니다. ~~생각보다 복잡합니다...~~\n\n---\n\n### @tailwindcss/typography\n\nhttps://tailwindcss.com/docs/typography-plugin\n\ntailwind 기반으로 mdx 마크업을 스타일링합니다.   \n쉽게 [커스터마이징](https://tailwindcss.com/docs/typography-plugin#customizing-the-css)을 할 수 있습니다.\n\n---\n\n# 추천 플로그인\n\n```shell\nyarn add -D rehype-slug rehype-autolink-headings rehype-code-titles\n```\n\n### remark-math\n\nhttps://github.com/remarkjs/remark-math\n\n---\n\n### reading-time\n\nhttps://github.com/ngryman/reading-time\n\n---\n\n### rehype-slug + rehype-autolink-headings\n\nhttps://github.com/rehypejs/rehype-slug\n\nheadings에 id를 심어준다.\n이전에 많이 사용되었던 remark-slug는 deprecated 되었다.\n\n- rehype-autolink-headings\n  https://github.com/rehypejs/rehype-autolink-headings\n\n`span.icon.icon-link`을 활용하여 anchor를 만들 수 있다.\n\n```css\nh2 > a > span.icon.icon-link {\n  width: 18px;\n  height: 18px;\n}\n\nh3 > a > span.icon.icon-link {\n  width: 15px;\n  height: 15px;\n}\n\nh4 > a > span.icon.icon-link {\n  width: 12px;\n  height: 12px;\n}\n\nspan.icon.icon-link {\n  display: inline-block;\n  width: 15px;\n  height: 15px;\n  margin-right: 2px;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 490 490' style='enable-background:new 0 0 490 490;' xml:space='preserve'%3E%3Cpath d='M64.333 490h58.401l33.878-137.69h122.259L245.39 490h58.401l33.878-137.69h119.92v-48.162h-108.24l29.2-117.324h79.04v-48.162H390.23L424.108 0H365.31l-33.878 138.661H208.79L242.668 0h-58.415l-33.864 138.661H32.411v48.162h106.298l-28.818 117.324h-77.48v48.162h65.8L64.333 490zM197.11 186.824h122.642l-29.2 117.324h-122.26l28.818-117.324z'/%3E%3C/svg%3E\");\n}\n\n.dark span.icon.icon-link {\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 490 490' style='enable-background:new 0 0 490 490; fill:white;' xml:space='preserve'%3E%3Cpath d='M64.333 490h58.401l33.878-137.69h122.259L245.39 490h58.401l33.878-137.69h119.92v-48.162h-108.24l29.2-117.324h79.04v-48.162H390.23L424.108 0H365.31l-33.878 138.661H208.79L242.668 0h-58.415l-33.864 138.661H32.411v48.162h106.298l-28.818 117.324h-77.48v48.162h65.8L64.333 490zM197.11 186.824h122.642l-29.2 117.324h-122.26l28.818-117.324z'/%3E%3C/svg%3E\");\n}\n```\n\n---\n\n# 최종 코드\n\n```ts:libs/mdx.ts\nimport { serialize } from 'next-mdx-remote/serialize';\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings';\nimport rehypeCodeTitles from 'rehype-code-titles';\nimport rehypePrism from 'rehype-prism-plus';\nimport rehypeSlug from 'rehype-slug';\nimport remarkGfm from 'remark-gfm';\nimport remarkToc from 'remark-toc';\n\nexport const serializeMdx = (source: string) => {\n  return serialize(source, {\n    parseFrontmatter: true,\n    mdxOptions: {\n      remarkPlugins: [remarkToc, remarkGfm],\n      rehypePlugins: [\n        rehypeSlug,\n        rehypeCodeTitles,\n        rehypePrism,\n        [\n          rehypeAutolinkHeadings,\n          {\n            properties: {\n              className: ['anchor'],\n            },\n          },\n        ],\n      ],\n      format: 'mdx',\n    },\n  });\n};\n```\n\n## 참고\n\nhttps://yceffort.kr/2020/10/migrate-gatsby-from-nextjs  \nhttps://colinhemphill.com/blog/fast-static-syntax-highlighting-for-mdx-in-nextjs\n\nProject Level Snippets  \nhttps://code.visualstudio.com/updates/v1_28#_project-level-snippets\n","slug":"nextjs-blog/4-mdx-plugin","readingMinutes":5,"wordCount":576},"slug":"nextjs-blog/4-mdx-plugin","mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    strong: \"strong\",\n    br: \"br\",\n    h1: \"h1\",\n    span: \"span\",\n    pre: \"pre\",\n    code: \"code\",\n    ol: \"ol\",\n    li: \"li\",\n    div: \"div\",\n    ul: \"ul\",\n    hr: \"hr\",\n    h3: \"h3\",\n    del: \"del\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"✨ \", _jsx(_components.a, {\n        href: \"https://github.com/hashicorp/next-mdx-remote\",\n        children: _jsx(_components.strong, {\n          children: \"next-mdx-remote\"\n        })\n      }), \"를 활용하여 markdown파일을 이쁜 HTML 코드로 변환해줍니다.\", _jsx(_components.br, {}), \"\\n\", \"markdown과 Custom React Component를 연결해주는 것이 특징입니다.\"]\n    }), \"\\n\", _jsxs(_components.h1, {\n      id: \"기본-사용법\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#기본-사용법\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"기본 사용법\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-shell\",\n      children: _jsx(_components.code, {\n        className: \"language-shell code-highlight\",\n        children: _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token function\",\n            children: \"yarn\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"add\"\n          }), \" next-mdx-remote\\n\"]\n        })\n      })\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"mdx 파일을 \", _jsx(_components.code, {\n          children: \"serialize\"\n        }), \"하여 필요한 데이터를 추출하고 가공합니다.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"rehype-code-title\",\n      children: \"libs/mdx.ts\"\n    }), _jsx(_components.pre, {\n      className: \"language-ts\",\n      children: _jsxs(_components.code, {\n        className: \"language-ts code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"import\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" serialize \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"from\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'next-mdx-remote/serialize'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"export\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function-variable function\",\n            children: \"serializeMdx\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"source\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"string\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=>\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"return\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"serialize\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"source\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    parseFrontmatter\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token boolean\",\n            children: \"false\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    mdxOptions\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      remarkPlugins\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      rehypePlugins\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      format\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'mdx'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://github.com/remarkjs/remark/blob/main/doc/plugins.md\",\n          children: _jsx(_components.code, {\n            children: \"remark plugins\"\n          })\n        }), \"과 \", _jsx(_components.a, {\n          href: \"https://github.com/rehypejs/rehype/blob/main/doc/plugins.md\",\n          children: _jsx(_components.code, {\n            children: \"rehype plugins\"\n          })\n        }), \"를 활용해서 다양한 기능을 추가할 수 있습니다.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsxs(_components.ol, {\n      start: \"2\",\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"getStaticProps\"\n        }), \"(빌드시점)에서 필요한 데이터를 모두 가공합니다.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"rehype-code-title\",\n      children: \"[...slugs].tsx\"\n    }), _jsx(_components.pre, {\n      className: \"language-ts\",\n      children: _jsxs(_components.code, {\n        className: \"language-ts code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"import\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" GetStaticPaths\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" GetStaticProps \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"from\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'next'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"import\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" serializeMdx \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"from\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'~/libs/mdx'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"import\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" getAllPosts \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"from\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'~/libs/post'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"export\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" getStaticPaths\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function-variable function\",\n            children: \"GetStaticPaths\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=>\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" posts \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"getAllPosts\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"return\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    paths\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" posts\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"map\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"post\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=>\"\n          }), \" \", _jsxs(_components.span, {\n            className: \"token template-string\",\n            children: [_jsx(_components.span, {\n              className: \"token template-punctuation string\",\n              children: \"`\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"/blog/\"\n            }), _jsxs(_components.span, {\n              className: \"token interpolation\",\n              children: [_jsx(_components.span, {\n                className: \"token interpolation-punctuation punctuation\",\n                children: \"${\"\n              }), \"post\", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \".\"\n              }), \"slug\", _jsx(_components.span, {\n                className: \"token interpolation-punctuation punctuation\",\n                children: \"}\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token template-punctuation string\",\n              children: \"`\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    fallback\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'blocking'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"export\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" getStaticProps\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function-variable function\",\n            children: \"GetStaticProps\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"async\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" params \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=>\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" slugs \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" params \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"as\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" slugs\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"string\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" slug \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"...\"\n          }), \"slugs\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"join\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'/'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" post \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"getAllPosts\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"find\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"v\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=>\"\n          }), \" v\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"slug \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"===\"\n          }), \" slug\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"//...\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line highlight-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" mdx \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"await\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"serializeMdx\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"post\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"content\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"return\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    props\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" mdx \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"3\",\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"브라우저는 \", _jsx(_components.code, {\n          children: \"<MDXRemote />\"\n        }), \"를 활용하여 데이터를 HTML로 변환합니다.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-tsx\",\n      children: _jsxs(_components.code, {\n        className: \"language-tsx code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"export\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"default\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"function\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"PostPage\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" mdx \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" mdx\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"MDXRemoteSerializeResult\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"return\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"<\"\n              }), \"div\"]\n            }), \" \", _jsx(_components.span, {\n              className: \"token attr-name\",\n              children: \"className\"\n            }), _jsxs(_components.span, {\n              className: \"token attr-value\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation attr-equals\",\n                children: \"=\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"\\\"\"\n              }), \"prose mt-4 w-full max-w-none dark:prose-dark\", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"\\\"\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \">\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token plain-text\",\n            children: \"\\n\"\n          })]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token plain-text\",\n            children: \"      \"\n          }), _jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"<\"\n              }), _jsx(_components.span, {\n                className: \"token class-name\",\n                children: \"MDXRemote\"\n              })]\n            }), \" \", _jsxs(_components.span, {\n              className: \"token spread\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"{\"\n              }), _jsx(_components.span, {\n                className: \"token spread operator\",\n                children: \"...\"\n              }), \"mdx\", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"}\"\n              })]\n            }), \" \", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"/>\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token plain-text\",\n            children: \"\\n\"\n          })]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token plain-text\",\n            children: \"    \"\n          }), _jsxs(_components.span, {\n            className: \"token tag\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"</\"\n              }), \"div\"]\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \">\"\n            })]\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.h1, {\n      id: \"필수-플러그인\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#필수-플러그인\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"필수 플러그인\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"모두 \", _jsx(_components.code, {\n        children: \"server-side\"\n      }), \"에서 사용하게 될 것이기에 모두 \", _jsx(_components.code, {\n        children: \"devDependency\"\n      }), \"로 설치해줍니다.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-shell\",\n      children: _jsxs(_components.code, {\n        className: \"language-shell code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token function\",\n            children: \"yarn\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"add\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token parameter variable\",\n            children: \"-D\"\n          }), \" remark-gfm remark-toc rehype-prism-plus\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token function\",\n            children: \"yarn\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"add\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token parameter variable\",\n            children: \"-D\"\n          }), \" @tailwindcss/typography\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h3, {\n      id: \"remark-gfm\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#remark-gfm\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"remark-gfm\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://github.com/remarkjs/remark-gfm\",\n        children: \"https://github.com/remarkjs/remark-gfm\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"GFM\"\n      }), \"(autolink literals, footnotes, strikethrough, tables, tasklists...) 문법들을 해석해주는 도구 입니다.\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h3, {\n      id: \"remark-toc\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#remark-toc\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"remark-toc\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://github.com/remarkjs/remark-toc\",\n        children: \"https://github.com/remarkjs/remark-toc\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"Tabel of Content\"\n      }), \" 목차를 만들어 주는 도구 입니다.\", _jsx(_components.br, {}), \"\\n\", \"다른 포스트에서 집중적으로 활용해보도록 합시다.\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h3, {\n      id: \"rehype-prism-plus\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#rehype-prism-plus\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"rehype-prism-plus\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://github.com/timlrx/rehype-prism-plus\",\n        children: \"https://github.com/timlrx/rehype-prism-plus\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://prismjs.com/\",\n        children: _jsx(_components.code, {\n          children: \"prism\"\n        })\n      }), \" 기반으로 코드블럭을 \", _jsx(_components.code, {\n        children: \"syntax highlighting\"\n      }), \"해주는 도구 입니다.\", _jsx(_components.br, {}), \"\\n\", \"highlighting, showLineNumbers, line inserted, line deleted 등 기능도 제공해줍니다.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-js\",\n      children: _jsxs(_components.code, {\n        className: \"language-diff-js code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line line-number highlight-line\",\n          line: \"1\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"function\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"fancyAlert\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token parameter\",\n            children: \"arg\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line line-number\",\n          line: \"2\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token keyword control-flow\",\n            children: \"if\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"arg\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line line-number inserted\",\n          line: \"3\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \"    $\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"facebox\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token literal-property property\",\n            children: \"div\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'#foo'\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line line-number deleted\",\n          line: \"4\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \"    \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"alert\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'#roo'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line line-number\",\n          line: \"5\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line line-number\",\n          line: \"6\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"하지만 코드 토큰만 해석해줄 뿐이지 스타일은 직접 씌워줘야합니다.\", _jsx(_components.br, {}), \"\\n\", \"prism기반의 \", _jsx(_components.a, {\n        href: \"https://github.com/PrismJS/prism-themes\",\n        children: \"다양한 테마\"\n      }), \"를 적용할 수 있으니 취향 것 선택하면 됩니다.\", _jsx(_components.br, {}), \"\\n\", \"저는 \", _jsx(_components.a, {\n        href: \"https://draculatheme.com/prism\",\n        children: \"dracular\"\n      }), \"에서 받아왔습니다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"자세한 설정은 \", _jsx(_components.a, {\n        href: \"https://github.com/bepyan/bepyan.github.io/blob/main/src/styles/code.css\",\n        children: \"제 레포지토리\"\n      }), \"를 참고해주시면 될 것 같습니다. \", _jsx(_components.del, {\n        children: \"생각보다 복잡합니다...\"\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h3, {\n      id: \"tailwindcsstypography\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#tailwindcsstypography\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"@tailwindcss/typography\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://tailwindcss.com/docs/typography-plugin\",\n        children: \"https://tailwindcss.com/docs/typography-plugin\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"tailwind 기반으로 mdx 마크업을 스타일링합니다.\", _jsx(_components.br, {}), \"\\n\", \"쉽게 \", _jsx(_components.a, {\n        href: \"https://tailwindcss.com/docs/typography-plugin#customizing-the-css\",\n        children: \"커스터마이징\"\n      }), \"을 할 수 있습니다.\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h1, {\n      id: \"추천-플로그인\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#추천-플로그인\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"추천 플로그인\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-shell\",\n      children: _jsx(_components.code, {\n        className: \"language-shell code-highlight\",\n        children: _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token function\",\n            children: \"yarn\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"add\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token parameter variable\",\n            children: \"-D\"\n          }), \" rehype-slug rehype-autolink-headings rehype-code-titles\\n\"]\n        })\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"remark-math\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#remark-math\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"remark-math\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://github.com/remarkjs/remark-math\",\n        children: \"https://github.com/remarkjs/remark-math\"\n      })\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h3, {\n      id: \"reading-time\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#reading-time\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"reading-time\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://github.com/ngryman/reading-time\",\n        children: \"https://github.com/ngryman/reading-time\"\n      })\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h3, {\n      id: \"rehype-slug--rehype-autolink-headings\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#rehype-slug--rehype-autolink-headings\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"rehype-slug + rehype-autolink-headings\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://github.com/rehypejs/rehype-slug\",\n        children: \"https://github.com/rehypejs/rehype-slug\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"headings에 id를 심어준다.\\n이전에 많이 사용되었던 remark-slug는 deprecated 되었다.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"rehype-autolink-headings\\n\", _jsx(_components.a, {\n          href: \"https://github.com/rehypejs/rehype-autolink-headings\",\n          children: \"https://github.com/rehypejs/rehype-autolink-headings\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"span.icon.icon-link\"\n      }), \"을 활용하여 anchor를 만들 수 있다.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-css\",\n      children: _jsxs(_components.code, {\n        className: \"language-css code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsxs(_components.span, {\n            className: \"token selector\",\n            children: [\"h2 \", _jsx(_components.span, {\n              className: \"token combinator\",\n              children: \">\"\n            }), \" a \", _jsx(_components.span, {\n              className: \"token combinator\",\n              children: \">\"\n            }), \" span\", _jsx(_components.span, {\n              className: \"token class\",\n              children: \".icon\"\n            }), _jsx(_components.span, {\n              className: \"token class\",\n              children: \".icon-link\"\n            })]\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token property\",\n            children: \"width\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"18\"\n          }), _jsx(_components.span, {\n            className: \"token unit\",\n            children: \"px\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token property\",\n            children: \"height\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"18\"\n          }), _jsx(_components.span, {\n            className: \"token unit\",\n            children: \"px\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsxs(_components.span, {\n            className: \"token selector\",\n            children: [\"h3 \", _jsx(_components.span, {\n              className: \"token combinator\",\n              children: \">\"\n            }), \" a \", _jsx(_components.span, {\n              className: \"token combinator\",\n              children: \">\"\n            }), \" span\", _jsx(_components.span, {\n              className: \"token class\",\n              children: \".icon\"\n            }), _jsx(_components.span, {\n              className: \"token class\",\n              children: \".icon-link\"\n            })]\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token property\",\n            children: \"width\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"15\"\n          }), _jsx(_components.span, {\n            className: \"token unit\",\n            children: \"px\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token property\",\n            children: \"height\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"15\"\n          }), _jsx(_components.span, {\n            className: \"token unit\",\n            children: \"px\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsxs(_components.span, {\n            className: \"token selector\",\n            children: [\"h4 \", _jsx(_components.span, {\n              className: \"token combinator\",\n              children: \">\"\n            }), \" a \", _jsx(_components.span, {\n              className: \"token combinator\",\n              children: \">\"\n            }), \" span\", _jsx(_components.span, {\n              className: \"token class\",\n              children: \".icon\"\n            }), _jsx(_components.span, {\n              className: \"token class\",\n              children: \".icon-link\"\n            })]\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token property\",\n            children: \"width\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"12\"\n          }), _jsx(_components.span, {\n            className: \"token unit\",\n            children: \"px\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token property\",\n            children: \"height\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"12\"\n          }), _jsx(_components.span, {\n            className: \"token unit\",\n            children: \"px\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsxs(_components.span, {\n            className: \"token selector\",\n            children: [\"span\", _jsx(_components.span, {\n              className: \"token class\",\n              children: \".icon\"\n            }), _jsx(_components.span, {\n              className: \"token class\",\n              children: \".icon-link\"\n            })]\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token property\",\n            children: \"display\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" inline-block\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token property\",\n            children: \"width\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"15\"\n          }), _jsx(_components.span, {\n            className: \"token unit\",\n            children: \"px\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token property\",\n            children: \"height\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"15\"\n          }), _jsx(_components.span, {\n            className: \"token unit\",\n            children: \"px\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token property\",\n            children: \"margin-right\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2\"\n          }), _jsx(_components.span, {\n            className: \"token unit\",\n            children: \"px\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token property\",\n            children: \"background-image\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" \", _jsxs(_components.span, {\n            className: \"token url\",\n            children: [_jsx(_components.span, {\n              className: \"token function\",\n              children: \"url\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token string url\",\n              children: \"\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 490 490' style='enable-background:new 0 0 490 490;' xml:space='preserve'%3E%3Cpath d='M64.333 490h58.401l33.878-137.69h122.259L245.39 490h58.401l33.878-137.69h119.92v-48.162h-108.24l29.2-117.324h79.04v-48.162H390.23L424.108 0H365.31l-33.878 138.661H208.79L242.668 0h-58.415l-33.864 138.661H32.411v48.162h106.298l-28.818 117.324h-77.48v48.162h65.8L64.333 490zM197.11 186.824h122.642l-29.2 117.324h-122.26l28.818-117.324z'/%3E%3C/svg%3E\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsxs(_components.span, {\n            className: \"token selector\",\n            children: [_jsx(_components.span, {\n              className: \"token class\",\n              children: \".dark\"\n            }), \" span\", _jsx(_components.span, {\n              className: \"token class\",\n              children: \".icon\"\n            }), _jsx(_components.span, {\n              className: \"token class\",\n              children: \".icon-link\"\n            })]\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token property\",\n            children: \"background-image\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" \", _jsxs(_components.span, {\n            className: \"token url\",\n            children: [_jsx(_components.span, {\n              className: \"token function\",\n              children: \"url\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token string url\",\n              children: \"\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 490 490' style='enable-background:new 0 0 490 490; fill:white;' xml:space='preserve'%3E%3Cpath d='M64.333 490h58.401l33.878-137.69h122.259L245.39 490h58.401l33.878-137.69h119.92v-48.162h-108.24l29.2-117.324h79.04v-48.162H390.23L424.108 0H365.31l-33.878 138.661H208.79L242.668 0h-58.415l-33.864 138.661H32.411v48.162h106.298l-28.818 117.324h-77.48v48.162h65.8L64.333 490zM197.11 186.824h122.642l-29.2 117.324h-122.26l28.818-117.324z'/%3E%3C/svg%3E\\\"\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h1, {\n      id: \"최종-코드\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#최종-코드\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"최종 코드\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"rehype-code-title\",\n      children: \"libs/mdx.ts\"\n    }), _jsx(_components.pre, {\n      className: \"language-ts\",\n      children: _jsxs(_components.code, {\n        className: \"language-ts code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"import\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" serialize \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"from\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'next-mdx-remote/serialize'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"import\"\n          }), \" rehypeAutolinkHeadings \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"from\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'rehype-autolink-headings'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"import\"\n          }), \" rehypeCodeTitles \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"from\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'rehype-code-titles'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"import\"\n          }), \" rehypePrism \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"from\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'rehype-prism-plus'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"import\"\n          }), \" rehypeSlug \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"from\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'rehype-slug'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"import\"\n          }), \" remarkGfm \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"from\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'remark-gfm'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"import\"\n          }), \" remarkToc \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"from\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'remark-toc'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"export\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function-variable function\",\n            children: \"serializeMdx\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"source\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"string\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=>\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"return\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"serialize\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"source\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    parseFrontmatter\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token boolean\",\n            children: \"true\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    mdxOptions\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      remarkPlugins\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), \"remarkToc\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" remarkGfm\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      rehypePlugins\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        rehypeSlug\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        rehypeCodeTitles\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        rehypePrism\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"          rehypeAutolinkHeadings\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"          \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            properties\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"              className\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'anchor'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"            \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"          \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      format\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'mdx'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"참고\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#참고\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"참고\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://yceffort.kr/2020/10/migrate-gatsby-from-nextjs\",\n        children: \"https://yceffort.kr/2020/10/migrate-gatsby-from-nextjs\"\n      }), _jsx(_components.br, {}), \"\\n\", _jsx(_components.a, {\n        href: \"https://colinhemphill.com/blog/fast-static-syntax-highlighting-for-mdx-in-nextjs\",\n        children: \"https://colinhemphill.com/blog/fast-static-syntax-highlighting-for-mdx-in-nextjs\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Project Level Snippets\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.a, {\n        href: \"https://code.visualstudio.com/updates/v1_28#_project-level-snippets\",\n        children: \"https://code.visualstudio.com/updates/v1_28#_project-level-snippets\"\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}