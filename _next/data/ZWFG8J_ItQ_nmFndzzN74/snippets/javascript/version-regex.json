{"pageProps":{"post":{"title":"(JS) regex로 버전 추출하기","description":"jsx\nconst REGEX = /\\d+(\\.\\d+)+/gi;\nconsole.log(''.match(REGEX));\n\n\nhttps://stackoverflow.com/questions/8955657/regex-pattern-to-ex...","icon":"","image":"","tags":["Javascript","regex"],"draft":false,"date":"2022-06-30","content":"\n```jsx\nconst REGEX = /\\d+(\\.\\d+)+/gi;\nconsole.log(''.match(REGEX));\n```\n\nhttps://stackoverflow.com/questions/8955657/regex-pattern-to-extract-version-number-from-string)\n\n네이버 userAgent에서 네이버 버전 추출하기\n\n```jsx\nconst NAVER_USERAGENT_REGEX = /\\d+(\\.\\d+)+/gi;\nconst agent =\n  'Mozilla/5.0 (iPhone; CPU iPhone OS 15_5 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.5 Mobile/15E148 Safari/605.1 NAVER(inapp; search; 1010; 11.12.7; 12MINI)';\nconst version = agent.match(NAVER_USERAGENT_REGEX);\n\nconsole.log(version);\n```\n\n정규식 문법\n[https://heropy.blog/2018/10/28/regexp/](https://heropy.blog/2018/10/28/regexp/)\n\n`^naver` 문자열이 naver로 시작해야 한다.\n\n`$naver` 문자열이 naver로 끝나야 한다.\n\n`\\d{5}` 숫자 5개가 있어야 한다. ⇒ `\\d\\d\\d\\d\\d`\n\n`\\d{3,5}` 숫자가 3~5개 있어야 한다.\n\n`\\d+` 1개 이상이 있어야 한다. ⇒ `\\d{1,}`\n\n`\\d*` 0개 이상 있어야 한다. ⇒ `\\d{0, }`\n\n`\\d?` 0, 1개 있어야 한다. ⇒ `\\d{0,1}`\n\n`\\d$` 줄 끝에서 일치 한다.\n\n`.` 임의의 한 문자와 일치\n\n`[ab]` a 혹은 b와 일치여부 ⇒ `a | b`\n\n테스트 공간\n[https://regexr.com/](https://regexr.com/)\n\n**`match()`**\n메서드는 문자열이 정규식과 매치되는 부분을 검색합니다.\n","slug":"/snippets/javascript/version-regex","readingMinutes":2,"wordCount":127,"snippetSlug":"javascript"},"serize":null,"postFooterProps":{"prevPost":{"title":"(JS) .txt File 만들기","description":"blob을 활용\n\ntsx\nconst blob = new Blob(JSON.stringify(data), { type: 'text/plain' });\nconst textFile = window.URL.createObjectURL(blo...","icon":"","image":"","tags":["Javascript"],"draft":false,"date":"2022-09-03","content":"\nblob을 활용\n\n```tsx\nconst blob = new Blob([JSON.stringify(data)], { type: 'text/plain' });\nconst textFile = window.URL.createObjectURL(blob);\n\nwindow.open(textFile, '_blank');\n```\n\nFile\n\n```tsx\nconst fileName = `${moment(new Date()).format('YYYY-MM-DD HH:mm:ss')}.txt`;\nconst file = new File([JSON.stringify(data)], fileName, {\n  type: 'text/plain;charset=UTF-8',\n});\n```\n\n하지만 한글이 깨지는 문제가 있다.\n\nhttps://www.thecodehubs.com/generate-text-file-using-plain-javascript/\n\n","slug":"/snippets/javascript/txt-file","readingMinutes":1,"wordCount":46,"snippetSlug":"javascript"},"nextPost":{"title":"(ESLint) sort import","description":"eslint sort-imports(https://eslint.org/docs/latest/rules/sort-imports) 설정은 autofix를 제공해주지 않는다.\n\n크게 2가지 방법으로 해결할 수 있다.\n\n---\n\n simpl...","icon":"","image":"","tags":["ESLint","import"],"draft":false,"date":"2023-01-11","content":"\n[**eslint sort-imports**](https://eslint.org/docs/latest/rules/sort-imports) 설정은 `autofix`를 제공해주지 않는다.\n\n크게 2가지 방법으로 해결할 수 있다.\n\n---\n\n## simple-import-sort\n\nplugin을 통해서 설정이 간편하다.\nhttps://github.com/lydell/eslint-plugin-simple-import-sort\n\n```shell\nyarn add -D eslint-plugin-simple-import-sort\n```\n\n```js:.eslintrc.js\nmodule.exports = {\n    //...\n    \"plugins\": [\"simple-import-sort\"],\n    \"rules\": {\n        \"simple-import-sort/imports\": \"error\",\n        \"simple-import-sort/exports\": \"error\"\n    }\n}\n```\n\n`import` 순서 커스텀화\n\n```js\n{\n    'simple-import-sort/imports': [\n        'error',\n        {\n        groups: [['^\\\\u0000'], ['^@?\\\\w'], ['^~/', '^\\\\.']],\n        },\n    ],\n}\n```\n\n---\n\n## eslint-plugin-import\n\n타 plugin과 충돌될 경우 이를 사용하면 좋다. (예를 들어 [eslint-plugin-svelte](https://github.com/ota-meshi/eslint-plugin-svelte))\nhttps://github.com/import-js/eslint-plugin-import\n\n```shell\nyarn add -D eslint-plugin-import\n```\n\n```js:.eslintrc.js\nmodule.exports = {\n    //...\n    settings: {\n        'import/resolver': {\n            alias: {\n                map: [\n                    ['~', './src'],\n                ],\n                extensions: ['.js', '.jsx', '.ts', '.tsx', '.svelte'],\n            },\n        },\n    },\n    rules: {\n        // https://github.com/import-js/eslint-plugin-import/blob/main/docs/rules/order.md\n        'import/order': [\n            'error',\n            {\n                groups: ['builtin', 'external', 'internal', ['parent', 'sibling', 'index']],\n                alphabetize: {\n                    order: 'asc',\n                    caseInsensitive: true,\n                },\n                'newlines-between': 'always',\n            },\n        ],\n        'import/first': 'error',\n        'import/newline-after-import': 'error',\n        'import/prefer-default-export': 'off',\n        'import/no-useless-path-segments': ['error', { noUselessIndex: true }],\n    }\n}\n```\n\n`import/order`가 절대경로를 `internal script`로 인식하기 위해선 `settings.\"import/resolver\"` 설정을 해줘야 한다.\n","slug":"/snippets/lint/eslint-sort-import","readingMinutes":2,"wordCount":158,"snippetSlug":"lint"}},"slug":"/snippets/javascript/version-regex","compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\",\n    button: \"button\",\n    svg: \"svg\",\n    path: \"path\",\n    p: \"p\",\n    a: \"a\",\n    br: \"br\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsx(_components.pre, {\n        className: \"language-jsx\",\n        children: _jsxs(_components.code, {\n          className: \"language-jsx code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token constant\",\n              children: \"REGEX\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsxs(_components.span, {\n              className: \"token regex\",\n              children: [_jsx(_components.span, {\n                className: \"token regex-delimiter\",\n                children: \"/\"\n              }), _jsxs(_components.span, {\n                className: \"token regex-source language-regex\",\n                children: [_jsx(_components.span, {\n                  className: \"token char-set class-name\",\n                  children: \"\\\\d\"\n                }), _jsx(_components.span, {\n                  className: \"token quantifier number\",\n                  children: \"+\"\n                }), _jsx(_components.span, {\n                  className: \"token group punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token special-escape escape\",\n                  children: \"\\\\.\"\n                }), _jsx(_components.span, {\n                  className: \"token char-set class-name\",\n                  children: \"\\\\d\"\n                }), _jsx(_components.span, {\n                  className: \"token quantifier number\",\n                  children: \"+\"\n                }), _jsx(_components.span, {\n                  className: \"token group punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token quantifier number\",\n                  children: \"+\"\n                })]\n              }), _jsx(_components.span, {\n                className: \"token regex-delimiter\",\n                children: \"/\"\n              }), _jsx(_components.span, {\n                className: \"token regex-flags\",\n                children: \"gi\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token console class-name\",\n              children: \"console\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"log\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"''\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"match\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token constant\",\n              children: \"REGEX\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          })]\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://stackoverflow.com/questions/8955657/regex-pattern-to-extract-version-number-from-string\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"https://stackoverflow.com/questions/8955657/regex-pattern-to-extract-version-number-from-string\"\n      }), \")\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"네이버 userAgent에서 네이버 버전 추출하기\"\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsx(_components.pre, {\n        className: \"language-jsx\",\n        children: _jsxs(_components.code, {\n          className: \"language-jsx code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token constant\",\n              children: \"NAVER_USERAGENT_REGEX\"\n            }), \" \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" \", _jsxs(_components.span, {\n              className: \"token regex\",\n              children: [_jsx(_components.span, {\n                className: \"token regex-delimiter\",\n                children: \"/\"\n              }), _jsxs(_components.span, {\n                className: \"token regex-source language-regex\",\n                children: [_jsx(_components.span, {\n                  className: \"token char-set class-name\",\n                  children: \"\\\\d\"\n                }), _jsx(_components.span, {\n                  className: \"token quantifier number\",\n                  children: \"+\"\n                }), _jsx(_components.span, {\n                  className: \"token group punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token special-escape escape\",\n                  children: \"\\\\.\"\n                }), _jsx(_components.span, {\n                  className: \"token char-set class-name\",\n                  children: \"\\\\d\"\n                }), _jsx(_components.span, {\n                  className: \"token quantifier number\",\n                  children: \"+\"\n                }), _jsx(_components.span, {\n                  className: \"token group punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token quantifier number\",\n                  children: \"+\"\n                })]\n              }), _jsx(_components.span, {\n                className: \"token regex-delimiter\",\n                children: \"/\"\n              }), _jsx(_components.span, {\n                className: \"token regex-flags\",\n                children: \"gi\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" agent \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [\"  \", _jsx(_components.span, {\n              className: \"token string\",\n              children: \"'Mozilla/5.0 (iPhone; CPU iPhone OS 15_5 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.5 Mobile/15E148 Safari/605.1 NAVER(inapp; search; 1010; 11.12.7; 12MINI)'\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token keyword\",\n              children: \"const\"\n            }), \" version \", _jsx(_components.span, {\n              className: \"token operator\",\n              children: \"=\"\n            }), \" agent\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"match\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), _jsx(_components.span, {\n              className: \"token constant\",\n              children: \"NAVER_USERAGENT_REGEX\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"\\n\"\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsx(_components.span, {\n              className: \"token console class-name\",\n              children: \"console\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), _jsx(_components.span, {\n              className: \"token method function property-access\",\n              children: \"log\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"(\"\n            }), \"version\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \")\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \";\"\n            }), \"\\n\"]\n          })]\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"정규식 문법\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.a, {\n        href: \"https://heropy.blog/2018/10/28/regexp/\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"https://heropy.blog/2018/10/28/regexp/\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"^naver\"\n      }), \" 문자열이 naver로 시작해야 한다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"$naver\"\n      }), \" 문자열이 naver로 끝나야 한다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"\\\\d{5}\"\n      }), \" 숫자 5개가 있어야 한다. ⇒ \", _jsx(_components.code, {\n        children: \"\\\\d\\\\d\\\\d\\\\d\\\\d\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"\\\\d{3,5}\"\n      }), \" 숫자가 3~5개 있어야 한다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"\\\\d+\"\n      }), \" 1개 이상이 있어야 한다. ⇒ \", _jsx(_components.code, {\n        children: \"\\\\d{1,}\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"\\\\d*\"\n      }), \" 0개 이상 있어야 한다. ⇒ \", _jsx(_components.code, {\n        children: \"\\\\d{0, }\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"\\\\d?\"\n      }), \" 0, 1개 있어야 한다. ⇒ \", _jsx(_components.code, {\n        children: \"\\\\d{0,1}\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"\\\\d$\"\n      }), \" 줄 끝에서 일치 한다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \".\"\n      }), \" 임의의 한 문자와 일치\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"[ab]\"\n      }), \" a 혹은 b와 일치여부 ⇒ \", _jsx(_components.code, {\n        children: \"a | b\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"테스트 공간\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.a, {\n        href: \"https://regexr.com/\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"https://regexr.com/\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: _jsx(_components.code, {\n          children: \"match()\"\n        })\n      }), _jsx(_components.br, {}), \"\\n\", \"메서드는 문자열이 정규식과 매치되는 부분을 검색합니다.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tableOfContents":[]},"__N_SSG":true}