{"pageProps":{"post":{"title":"기술 블로그를 만들 때 고려해야 할 점","description":"블로그를 만들 때 어떤 것들을 고려해야 할까? 🤔","tags":["Next.js","Blog"],"date":"2022-11-11","content":"\n블로그를 만드는데 생각보다 고려해야할 사항이 많습니다.\n어떤 레이아웃을 갖어야 할지, 기능을 어디까지 제공해줘야 할지, 리소스를 어떻게 관리할지...\n그 중 SEO를 잘 처리하는 것이 가장 중요한 것 같습니다. 사람들이 검색을 통해서 블로그로 유입되기 때문입니다.\n\n---\n\n## 블로그 제작 과정\n\n블로그 제작 과정을 요약해보면 고려해야할 점을 자연스럽게 알게 됩니다.\n\n### 1. 기본 레이아웃 세팅 (+ 반응형)\n\n다양한 블로그를 탐방하면서 참고하기 좋은 레퍼런스를 기록해두면 좋습니다.\n결국 모방하면서 나만의 레이아웃을 구축할 수 있게 되기 때문이죠.\n저는 아래 블로그들에서 영감을 얻었습니다.\n\n- https://yceffort.kr/pages/1\n- https://blog.shiren.dev/\n- https://leerob.io/\n- https://ped.ro/\n- https://blog.toss.im/\n- ...\n\n### 2. 디랙토리 기반으로 페이지 생성\n\n마크다운 파일 디랙토리 기반을 블로그 페이지를 생성하게 됩니다.\n따라서 디랙토리 구조 또한 사전에 잘 설계를 해야 합니다.\n\n보통 날짜 기반으로 유닉한 디랙토리를 생성합니다.\n\n```:/2022/11/example\nposts\nㄴ 2022\n   ㄴ 11\n      ㄴ example.mdx\n```\n\n### 3. 마크다운 파일을 HTML 파일로 파싱\n\n[`remark`](https://github.com/remarkjs/remark/blob/main/doc/plugins.md)과 [`rehype`](https://github.com/rehypejs/rehype/blob/main/doc/plugins.md)를 활용해서 마크다운 파일을 파싱할 수 있습니다.\n추가로 [**mdx**](https://mdxjs.com/)을 활용하여 마크다운 파일에서도 jsx 컴포넌트를 사용할 수 있습니다.\n\n### 4. 사이트 자동 배포 구축\n\n[**github pages**](https://pages.github.com/)에 무료로 호스팅을 할 수 있습니다.\nGithub Action을 통해서 commit을 push시 자동으로 배포되도록 합니다.\n\n### 5. SEO 최적화 + 검색엔진 등록\n\n크롤러에게 HTML 문서의 주요 정보를 제공해주면 검색엔진 등록, SNS 공유시 도움이 됩니다.\n대표적으로 Open Graph을 활용하는 방법이 있습니다.\n\n```html\n<meta property=\"og:url\" content=\"\" />\n<meta property=\"og:title\" content=\"\" />\n<meta property=\"og:description\" content=\"\" />\n<meta property=\"og:image\" content=\"\" />\n```\n\n자세한 내용은 인터넷에서 참고 바랍니다.\nhttps://blog.ab180.co/posts/open-graph-as-a-website-preview\n\n### 6. 추가 기능 붙이기\n\n- 댓글\n- 이미지 랜더링 최적화\n- 이미지 삽입 최적화\n- 이미지 확대\n- TOC 배너\n- 다크모드\n- ...\n\n---\n\n## 기술 스택 선정하기\n\n개인 블로그는 생각보다 유지보수에 많은 시간을 쏟아야 합니다.\n따라서 자신에게 친숙한 도구를 사용하는게 좋습니다.\n\n저는 여러 기능을 첨가하고 조금은 복잡한 UI를 만들 것이기 때문에 `typescript`를 사용했고,\n레이아웃을 쉽게 구축하기 위해 `tailwindcss`를 사용했고,\n개인적으로 친숙한 `React` 기반의 프레임워크를 사용하기로 했습니다.\n\n---\n\n### Gatsby vs Next.js\n\n사실 둘러보면 대체로 Gastby로 블로그 만드는 것을 볼 수 있습니다.\n[**gastby-plugin**](https://www.gatsbyjs.com/plugins)에서 마법같은 기능들을 제공해줘서 쉽게 블로그를 구축할 수 있기 때문입니다.\n하지만 graphQL에 의존적이여 불필요하게 웹앱이 무겁게 돌아가고 라이브러리 버전업에 취약합니다.\ngastby 버전을 올리는 순간 기존 플로그인들이 대거 충돌됩니다.\n\nNext.js는 이에 비해 훨씬 유연하고 의존성에 덜 취약합니다.\n요즘 커뮤니티도 훨씬 활성화 되어 있고 [**nextra**](https://nextra.site/) 같은 site generation 프레임워크도 있습니다.\n\n다만 만약 **static-html**(github pages, nestify)를 생각한다면 [**Nextjs Unsupported Features**](https://nextjs.org/docs/advanced-features/static-html-export#unsupported-features)에 대해서 꼭 확인하시길 바랍니다.\nvercel에 배포하는 것이 정신 건강에 의로울 수 있습니다.\n\n---\n\n그럼 자세히 어떻게 만드는지 살펴보도록 합시다.\n","slug":"/blog/nextjs-blog/1-boilerplate","readingMinutes":5,"wordCount":383,"serizeSlug":"nextjs-blog"},"postFooterProps":{"prevPost":null,"nextPost":{"title":"Next.js 블로그 글 페이지 만들기","description":"glob를 활용하여 디랙토리 기반으로 페이지들을 생성해보자 🤔","tags":["Next.js","Blog","glob"],"date":"2022-11-11","slug":"/blog/nextjs-blog/2-blog-list","readingMinutes":3,"wordCount":333,"serizeSlug":"nextjs-blog"}},"serize":{"title":"Next.js로 블로그 만들기","description":"100% 취향 반영, 내 손으로 직접 블로그를 만들어 보자!!","tags":[],"draft":false,"date":"2022-11-11","posts":[{"title":"기술 블로그를 만들 때 고려해야 할 점","description":"블로그를 만들 때 어떤 것들을 고려해야 할까? 🤔","tags":["Next.js","Blog"],"date":"2022-11-11","slug":"/blog/nextjs-blog/1-boilerplate","readingMinutes":5,"wordCount":383,"serizeSlug":"nextjs-blog"},{"title":"Next.js 블로그 글 페이지 만들기","description":"glob를 활용하여 디랙토리 기반으로 페이지들을 생성해보자 🤔","tags":["Next.js","Blog","glob"],"date":"2022-11-11","slug":"/blog/nextjs-blog/2-blog-list","readingMinutes":3,"wordCount":333,"serizeSlug":"nextjs-blog"},{"title":"Next.js 블로그 글의 추가 정보 파싱하기","description":"gray-matter, reading-time 등을 활용하여 글에 대한 추가 정보를 알아내자.","tags":["Next.js","Blog"],"date":"2022-11-11","slug":"/blog/nextjs-blog/2-blog-listInfo","readingMinutes":5,"wordCount":508,"serizeSlug":"nextjs-blog"},{"title":"Next.js mdx plugin","description":"`next-mdx-remote`에서 플로그인으로 이쁜 결과물을 만들자.","tags":["Next.js","Blog"],"draft":false,"date":"2022-11-11","slug":"/blog/nextjs-blog/3-mdx-plugin","readingMinutes":8,"wordCount":832,"serizeSlug":"nextjs-blog"},{"title":"Next.js 블로그 Github Pages에 자동 배포하기","description":"Github Action을 활용하여 자동으로 Github Pages에 배포되도록 하자.","icon":"","image":"","tags":["Next.js","Blog","github action","github pages"],"draft":false,"date":"2022-11-12","slug":"/blog/nextjs-blog/4-deploy","readingMinutes":3,"wordCount":280,"serizeSlug":"nextjs-blog"},{"title":"Next.js 블로그 sitemap 생성, 검색엔진 등록","description":"`next-sitemap` 라이브러리를 사용해서 쉽게 sitemap 만들고 검색엔진에 등록하자.","tags":["Next.js","Blog","SEO"],"draft":false,"date":"2022-11-15","slug":"/blog/nextjs-blog/5-create-sitemap","readingMinutes":5,"wordCount":394,"serizeSlug":"nextjs-blog"},{"title":"Next.js 블로그 Google Analytics 연동하기","description":"블로그에 Google Analytics v4를 심어주자!","tags":["Next.js","Blog","Typescript","GA"],"draft":false,"date":"2022-11-16","slug":"/blog/nextjs-blog/5-google-analytics","readingMinutes":4,"wordCount":502,"serizeSlug":"nextjs-blog"},{"title":"Next.js 블로그 댓글 기능 추가하기 (feat. giscus)","description":"💎 Giscus를 활용하여 Next.js 블로그에 댓글, 대댓글, 리액션을 달 수 있도록 해주자!","tags":["Next.js","Blog","giscus"],"draft":false,"date":"2022-11-13","slug":"/blog/nextjs-blog/6-comments","readingMinutes":4,"wordCount":380,"serizeSlug":"nextjs-blog"},{"title":"Next.js 블로그 Image Optimization","description":"Next.js static html에서 이미지를 기똥차게 사용해보자!","tags":["Next.js","Blog","image","optimization"],"draft":false,"date":"2022-11-14","slug":"/blog/nextjs-blog/6-image-optimization","readingMinutes":3,"wordCount":291,"serizeSlug":"nextjs-blog"},{"title":"Next.js 블로그 mdx에서 이미지 복붙하기 (feat. Paste Image)","description":"vscode markdown 파일에서 이미지를 기똥차게 사용해보자!","tags":["Next.js","Blog","markdown","Paste Image"],"draft":false,"date":"2022-11-15","slug":"/blog/nextjs-blog/6-images-use-in-vscode","readingMinutes":2,"wordCount":175,"serizeSlug":"nextjs-blog"}],"readingMinutes":42,"slug":"/blog/nextjs-blog"},"slug":"/blog/nextjs-blog/1-boilerplate","compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    br: \"br\",\n    hr: \"hr\",\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    div: \"div\",\n    pre: \"pre\",\n    code: \"code\",\n    button: \"button\",\n    svg: \"svg\",\n    path: \"path\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"블로그를 만드는데 생각보다 고려해야할 사항이 많습니다.\", _jsx(_components.br, {}), \"\\n\", \"어떤 레이아웃을 갖어야 할지, 기능을 어디까지 제공해줘야 할지, 리소스를 어떻게 관리할지...\", _jsx(_components.br, {}), \"\\n\", \"그 중 SEO를 잘 처리하는 것이 가장 중요한 것 같습니다. 사람들이 검색을 통해서 블로그로 유입되기 때문입니다.\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h2, {\n      id: \"블로그-제작-과정\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#블로그-제작-과정\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"블로그 제작 과정\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"블로그 제작 과정을 요약해보면 고려해야할 점을 자연스럽게 알게 됩니다.\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"1-기본-레이아웃-세팅--반응형\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#1-기본-레이아웃-세팅--반응형\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"1. 기본 레이아웃 세팅 (+ 반응형)\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"다양한 블로그를 탐방하면서 참고하기 좋은 레퍼런스를 기록해두면 좋습니다.\", _jsx(_components.br, {}), \"\\n\", \"결국 모방하면서 나만의 레이아웃을 구축할 수 있게 되기 때문이죠.\", _jsx(_components.br, {}), \"\\n\", \"저는 아래 블로그들에서 영감을 얻었습니다.\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://yceffort.kr/pages/1\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"https://yceffort.kr/pages/1\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://blog.shiren.dev/\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"https://blog.shiren.dev/\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://leerob.io/\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"https://leerob.io/\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://ped.ro/\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"https://ped.ro/\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://blog.toss.im/\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"https://blog.toss.im/\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"...\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"2-디랙토리-기반으로-페이지-생성\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#2-디랙토리-기반으로-페이지-생성\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"2. 디랙토리 기반으로 페이지 생성\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"마크다운 파일 디랙토리 기반을 블로그 페이지를 생성하게 됩니다.\", _jsx(_components.br, {}), \"\\n\", \"따라서 디랙토리 구조 또한 사전에 잘 설계를 해야 합니다.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"보통 날짜 기반으로 유닉한 디랙토리를 생성합니다.\"\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsxs(_components.div, {\n        className: \"rehype-code-wrap--title\",\n        children: [_jsx(_components.div, {\n          className: \"rehype-code-wrap--title-text\",\n          children: \"/2022/11/example\"\n        }), _jsx(_components.div, {\n          className: \"rehype-code-wrap--title-blank\"\n        })]\n      }), _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"language- code-highlight\",\n          children: [_jsx(_components.span, {\n            className: \"code-line\",\n            children: \"posts\\n\"\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"ㄴ 2022\\n\"\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"   ㄴ 11\\n\"\n          }), _jsx(_components.span, {\n            className: \"code-line\",\n            children: \"      ㄴ example.mdx\\n\"\n          })]\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"3-마크다운-파일을-html-파일로-파싱\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#3-마크다운-파일을-html-파일로-파싱\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"3. 마크다운 파일을 HTML 파일로 파싱\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://github.com/remarkjs/remark/blob/main/doc/plugins.md\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: _jsx(_components.code, {\n          children: \"remark\"\n        })\n      }), \"과 \", _jsx(_components.a, {\n        href: \"https://github.com/rehypejs/rehype/blob/main/doc/plugins.md\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: _jsx(_components.code, {\n          children: \"rehype\"\n        })\n      }), \"를 활용해서 마크다운 파일을 파싱할 수 있습니다.\", _jsx(_components.br, {}), \"\\n\", \"추가로 \", _jsx(_components.a, {\n        href: \"https://mdxjs.com/\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: _jsx(_components.strong, {\n          children: \"mdx\"\n        })\n      }), \"을 활용하여 마크다운 파일에서도 jsx 컴포넌트를 사용할 수 있습니다.\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"4-사이트-자동-배포-구축\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#4-사이트-자동-배포-구축\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"4. 사이트 자동 배포 구축\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://pages.github.com/\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: _jsx(_components.strong, {\n          children: \"github pages\"\n        })\n      }), \"에 무료로 호스팅을 할 수 있습니다.\", _jsx(_components.br, {}), \"\\n\", \"Github Action을 통해서 commit을 push시 자동으로 배포되도록 합니다.\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"5-seo-최적화--검색엔진-등록\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#5-seo-최적화--검색엔진-등록\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"5. SEO 최적화 + 검색엔진 등록\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"크롤러에게 HTML 문서의 주요 정보를 제공해주면 검색엔진 등록, SNS 공유시 도움이 됩니다.\", _jsx(_components.br, {}), \"\\n\", \"대표적으로 Open Graph을 활용하는 방법이 있습니다.\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rehype-code-wrap\",\n      children: [_jsx(_components.pre, {\n        className: \"language-html\",\n        children: _jsxs(_components.code, {\n          className: \"language-html code-highlight\",\n          children: [_jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"meta\"]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"property\"\n              }), _jsxs(_components.span, {\n                className: \"token attr-value\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation attr-equals\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                }), \"og:url\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                })]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"content\"\n              }), _jsxs(_components.span, {\n                className: \"token attr-value\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation attr-equals\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                })]\n              }), \" \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"/>\"\n              })]\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"meta\"]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"property\"\n              }), _jsxs(_components.span, {\n                className: \"token attr-value\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation attr-equals\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                }), \"og:title\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                })]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"content\"\n              }), _jsxs(_components.span, {\n                className: \"token attr-value\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation attr-equals\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                })]\n              }), \" \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"/>\"\n              })]\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"meta\"]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"property\"\n              }), _jsxs(_components.span, {\n                className: \"token attr-value\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation attr-equals\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                }), \"og:description\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                })]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"content\"\n              }), _jsxs(_components.span, {\n                className: \"token attr-value\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation attr-equals\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                })]\n              }), \" \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"/>\"\n              })]\n            }), \"\\n\"]\n          }), _jsxs(_components.span, {\n            className: \"code-line\",\n            children: [_jsxs(_components.span, {\n              className: \"token tag\",\n              children: [_jsxs(_components.span, {\n                className: \"token tag\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"<\"\n                }), \"meta\"]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"property\"\n              }), _jsxs(_components.span, {\n                className: \"token attr-value\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation attr-equals\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                }), \"og:image\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                })]\n              }), \" \", _jsx(_components.span, {\n                className: \"token attr-name\",\n                children: \"content\"\n              }), _jsxs(_components.span, {\n                className: \"token attr-value\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation attr-equals\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\"\"\n                })]\n              }), \" \", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"/>\"\n              })]\n            }), \"\\n\"]\n          })]\n        })\n      }), _jsxs(_components.button, {\n        className: \"rehype-code-wrap--copy\",\n        children: [_jsxs(_components.svg, {\n          className: \"rehype-code-wrap--copy-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: [_jsx(_components.path, {\n            d: \"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"\n          }), _jsx(_components.path, {\n            d: \"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"\n          })]\n        }), _jsx(_components.svg, {\n          className: \"rehype-code-wrap--check-icon\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"16\",\n          width: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"currentColor\",\n          children: _jsx(_components.path, {\n            d: \"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"\n          })\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"자세한 내용은 인터넷에서 참고 바랍니다.\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.a, {\n        href: \"https://blog.ab180.co/posts/open-graph-as-a-website-preview\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"https://blog.ab180.co/posts/open-graph-as-a-website-preview\"\n      })]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"6-추가-기능-붙이기\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#6-추가-기능-붙이기\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"6. 추가 기능 붙이기\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"댓글\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"이미지 랜더링 최적화\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"이미지 삽입 최적화\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"이미지 확대\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"TOC 배너\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"다크모드\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"...\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h2, {\n      id: \"기술-스택-선정하기\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#기술-스택-선정하기\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"기술 스택 선정하기\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"개인 블로그는 생각보다 유지보수에 많은 시간을 쏟아야 합니다.\", _jsx(_components.br, {}), \"\\n\", \"따라서 자신에게 친숙한 도구를 사용하는게 좋습니다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"저는 여러 기능을 첨가하고 조금은 복잡한 UI를 만들 것이기 때문에 \", _jsx(_components.code, {\n        children: \"typescript\"\n      }), \"를 사용했고,\", _jsx(_components.br, {}), \"\\n\", \"레이아웃을 쉽게 구축하기 위해 \", _jsx(_components.code, {\n        children: \"tailwindcss\"\n      }), \"를 사용했고,\", _jsx(_components.br, {}), \"\\n\", \"개인적으로 친숙한 \", _jsx(_components.code, {\n        children: \"React\"\n      }), \" 기반의 프레임워크를 사용하기로 했습니다.\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.h3, {\n      id: \"gatsby-vs-nextjs\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#gatsby-vs-nextjs\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Gatsby vs Next.js\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"사실 둘러보면 대체로 Gastby로 블로그 만드는 것을 볼 수 있습니다.\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.a, {\n        href: \"https://www.gatsbyjs.com/plugins\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: _jsx(_components.strong, {\n          children: \"gastby-plugin\"\n        })\n      }), \"에서 마법같은 기능들을 제공해줘서 쉽게 블로그를 구축할 수 있기 때문입니다.\", _jsx(_components.br, {}), \"\\n\", \"하지만 graphQL에 의존적이여 불필요하게 웹앱이 무겁게 돌아가고 라이브러리 버전업에 취약합니다.\", _jsx(_components.br, {}), \"\\n\", \"gastby 버전을 올리는 순간 기존 플로그인들이 대거 충돌됩니다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Next.js는 이에 비해 훨씬 유연하고 의존성에 덜 취약합니다.\", _jsx(_components.br, {}), \"\\n\", \"요즘 커뮤니티도 훨씬 활성화 되어 있고 \", _jsx(_components.a, {\n        href: \"https://nextra.site/\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: _jsx(_components.strong, {\n          children: \"nextra\"\n        })\n      }), \" 같은 site generation 프레임워크도 있습니다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"다만 만약 \", _jsx(_components.strong, {\n        children: \"static-html\"\n      }), \"(github pages, nestify)를 생각한다면 \", _jsx(_components.a, {\n        href: \"https://nextjs.org/docs/advanced-features/static-html-export#unsupported-features\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: _jsx(_components.strong, {\n          children: \"Nextjs Unsupported Features\"\n        })\n      }), \"에 대해서 꼭 확인하시길 바랍니다.\", _jsx(_components.br, {}), \"\\n\", \"vercel에 배포하는 것이 정신 건강에 의로울 수 있습니다.\"]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: \"그럼 자세히 어떻게 만드는지 살펴보도록 합시다.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","tableOfContents":[{"slug":"블로그-제작-과정","text":"블로그 제작 과정","subSections":[{"slug":"1-기본-레이아웃-세팅--반응형","text":"1. 기본 레이아웃 세팅 (+ 반응형)"},{"slug":"2-디랙토리-기반으로-페이지-생성","text":"2. 디랙토리 기반으로 페이지 생성"},{"slug":"3-마크다운-파일을-html-파일로-파싱","text":"3. 마크다운 파일을 HTML 파일로 파싱"},{"slug":"4-사이트-자동-배포-구축","text":"4. 사이트 자동 배포 구축"},{"slug":"5-seo-최적화--검색엔진-등록","text":"5. SEO 최적화 + 검색엔진 등록"},{"slug":"6-추가-기능-붙이기","text":"6. 추가 기능 붙이기"}]},{"slug":"기술-스택-선정하기","text":"기술 스택 선정하기","subSections":[{"slug":"gatsby-vs-nextjs","text":"Gatsby vs Next.js"}]}]},"__N_SSG":true}